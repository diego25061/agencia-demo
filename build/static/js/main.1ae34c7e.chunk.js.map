{"version":3,"sources":["assets/logo_yllari.png","assets/vistas/huascaran.png","assets/vistas/machupichu.png","assets/vistas/costaverdehd.png","components/FileCard/FileCard.js","common/Constantes.js","common/Services/Requester.js","containers/TablaBuscador/TablaBuscador.js","containers/ViewFiles/ViewFiles.js","components/ElementoForm/ElementoForm.js","containers/VerClientes/CamposCrearCliente/CamposCrearCliente.js","containers/ModalTrxSimple/ModalTrxSimple.js","components/ContainedComponent.jsx","components/MensajeTransaccion/MensajeTransaccion.js","containers/MostradorProovedores/ModalCrearEditarProveedor.js","components/InputSearchableData/InputSearchableData.jsx","components/ModalCrearBiblia/ModalCrearBiblia.js","containers/ViewFiles/CrearFile/CrearFile.js","containers/Inicio/Inicio.js","containers/VerServicios/VerServicios.js","containers/VerServicios/CrearServicio/CrearServicio.js","containers/VerBiblias/VerBiblias.js","containers/MostradorProovedores/TabTodos/TabTodos.js","containers/MostradorProovedores/TabHoteles/TabHoteles.js","containers/MostradorProovedores/TabHoteles/TabProovs.js","containers/MostradorProovedores/TabRestaurantes/TabRestaurantes.js","containers/MostradorProovedores/TabTransportes/TabTransportes.js","containers/MostradorProovedores/TabGuias/TabGuias.js","containers/MostradorProovedores/TabOperadores/TabOperadores.js","containers/MostradorProovedores/TabEmpresas/TabEmpresas.js","containers/MostradorProovedores/TabPersonas/TabPersonas.js","containers/MostradorProovedores/MostradorProveedores.js","containers/VerClientes/ModalCrearEditarCliente.js","containers/VerClientes/TabClientes.js","containers/VerClientes/TabTodos/TabTodosClientes.js","containers/VerClientes/VerClientes.js","containers/Calendario/VerCalendario.js","containers/Test/ModalPrueba1.jsx","containers/Test/Pruebas.jsx","components/NavBar/NavBar.js","containers/Auth/Auth.js","components/Mostrador404/Mostrador404.jsx","containers/MainContent/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Component","CONSTANTES_GLOBALES","ListaMeses","key","text","value","AliasClientes","CLIENTE_DIRECTO","OPERADOR_MAYORISTA","OPERADOR_MINORISTA","AliasProovedores","PERSONA","EMPRESA","HOTEL","RESTAURANTE","TRANSPORTE","GUIA","OPERADOR","TiposClientes","TiposServicios","TiposProveedores","aliasATextoProovedores","alias","console","log","aliasATextoClientes","AliasServicios","SERVICIO","Configuracion","ServerUrl","EnlacesNavBar","nombre","valor","CodigoMesATexto","codigoMes","obj","find","x","RptaTrx","response","_this","this","Object","classCallCheck","set","cont","msj","trace","cod","transaccionExitosa","Requester","direccion","funcSuccess","funcError","funcAlways","auth","arguments","length","undefined","axios","get","headers","Authorization","store","token","then","data","err","catch","error","r","objeto","post","resp","getPing","requestBasicoGet","getInfo","postLogin","requestBasicoPost","postFile","file","postEditarFile","postBorrarFile","idFile","getListadoFiles","getFile","getHoteles","getBibliasDropdownCompleto","getBibliasDetalle","postBiblia","getServiciosTodos","getServiciosPorMes","mes","getServiciosGeneralesDetalle","getServiciosTransporteDetalle","postServicio","idProveedor","fecha","tipoServicio","horaRecojo","horaSalida","vuelo","pasajeros","vr","tc","observaciones","ciudad","nombrePasajero","tren","alm","transporte","hotel","getClientesFullDetallado","getClientesListaDropdown","postCliente","tipo","correo","numeroContacto","numeroContactoAdicional","correoAdicional","pais","body","CorreoContacto","numeroAdicional","postEditarCliente","idCliente","postEliminarCliente","id","getHotelesListaDropdown","getProveedores","tipoProveedor","getProveedoresMenosTransportes","getProveedoresTransportes","getProveedoresDropdown","postEliminarProv","postProveedor","postEditarProv","postProvHotel","postEditarProvHotel","postProvOperador","postProvRestaurante","postProvTransporte","postProvGuia","postProvEmpresa","postProvPersona","getCiudades","getPaises","TablaBuscador","state","queryBusqueda","columnasDefault","Header","accessor","Cell","props","react_default","a","createElement","className","_this2","dataFiltrada","query","queryForzado","filter","objetoFila","property","hasOwnProperty","val","String","toLowerCase","includes","Container","fluid","Input","style","padding","placeholder","onChange","e","vaciarQueryForzado","setState","target","es","columns","defaultPageSize","minRows","ViewFiles","open","idFileABorrar","codigoFileABorrar","files","cargarFiles","rpta","listaFiles","map","i","codigo","descripcion","biblia","nombreBiblia","cliente","nombreCliente","fechaCreacion","split","cantServicios","cantTransportes","render","cols","show","urlVer","row","urlEditar","textAlign","react_router_dom","to","Button","circular","icon","color","onClick","openConfirm","size","primary","Segment","containers_TablaBuscador_TablaBuscador","Confirm","content","onCancel","closeConfirm","onConfirm","rptaError","codFile","codigoFile","ElementoForm","titulo","black","children","ContainedComponent","getParentContainer","objectSpread","parent","pack","UpdateParentContainer","defineProperty","MensajeTransaccion","lineasMensaje","rptaTransaccion","transaccionEnviada","responseRecibida","Message","Icon","name","loading","Content","headerCargando","textoCargando","success","headerExito","List","textoExito","Item","negative","headerError","ModalCrearEditarProveedor","componentDidMount","CompElegir","elegirTipo","Grid","Row","Column","components_ElementoForm_ElementoForm","grid","Dropdown","search","selection","options","Constantes","event","campos","modo","asd","components_MensajeTransaccion_MensajeTransaccion","mensaje","enviado","recibido","respuesta","Modal","abierto","centered","onClose","enCerrar","sustantivoTitulo","placeholderNombre","iconPosition","placeholderCorreo","placeholderCorreoAdic","correoAdic","num","numAdic","Actions","positive","labelPosition","enEnviar","enEditar","InputSearchableDataButton","_React$createElement","transparent","list","linkId","disabled","onBlur","foundVal","datalist","setValue","sideButton","React","ModalCrearBiblia","parentComponent","modalBiblia","newState","anho","EnviarPostBiblia","CampoServicio","margin","as","componente","CrearFile","possibleConstructorReturn","getPrototypeOf","call","servicio","servicioDefault","transporteDefault","modalCliente","idBiblia","servicios","transportes","bibliasCargaron","clientesCargaron","hotelesCargaron","opcionesBiblia","opcionesCliente","opcionesProveedores","opcionesTransportes","opcionesCiudades","opcionesPaises","modalCrearEditarProveedor","modalCrearProveedorTransporte","transaccionEnviadaCrearFile","responseRecibidaCrearFile","rptaTransaccionCrearFile","mensajeCreacionFile","creacionFileExitosa","contenedorCamposModalCliente","modoVer","modoEditar","estiloTextArea","borderStyle","controlBiblia","InputSearchableData","controlCliente","controlDescripcion","TextArea","rows","width","Form","secondary","elem","index","idServicio","CuerpoServicio","floated","servs","slice","push","CuerpoTransporte","transps","EnviarPostFile","components_ModalCrearBiblia_ModalCrearBiblia","assertThisInitialized","MostradorProovedores_ModalCrearEditarProveedor","enEnviarProovedor","enCerrarModalProveedor","enEnviarProveedorTransporte","enCerrarModalProveedorTransportes","cargarFileBase","cargarClientes","listaOpsCliente","element","clientesCargaronExito","cargarBiblias","listaBiblias","bibliasCargaronExito","cargarCiudades","cargarPaises","cargarProveedoresNoTransp","listaProovs","hotelesCargaronExito","cargarTransportes","controlProveedor","backgroundColor","modal","proovedor","Group","horizontal","verticalAlign","lista","splice","CrearFile_CampoServicio","commonjs","closable","dateFormat","_ref","type","controlProveedorTransporte","trans","_ref2","transs","_ref3","_ref4","func","EnviarPostCliente","camposModalCliente","newStateModalBiblia","abrirModalProveedor","abrirModalProveedorTransporte","resetearCamposModalProveedorTransportes","Inicio","lib","showThumbs","showArrows","autoPlay","stopOnHover","infiniteLoop","interval","emulateTouch","src","Huascaran","Machupichu","Costaverde","VerServicios","modalServicio","proveedor","serviciosServ","serviciosTransp","queryForzadoServs","queryForzadoTransps","vaciarQueryForzadoServs","vaciarQueryForzadoTransps","enviarServicio","cargarServsGenerales","cargarServsTransportes","cantPasajeros","pasajero","transportista","moment","tz","format","add","CrearServicio","camposTransp","camposServ","ListaBiblias","biblias","navegar","history","onlyUnique","meses","cantidadFiles","sort","b","tertiary","Card","header","extra","fitted","self","indexOf","TabTodos","proveedores","columnasTabla","cargarTodos","proovs","numeroCntctAdicional","TabProovs","confirmacionEliminarAbierta","idEliminar","modalCrearEditar","abrirModalEdicion","original","intentarEliminar","sustPlural","abrirModal","sust","enviarProov","editarProov","enCerrarModal","cancelButton","confirmButton","cerrarConfirmacionEliminar","confirmarEliminar","cargarProovs","funcEnviar","MostradorProveedores","activeIndex","panes","menuItem","Menu","Tab","Pane","MostradorProovedores_TabTodos_TabTodos","TabHoteles_TabProovs","renderActiveOnly","onTabChange","ModalCrearEditarCliente","numero","TabClientes","clientesDirs","nummeroContacto","enviarCliente","editarCliente","correoContacto","VerClientes_ModalCrearEditarCliente","TabTodosClientes","clientes","TabTodos_TabTodosClientes","VerClientes_TabClientes","VerClientes","localizer","BigCalendar","momentLocalizer","VerCalendario","fechaDefault","Date","events","cargarServicios","getMonth","v","start","end","isSelected","newStyle","borderRadius","border","isMine","eventosServ","s","title","allDay","height","react_big_calendar_esm","culture","startAccessor","endAccessor","defaultDate","defaultView","eventPropGetter","ModalPrueba1","valor1","Pruebas","valor2","Test_ModalPrueba1","NavBar","capitalize","string","charAt","toUpperCase","enlace","usuarioNombre","hora","locale","timerID","setInterval","tick","_this3","genero","usuario","stackable","LogoYllari","active","position","lineHeight","fontSize","Flag","cerrarSesionHandler","Auth","clave","maxWidth","Image","Divider","hidden","username","password","localStorage","setItem","usr","rol","nombrePersona","correoPersona","mostrarContenido","loggedInHandler","errorCompleto","Mostrador404","Subheader","MainContent","cerrarSesion","removeItem","getItem","Dimmer","inverted","Loader","contenido","react_router","component","components_NavBar_NavBar","path","exact","ViewFiles_CrearFile_CrearFile","match","params","Calendario_VerCalendario","containers_Auth_Auth","App","containers_MainContent_MainContent","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ae34c7e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_yllari.5229e823.png\";","module.exports = __webpack_public_path__ + \"static/media/huascaran.1782fcc0.png\";","module.exports = __webpack_public_path__ + \"static/media/machupichu.a5183e08.png\";","module.exports = __webpack_public_path__ + \"static/media/costaverdehd.b67f036a.png\";","import React from 'react';\r\nimport {Component} from 'react';\r\nimport './FileCard.css';\r\n\r\nclass FileCard extends Component{\r\n\r\n    render(){\r\n        console.log(this.props);\r\n        return (\r\n        <div className=\"FileCard\">\r\n            <b>{this.props.codigo}</b>\r\n            <hr/>\r\n            <p><em>{this.props.descripcion}</em></p>\r\n            <p>Agencia {this.props.agencia}</p>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileCard;","\r\nconst CONSTANTES_GLOBALES={\r\n    ListaMeses: [\r\n        { key: 1, text: 'Enero', value: 1 },\r\n        { key: 2, text: 'Febrero', value: 2 },\r\n        { key: 3, text: 'Marzo', value: 3 },\r\n        { key: 4, text: 'Abril', value: 4 },\r\n        { key: 5, text: 'Mayo', value: 5 },\r\n        { key: 6, text: 'Junio', value: 6 },\r\n        { key: 7, text: 'Julio', value: 7 },\r\n        { key: 8, text: 'Agosto', value: 8 },\r\n        { key: 9, text: 'Septiembre', value: 9 },\r\n        { key: 10, text: 'Octubre', value: 10 },\r\n        { key: 11, text: 'Noviembre', value: 11 },\r\n        { key: 12   , text: 'Diciembre', value: 12 },\r\n    ],\r\n    \r\n    \r\n    AliasClientes:{\r\n        CLIENTE_DIRECTO:\"CLDIR\",\r\n        OPERADOR_MAYORISTA:\"OPMAY\",\r\n        OPERADOR_MINORISTA:\"OPMIN\"\r\n    },\r\n\r\n    AliasProovedores:{\r\n        PERSONA:\"PERSO\",\r\n        EMPRESA:\"EMPRE\",\r\n        HOTEL:\"HOTEL\",\r\n        RESTAURANTE:\"RESTA\",\r\n        TRANSPORTE:\"TRANS\",\r\n        GUIA:\"GUIAA\",\r\n        OPERADOR:\"OPERA\"\r\n    },\r\n    \r\n    TiposClientes:[\r\n        { key: 1, text: 'Cliente directo', value: \"CLDIR\" },\r\n        { key: 2, text: 'Operador mayorista', value: \"OPMAY\" },\r\n        { key: 3, text: 'Operador minorista', value: \"OPMIN\" }\r\n    ],\r\n\r\n    TiposServicios:[\r\n        { key: 1, text: 'Servicio general', value: 1 },\r\n        { key: 2, text: 'Transporte', value: 2 }\r\n    ],\r\n    TiposProveedores:[\r\n        { key: 1, text: 'Persona', value: \"PERSO\"},\r\n        { key: 2, text: 'Empresa', value: \"EMPRE\"},\r\n        { key: 3, text: 'Hotel', value: \"HOTEL\"},\r\n        { key: 4, text: 'Restaurant', value: \"RESTA\"},\r\n        { key: 5, text: 'Transporte', value: \"TRANS\" },\r\n        { key: 6, text: 'Guia', value: \"GUIAA\"},\r\n        { key: 7, text: 'Operador', value: \"OPERA\" }\r\n    ],\r\n\r\n    aliasATextoProovedores : (alias) => {\r\n        console.log(\"a\");\r\n        if(alias){\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.PERSONA)\r\n                return \"Persona\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.EMPRESA)\r\n                return \"Empresa\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.HOTEL)\r\n                return \"Hotel\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.RESTAURANTE)\r\n                return \"Restaurante\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.GUIA)\r\n                return \"Guia\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.OPERADOR)\r\n                return \"Operador\"\r\n        }else\r\n            return \"ERROR\";\r\n    },\r\n\r\n    aliasATextoClientes : (alias) => {\r\n        console.log(\"a\",alias);\r\n        if(alias){\r\n            if (alias===CONSTANTES_GLOBALES.AliasClientes.CLIENTE_DIRECTO)\r\n                return \"Cliente directo\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasClientes.OPERADOR_MAYORISTA)\r\n                return \"Operador mayorista\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasClientes.OPERADOR_MINORISTA)\r\n                return \"Operador minorista\"\r\n        }else\r\n            return \"ERROR\";\r\n    },\r\n\r\n    AliasServicios:{\r\n        TRANSPORTE:\"TRANS\",\r\n        SERVICIO:\"SERVI\"\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nconst Rol_Admin=\"Admin\";\r\nconst Rol_Gerente=\"Gerente\";\r\nconst Rol_Operador=\"Operador\";\r\nconst Rol_Observador = \"Observador\";\r\n\r\nconst Configuracion={\r\n    //ServerUrl:\"http://localhost:65212\",\r\n    ServerUrl:\"http://diego25061-001-site2.itempurl.com\",\r\n    EnlacesNavBar:[\r\n        {nombre:\"Inicio\", valor:\"/inicio\" },\r\n        {nombre:\"Files\", valor:\"/files\"},\r\n        {nombre:\"Servicios\", valor:\"/servicios\"},\r\n        {nombre:\"Biblias\", valor:\"/biblias\"},\r\n        {nombre:\"Proveedores\", valor:\"/proveedores\"},\r\n        {nombre:\"Clientes\", valor:\"/clientes\"},\r\n        {nombre:\"Calendario\", valor:\"/calendario\"},\r\n    ]\r\n}\r\n\r\nconst CodigoMesATexto = (codigoMes) => {\r\n    if(codigoMes){\r\n        var obj = CONSTANTES_GLOBALES.ListaMeses.find(x=> x.key === codigoMes );\r\n        console.log(obj);\r\n        if(obj){\r\n            return obj.text;\r\n        }else{\r\n            return \"error\";\r\n        }\r\n    }\r\n}\r\n\r\nclass RptaTrx{\r\n    cont;\r\n    msj;\r\n    trace;\r\n    cod;\r\n    constructor(response){\r\n        if(response){\r\n            this.cont = response.cont;\r\n            this.msj = response.msj;\r\n            this.trace = response.trace;\r\n            this.cod = response.cod;\r\n\r\n            if(!this.cont || !this.cod)\r\n                this.cod=0;\r\n\r\n        }\r\n    }\r\n\r\n    set=(cont,msj,trace,cod)=>{\r\n        this.cont = cont;\r\n        this.msj = msj;\r\n        this.trace = trace;\r\n        this.cod = cod;\r\n    };\r\n\r\n    transaccionExitosa=()=>{\r\n        return this.cod!=0\r\n    }\r\n}\r\n\r\nexport {Configuracion, RptaTrx, CodigoMesATexto};\r\nexport default CONSTANTES_GLOBALES;","import axios from 'axios';\r\nimport CONSTANTES_GLOBALES, {\r\n    RptaTrx,\r\n    Configuracion\r\n} from '../Constantes';\r\n\r\nclass Requester {\r\n\r\n    static store = {}\r\n\r\n    static requestBasicoGet(direccion, funcSuccess, funcError, funcAlways, auth=true) {\r\n        axios.get(direccion,\r\n            auth ? {headers:{Authorization:\"Bearer \"+ this.store.token}}: null)\r\n            .then(response => {\r\n                try {\r\n                    if (funcSuccess)\r\n                        funcSuccess(response.data)\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n            }).catch(error => {\r\n                if (funcError) {\r\n                    if (error.response) {\r\n                        if (error.response.data)\r\n                            funcError(new RptaTrx(error.response.data));\r\n                        else {\r\n                            var r = new RptaTrx();\r\n                            r.set(null, \"Servidor inaccesible\", null, 0);\r\n                            funcError(r);\r\n                        }\r\n                    } else {\r\n                        //si hay un error donde el server ni responde\r\n                        var r = new RptaTrx();\r\n                        r.set(null, \"Servidor inaccesible\", null, 0);\r\n                        funcError(r);\r\n                    }\r\n                }\r\n            }) //.finally(response=>{})\r\n    }\r\n\r\n\r\n    static requestBasicoPost(direccion, objeto, funcSuccess, funcError, funcAlways, auth=true) {\r\n        axios.post(direccion, objeto,\r\n            auth ? {headers:{Authorization:\"Bearer \"+ this.store.token}}: null)\r\n            .then(response => {\r\n                try {\r\n                    if (funcSuccess) {\r\n                        if (response.data) {\r\n                            var resp = new RptaTrx();\r\n                            resp.set(response.data.cont, response.data.msj, response.data.trace, response.data.cod);\r\n                            funcSuccess(resp);\r\n                        }\r\n                    }\r\n                } catch (err) {\r\n                    console.error(err);\r\n                }\r\n            }).catch(error => {\r\n                console.error(\"Error en POST!\",error);\r\n                if (funcError) {\r\n                    if (error.response) {\r\n                        if (error.response.data) {\r\n                            funcError(new RptaTrx(error.response.data, error));\r\n                        } else {\r\n                            var r = new RptaTrx();\r\n                            r.set(null, \"Servidor inaccesible\", null, 0);\r\n                            funcError(r);\r\n                        }\r\n                    } else {\r\n                        //si hay un error donde el server ni responde\r\n                        var r = new RptaTrx();\r\n                        r.set(null, \"Servidor inaccesible\", null, 0);\r\n                        funcError(r);\r\n                    }\r\n                }\r\n            })\r\n    }\r\n    //------------------------ MISC -----------------------------------\r\n\r\n    static getPing = (funcSuccess, funcError, funcAlways ) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/misc/ping\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getInfo = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/misc/info\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //------------------------ AUTH -----------------------------------\r\n\r\n    static postLogin = (obj, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/usuarios/authenticate/\", obj, funcSuccess, funcError, funcAlways, false);\r\n    }\r\n\r\n    //------------------------ FILES -----------------------------------\r\n\r\n    static postFile = (file, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/files\", file, funcSuccess, funcError, funcAlways);\r\n    }\r\n    \r\n    static postEditarFile = (file, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/files/editar/\", file, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postBorrarFile = (idFile, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/files/eliminar/\"+idFile, null, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getListadoFiles = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/files\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getFile = (idFile, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/files/\"+idFile, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getHoteles = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/files\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //------------------------ BIBLIAS -----------------------------------\r\n\r\n    ///lista de biblias para elegir\r\n    static getBibliasDropdownCompleto = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/biblias/dropdown\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getBibliasDetalle = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/biblias/\", funcSuccess, funcError, funcAlways , true);\r\n    }\r\n\r\n\r\n    static postBiblia = (objeto, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/biblias/\", objeto, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //------------------------ SERVICIOS -----------------------------------\r\n\r\n    \r\n    static getServiciosTodos = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/servicios\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    static getServiciosPorMes = (mes, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/servicios/mes/\"+mes, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getServiciosGeneralesDetalle = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/servicios/generales\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getServiciosTransporteDetalle = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/servicios/transportes\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postServicio = (\r\n        idFile,\r\n        idProveedor,\r\n        fecha,\r\n        tipoServicio,\r\n        nombre,\r\n        horaRecojo,\r\n        horaSalida,\r\n        vuelo,\r\n        pasajeros,\r\n        vr,\r\n        tc,\r\n        observaciones,\r\n        ciudad,\r\n        nombrePasajero,\r\n        tren,\r\n        alm,\r\n        transporte,\r\n        hotel,\r\n        funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/servicios/\", {\r\n            idFile,\r\n            idProveedor,\r\n            fecha,\r\n            tipoServicio,\r\n            nombre,\r\n            horaRecojo,\r\n            horaSalida,\r\n            vuelo,\r\n            pasajeros,\r\n            vr,\r\n            tc,\r\n            observaciones,\r\n            ciudad,\r\n            nombrePasajero,\r\n            tren,\r\n            alm,\r\n            transporte,\r\n            hotel\r\n        }, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //------------------------ CLIENTES -----------------------------------\r\n\r\n    static getClientesFullDetallado = (alias, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/clientes/\" + alias, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getClientesListaDropdown = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/clientes/dropdown\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postCliente = (tipo, nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, pais, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            CorreoContacto: correo,\r\n            numeroContacto,\r\n            numeroAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad,\r\n            pais\r\n        };\r\n        body.tipo = tipo;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/clientes/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    static postEditarCliente = (tipo, idCliente, nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, pais, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            idCliente,\r\n            nombre,\r\n            CorreoContacto: correo,\r\n            numeroContacto,\r\n            numeroAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad,\r\n            pais\r\n        };\r\n        body.tipo = tipo;\r\n        console.log(\"weeeeeeeee\", body);\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/clientes/editar\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postEliminarCliente = (id, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/clientes/eliminar/\" + id, null, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    //------------------------ HOTELES -----------------------------------\r\n\r\n    static getHotelesListaDropdown = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/proveedores/dropdown/hotel\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    //------------------------ PROVEEDORES -----------------------------------\r\n\r\n    static getProveedores = (tipoProveedor, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/proveedores/\" + tipoProveedor, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    static getProveedoresMenosTransportes = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/proveedores/tipos?incluir=GUIAA,EMPRE,RESTA,HOTEL,PERSO,OPERA\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getProveedoresTransportes = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/proveedores/tipos?incluir=trans\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    static getProveedoresDropdown = (tipoProveedor, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/proveedores/dropdown/\" + tipoProveedor, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postEliminarProv = (id, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/eliminar/\" + id, null, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postProveedor = (tipo, nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = tipo;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postEditarProv = (alias, idProveedor, nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            idProveedor,\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = alias;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/editar\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //hoteles\r\n\r\n    static postProvHotel = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.HOTEL;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n\r\n    static postEditarProvHotel = (idProveedor, nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            idProveedor,\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.HOTEL;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/editar\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //operadores\r\n\r\n    static postProvOperador = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.OPERADOR;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //restaurantes\r\n\r\n    static postProvRestaurante = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.RESTAURANTE;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //transportes\r\n\r\n    static postProvTransporte = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.TRANSPORTE;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //guias\r\n\r\n    static postProvGuia = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.GUIA;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    //empresas\r\n\r\n    static postProvEmpresa = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.EMPRESA;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //personas\r\n\r\n    static postProvPersona = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.PERSONA;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //------------------------ CIUDADES -----------------------------------\r\n\r\n    static getCiudades = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/ciudades/\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    //------------------------ PAISES -----------------------------------\r\n\r\n    static getPaises = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/paises/\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n}\r\n\r\nexport default Requester;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Container , Input} from 'semantic-ui-react';\r\nimport ReactTable from \"react-table\";\r\nimport 'react-table/react-table.css'\r\n\r\n\r\nclass TablaBuscador extends Component{\r\n\r\n    \r\n    state={\r\n        queryBusqueda:\"\"\r\n    }\r\n\r\n\r\n    columnasDefault=[\r\n        {\r\n            Header: 'Columna 1',\r\n            accessor: 'col1'\r\n        },\r\n        {\r\n            Header: 'Columna 2',\r\n            accessor: 'col2',\r\n            Cell: props => <span className='number'>{props.value}</span>\r\n        },\r\n        {\r\n            Header: 'Columna 3!',\r\n            accessor: 'col3',\r\n        }\r\n    ]\r\n\r\n    render(){\r\n\r\n        //filtrando data\r\n        console.log(\"reupdate!\")\r\n        let dataFiltrada = this.props.data;\r\n\r\n        let query = this.state.queryBusqueda;\r\n\r\n        if(this.props.queryForzado)\r\n            query=this.props.queryForzado;\r\n\r\n\t\tif (query) \r\n            if(dataFiltrada)\r\n                dataFiltrada = dataFiltrada.filter(objetoFila => {\r\n                    for (var property in objetoFila) {\r\n                        if (objetoFila.hasOwnProperty(property)) {\r\n                            let val = objetoFila[property];\r\n                            if(val){\r\n                                if(String(val).toLowerCase().includes(query.toLowerCase()))\r\n                                    return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                })\r\n        \r\n\r\n        //mostrando data\r\n        return <Container fluid>\r\n                Buscar registros:{\"      \"}\r\n                <Input style={{padding:\"0px 0px 12px 0px\"}}\r\n                    placeholder=\"Buscar...\"\r\n                    value={query}\r\n                    onChange={e => {\r\n                        if(this.props.queryForzado)\r\n                            this.props.vaciarQueryForzado(); \r\n                        this.setState({queryBusqueda: e.target.value})\r\n                    }}/>\r\n                <br/>\r\n                <ReactTable\r\n                    data={dataFiltrada}\r\n                    columns={this.props.columns ? this.props.columns : this.columnasDefault} \r\n                    defaultPageSize={5}\r\n                    minRows={5}\r\n                    className=\"-highlight\"\r\n                />\r\n            </Container>\r\n    }\r\n}\r\n\r\nexport default TablaBuscador;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport FileCard from '../../components/FileCard/FileCard';\r\nimport { Link } from 'react-router-dom'\r\nimport './ViewFiles.css';\r\nimport { Table, Menu, Icon, Label, Button, Container, Header, Input, Segment, Confirm } from 'semantic-ui-react';\r\nimport ReactTable from \"react-table\";\r\nimport 'react-table/react-table.css'\r\nimport Requester from '../../common/Services/Requester';\r\nimport TablaBuscador from '../TablaBuscador/TablaBuscador';\r\n\r\n//import { MDBDataTable } from 'mdbreact';\r\n\r\n\r\n\r\nclass ViewFiles extends Component {\r\n\tstate = {\r\n\t\t//search:'',\r\n\t\topen: false,\r\n\t\tidFileABorrar: 0,\r\n\t\tcodigoFileABorrar: '',\r\n\t\tfiles: [\r\n\t\t\t//{codigo: \"23123\", descripcion: \"descripcion del file\", biblia:\"2018, mayo\", cliente:\"nts\", fecha:\"2/05/2019\", estado:\"activo\", cantServicios: \"2\", cantTransportes: \"3\" },\r\n\t\t]\r\n\t}\r\n\r\n\tcargarFiles = () => {\r\n\t\tRequester.getListadoFiles(rpta => {\r\n\t\t\tlet listaFiles = rpta.cont.map((e, i) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tidFile: e.id,\r\n\t\t\t\t\tcodigo: e.codigo,\r\n\t\t\t\t\tdescripcion: e.descripcion,\r\n\t\t\t\t\tbiblia: e.nombreBiblia,\r\n\t\t\t\t\tcliente: e.nombreCliente,\r\n\t\t\t\t\tfecha: e.fechaCreacion.split(\" \")[0],\r\n\t\t\t\t\tcantServicios: e.cantServicios,\r\n\t\t\t\t\tcantTransportes: e.cantTransportes\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.setState({ files: listaFiles });\r\n\t\t});\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.cargarFiles();\r\n\t}\r\n\r\n\trender=()=> {\r\n\t\tconst cols = [\r\n\t\t\t{\r\n\t\t\t\tHeader: 'id',\r\n\t\t\t\taccessor: 'idFile',\r\n\t\t\t\tshow: false\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Codigo',\r\n\t\t\t\taccessor: 'codigo' // String-based value accessors!\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Descripcion',\r\n\t\t\t\taccessor: 'descripcion',\r\n\t\t\t\tCell: props => <span className='number'>{props.value}</span> // Custom cell components!\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Biblia',\r\n\t\t\t\taccessor: 'biblia',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Cliente',\r\n\t\t\t\taccessor: 'cliente',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Fecha registro',\r\n\t\t\t\taccessor: 'fecha',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Cant. servicios',\r\n\t\t\t\taccessor: 'cantServicios',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Cant. Transportes',\r\n\t\t\t\taccessor: 'cantTransportes',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Accion',\r\n\t\t\t\tCell: props => {\r\n\t\t\t\t\t//console.log(props);\r\n\t\t\t\t\tlet urlVer = \"/file/ver/\" + props.row.idFile;\r\n\t\t\t\t\tlet urlEditar = \"/file/editar/\" + props.row.idFile;\r\n\t\t\t\t\treturn <Container textAlign=\"center\">\r\n\t\t\t\t\t\t<Link to={urlVer}>\r\n\t\t\t\t\t\t\t<Button circular icon=\"eye\"></Button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link to={urlEditar}>\r\n\t\t\t\t\t\t\t<Button circular icon=\"pencil\"></Button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Button circular color=\"red\" icon=\"trash\" onClick={() => { console.log(\"propss\", props); this.openConfirm(props.row.idFile, props.row.codigo) }}>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]\r\n\r\n\t\treturn (<div>\r\n\r\n\t\t\t<Header size=\"large\">Files</Header>\r\n\t\t\t<Container fluid textAlign=\"left\">\r\n\t\t\t\t<Link to=\"/files/crear\">\r\n\t\t\t\t\t<Button primary>Nuevo file</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</Container>\r\n\t\t\t<Header size=\"medium\">Lista de files</Header>\r\n\r\n\t\t\t<Segment>\r\n\t\t\t\t<TablaBuscador data={this.state.files} columns={cols} />\r\n\t\t\t</Segment>\r\n\r\n\t\t\t<Confirm content={\"Seguro que deseas eliminar el file '\" + this.state.codigoFileABorrar + \"' ?\"}\r\n\t\t\t\topen={this.state.open}\r\n\t\t\t\tonCancel={this.closeConfirm}\r\n\t\t\t\tonConfirm={() => {\r\n\t\t\t\t\tRequester.postBorrarFile(this.state.idFileABorrar,\r\n\t\t\t\t\t\t(rpta)=>{this.cargarFiles();},\r\n\t\t\t\t\t\t(rptaError)=>{this.cargarFiles();});\r\n\t\t\t\t\tthis.closeConfirm();\r\n\t\t\t\t}} />\r\n\r\n\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\r\n\topenConfirm = (idFile, codFile) => this.setState({ open: true, idFileABorrar: idFile, codigoFileABorrar: codFile })\r\n\tcloseConfirm = () => {\r\n\t\tthis.setState({ open: false, idFileABorrar: 0, codigoFile: '' });\r\n\t}\r\n}\r\nexport default ViewFiles;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Header, Container,Grid } from 'semantic-ui-react';\r\n\r\nclass ElementoForm extends Component{\r\n    render(){\r\n        let e = this.props.titulo;\r\n        if(this.props.black)\r\n            e = <b>{e}</b>;\r\n\r\n        let obj = \r\n        <Container fluid>\r\n            <p>{e}</p>\r\n            {this.props.children}\r\n        </Container>\r\n/*\r\n        if(this.props.grid)\r\n            obj = <Grid.Row>\r\n                <Grid.Column>\r\n                    {obj}\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n\r\n*/\r\n        return obj;\r\n    }\r\n\r\n}\r\n\r\nexport default ElementoForm;","import React from 'react'\r\nimport {Component} from 'react';\r\nimport ElementoForm from '../../../components/ElementoForm/ElementoForm';\r\nimport { Dropdown, Input, Icon, Grid} from 'semantic-ui-react';\r\nimport Constantes from '../../../common/Constantes';\r\n\r\nclass CamposCrearCliente extends Component{\r\n    \r\n    componentDidMount(){\r\n        //this.props.contCliente.campos = {};\r\n    }\r\n\r\n    render(){\r\n        return <Grid>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <ElementoForm titulo=\"Nombre *\">\r\n                        <Input fluid placeholder=\"Universal\" \r\n                            onChange={(event)=>{ this.props.contenedor.nombre=event.target.value; /*this.props.contenedor.ff();*/ }}>\r\n                        </Input>\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n\r\n                <ElementoForm titulo=\"Tipo *\">\r\n                    <Dropdown placeholder=\"Operador\" selection fluid search options={Constantes.TiposClientes}\r\n                        onChange = {(event,data)=>{this.props.contenedor.tipo=data.value}}\r\n                    ></Dropdown>\r\n                </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n                \r\n            <Grid.Row columns={2}>\r\n                <Grid.Column>\r\n\r\n                <ElementoForm titulo=\"Correo de contacto\">\r\n                    <Input placeholder=\"correo@gmail.com\" iconPosition=\"left\" fluid \r\n                        onChange={(event)=>{this.props.contenedor.correo=event.target.value}}>\r\n                        <Icon name=\"at\"></Icon>\r\n                        <input />\r\n                    </Input>\r\n                </ElementoForm>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <ElementoForm titulo=\"Correo adicional\">\r\n                    <Input placeholder=\"correo@gmail.com\" iconPosition=\"left\" fluid \r\n                        onChange={(event)=>{this.props.contenedor.correoAdicional=event.target.value}}>\r\n                        <Icon name=\"at\"></Icon>\r\n                        <input />\r\n                    </Input>\r\n                </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n                \r\n            <Grid.Row columns={2}>\r\n                <Grid.Column>\r\n                    <ElementoForm titulo=\"Numero contacto\">\r\n                        <Input placeholder=\"(511)97985020\" fluid onChange={(event)=>{this.props.contenedor.numContacto=event.target.value}}></Input>\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                    <ElementoForm titulo=\"Numero contacto adicional\">\r\n                        <Input placeholder=\"(511)97985020\" fluid onChange={(event)=>{this.props.contenedor.numContactoAdic=event.target.value}}></Input>\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row columns={2}>\r\n                <Grid.Column>\r\n                    <ElementoForm titulo=\"Pais\">\r\n                        <Input placeholder=\"Colombia\" fluid onChange={(event)=>{this.props.contenedor.pais=event.target.value}}></Input>\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                    <ElementoForm titulo=\"Ciudad\">\r\n                        <Input placeholder=\"Bogotá\" fluid onChange={(event)=>{this.props.contenedor.ciudad=event.target.value}}></Input>\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport default CamposCrearCliente;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button,Modal } from 'semantic-ui-react';\r\n\r\n\r\nclass ModalTrxSimple extends Component{\r\n    state={\r\n        abierto:false\r\n    }\r\n\r\n    abrir(){\r\n        this.setState({abierto:true});\r\n    }\r\n\r\n    render(){\r\n        return <Modal size={this.props.size?this.props.size:\"small\"}\r\n        open ={this.state.abierto} \r\n        centered={false} \r\n        onClose={() => {this.setState({abierto:false})}}>\r\n                <Modal.Header>{this.props.titulo}</Modal.Header>\r\n                <Modal.Content>{this.props.children}</Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button positive icon='checkmark' labelPosition='right' content={this.props.textoAceptar} onClick={this.props.enAceptar}/>\r\n                    <Button negative onClick={()=>{if(this.props.enCancelar) this.props.enCancelar(); this.setState({abierto:false})}}>{this.props.textoCancelar}</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n    }\r\n}\r\n\r\n\r\nexport default ModalTrxSimple;","import React from 'react'\r\nimport {Component} from 'react'\r\n\r\nclass ContainedComponent extends Component{\r\n    \r\n    getParentContainer = () => {\r\n        return { ...this.props.parent.state[this.props.pack] };\r\n    }\r\n\r\n    UpdateParentContainer = (cont) => {\r\n        this.props.parent.setState({ [this.props.pack]: cont })\r\n    }\r\n}\r\n\r\nexport default ContainedComponent;","import React from 'react';\r\nimport { Message, Icon } from 'semantic-ui-react';\r\n\r\n/**\r\n * \r\n * @param {*} props \r\n */\r\n\r\nconst MensajeTransaccion = (props) => {\r\n\r\n    let msj = <div></div>\r\n    let lineasMensaje = null;\r\n\r\n    if (props.rptaTransaccion)\r\n        if (props.rptaTransaccion.msj) {\r\n            //console.log(\"WWWWWWWWAAAAAck\",props.rptaTransaccion.msj)\r\n            lineasMensaje = props.rptaTransaccion.msj.split('|');\r\n        }\r\n\r\n    //console.log(\"LINEAS MENSAJE:\",lineasMensaje);\r\n    //props.rptaTransaccion.msj ? <Message.Item> {props.rptaTransaccion.msj} </Message.Item> : null\r\n\r\n    //console.log(props)\r\n\r\n    //let contenedor = props.contenedor;\r\n    /*\r\n    transaccionEnviada:false,\r\n    responseRecibida:false,\r\n    rptaTransaccion:null,*/\r\n    if (props) {\r\n        if (props.transaccionEnviada && !props.responseRecibida) {\r\n            msj = <Message icon>\r\n                <Icon name='circle notched' loading />\r\n                <Message.Content>\r\n                    <Message.Header>{props.headerCargando ? props.headerCargando : \"Espere un momento...\"}</Message.Header>\r\n                    {props.textoCargando ? props.textoCargando : \"Enviando petición\"}\r\n                </Message.Content>\r\n            </Message>\r\n        } else\r\n            if (props.responseRecibida) {\r\n                //console.log(props.parentComponent.state.modalBiblia)\r\n                if (props.rptaTransaccion.transaccionExitosa()) {\r\n                    msj = <Message success >\r\n                        <Message.Header>{props.headerExito ? props.headerExito : \"Transaccion exitosa\"}</Message.Header>\r\n                        <Message.List>\r\n                            {props.textoExito/*<Message.Item>Puede usar la biblia nueva.</Message.Item>*/}\r\n                            {props.rptaTransaccion.msj ? <Message.Item>{props.rptaTransaccion.msj}</Message.Item> : null}\r\n                        </Message.List>\r\n                    </Message>\r\n                } else {\r\n                    msj = <Message negative>\r\n                        <Message.Header>{props.headerError ? props.headerError : \"Error en transaccion\"}</Message.Header>\r\n                        <Message.List>\r\n                            {lineasMensaje ? lineasMensaje.map((e, i) => {\r\n                                if(e)\r\n                                    return <Message.Item>{e}</Message.Item>\r\n                            }) : null}\r\n                            {props.rptaTransaccion.trace ? <Message.Item>{props.rptaTransaccion.trace}</Message.Item> : null}\r\n                        </Message.List>\r\n                    </Message>\r\n                }\r\n            }\r\n\r\n        return msj;\r\n    }\r\n\r\n}\r\n/*\r\nclass MensajeTransaccion extends Component{\r\n\r\n    state={\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n    }\r\n\r\n}*/\r\n\r\nexport default MensajeTransaccion;","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Button, Container, Message, Icon, Input, Modal, Grid, Dropdown } from 'semantic-ui-react';\r\nimport ElementoForm from '../../components/ElementoForm/ElementoForm';\r\nimport Constantes from '../../common/Constantes';\r\nimport ContainedComponent from '../../components/ContainedComponent';\r\nimport MensajeTransaccion from '../../components/MensajeTransaccion/MensajeTransaccion';\r\n\r\nclass ModalCrearEditarProveedor extends ContainedComponent {\r\n\r\n    componentDidMount=()=>{\r\n        //console.log(\"Contenedor: \",this.getParentContainer());\r\n    }\r\n\r\n    render() {\r\n        var CompElegir = ''\r\n        if (this.props.elegirTipo) {\r\n            CompElegir = <Grid.Row>\r\n                <Grid.Column>\r\n                    <ElementoForm grid titulo=\"Tipo de proveedor *\">\r\n\r\n                        <Dropdown fluid placeholder='Elegir Tipo'\r\n                            search\r\n                            selection\r\n                            options={Constantes.TiposProveedores}\r\n                            onChange={(event, data) => {\r\n                                let obj = this.getParentContainer();\r\n                                obj.campos.tipo = data.value;\r\n                                this.UpdateParentContainer(obj);\r\n                                /*\r\n                                var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                obj.campos.tipo = data.value;\r\n                                this.props.parent.setState({modalCrearEditar:obj});*/\r\n                            }} />\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        }\r\n\r\n        var msjSuccess = \"Objeto creado\";\r\n        if (/*this.props.parent.state.modalCrearEditar.modo === \"edicion\"*/this.getParentContainer().modo===\"edicion\")\r\n            msjSuccess = \"Objeto editado exitosamente\";\r\n\r\n        var msjComp = <div></div>\r\n        //console.log(\"weee\");\r\n        //console.log(this.props.parent.state.modalCrearEditar);\r\n        let asd = \r\n        <MensajeTransaccion\r\n            transaccionEnviada = {this.getParentContainer().mensaje.enviado} \r\n            responseRecibida = {this.getParentContainer().mensaje.recibido}\r\n            rptaTransaccion = {this.getParentContainer().mensaje.respuesta}\r\n            //textoExito = \"Puede usar la nueva biblia\"\r\n        />\r\n\r\n        /*{\r\n        if (this.getParentContainer() && this.getParentContainer().mensaje ) {\r\n            var mensaje = this.getParentContainer().mensaje;\r\n            if (mensaje.enviado && !mensaje.recibido) {\r\n                msjComp = <Message icon>\r\n                    <Icon name='circle notched' loading />\r\n                    <Message.Content>\r\n                        <Message.Header>Espere un momento...</Message.Header>\r\n                        Completando la transacción\r\n                    </Message.Content>\r\n                </Message>\r\n            } else\r\n                if (mensaje.recibido) {\r\n                    if (mensaje.respuesta.transaccionExitosa()) {\r\n                        msjComp = <Message success >\r\n                            <Message.Header>Transaccion exitosa</Message.Header>\r\n                            <Message.List>\r\n                                <Message.Item>{msjSuccess}</Message.Item>\r\n                                {mensaje.respuesta.msj ? <Message.Item> {mensaje.respuesta.msj} </Message.Item> : null}\r\n                            </Message.List>\r\n                        </Message>\r\n                    } else {\r\n                        msjComp = <Message negative>\r\n                            <Message.Header>Error en transaccion</Message.Header>\r\n                            <Message.List>\r\n                                <Message.Item>{mensaje.respuesta.msj}</Message.Item>\r\n                                {mensaje.respuesta.trace ? <Message.Item>{mensaje.respuesta.trace}</Message.Item> : null}\r\n                            </Message.List>\r\n                        </Message>\r\n                    }\r\n                }\r\n    }*/\r\n\r\n        return <Modal size=\"tiny\" open={this.getParentContainer().abierto /* this.props.parent.state.modalCrearEditar.abierto*/} centered={true} onClose={() => {\r\n            this.UpdateParentContainer({ ...this.getParentContainer(), abierto:false });\r\n            this.props.enCerrar();\r\n\r\n            /*var obj= {...this.props.parent.state.modalCrearEditar};\r\n            obj.abierto=false;\r\n            this.props.enCerrar();\r\n            this.props.parent.setState({modalCrearEditar:obj});\r\n            */\r\n        }}>\r\n\r\n            <Modal.Header>{/*this.props.parent.state.modalCrearEditar.modo==='creacion'*/ this.getParentContainer().modo ? 'Crear ' + this.props.sustantivoTitulo : 'Modificar ' + this.props.sustantivoTitulo}</Modal.Header>\r\n\r\n            <Modal.Content>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Nombre *\">\r\n                                <Input fluid placeholder={this.props.placeholderNombre} value={this.getParentContainer().campos.nombre/*this.props.parent.state.modalCrearEditar.campos.nombre*/} onChange={(event) => {\r\n                                    /*var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                    obj.campos.nombre = event.target.value;\r\n                                    this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                    let obj = this.getParentContainer();\r\n                                    obj.campos.nombre = event.target.value;\r\n                                    this.UpdateParentContainer(obj);\r\n                                }} />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n                    <Grid.Row columns={2}>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Correo electrónico\">\r\n                                <Input\r\n                                    fluid\r\n                                    iconPosition=\"left\" placeholder={this.props.placeholderCorreo} value={this.getParentContainer().campos.correo/*this.props.parent.state.modalCrearEditar.campos.correo*/} onChange={(event) => {\r\n                                        /*var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.correo = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                        let obj = this.getParentContainer();\r\n                                        obj.campos.correo = event.target.value;\r\n                                        this.UpdateParentContainer(obj);\r\n                                    }}>\r\n                                    <Icon name=\"at\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Correo electrónico adicional\">\r\n                                <Input\r\n                                    fluid\r\n                                    iconPosition=\"left\" placeholder={this.props.placeholderCorreoAdic} value={this.getParentContainer().campos.correoAdic/*this.props.parent.state.modalCrearEditar.campos.correoAdic*/} onChange={(event) => {\r\n                                        /*var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.correoAdic = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                        let obj = this.getParentContainer();\r\n                                        obj.campos.correoAdic = event.target.value;\r\n                                        this.UpdateParentContainer(obj);\r\n                                    }}>\r\n                                    <Icon name=\"at\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n\r\n                    <Grid.Row columns={2}>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Numero contacto\">\r\n                                <Input\r\n                                    fluid\r\n                                    placeholder=\"98957845\"\r\n                                    iconPosition=\"left\"\r\n                                    value={this.getParentContainer().campos.num/*this.props.parent.state.modalCrearEditar.campos.num*/} onChange={(event) => {\r\n                                        /*var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.num = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                        let obj = this.getParentContainer();\r\n                                        obj.campos.num = event.target.value;\r\n                                        this.UpdateParentContainer(obj);\r\n                                    }}>\r\n                                    <Icon name=\"phone\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Numero contacto adicional\">\r\n                                <Input\r\n                                    fluid\r\n                                    placeholder=\"564-8790\"\r\n                                    iconPosition=\"left\"\r\n                                    value={this.getParentContainer().campos.numAdic/*this.props.parent.state.modalCrearEditar.campos.numAdic*/} onChange={(event) => {\r\n                                        /*\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.numAdic = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                        let obj = this.getParentContainer();\r\n                                        obj.campos.numAdic = event.target.value;\r\n                                        this.UpdateParentContainer(obj);\r\n                                    }}>\r\n                                    <Icon name=\"phone\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Ciudad\">\r\n                                <Input fluid placeholder=\"Cusco\"\r\n                                    value={this.getParentContainer().campos.ciudad/*this.props.parent.state.modalCrearEditar.campos.ciudad*/} onChange={(event) => {\r\n                                        /*\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.ciudad = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                        let obj = this.getParentContainer();\r\n                                        obj.campos.ciudad = event.target.value;\r\n                                        this.UpdateParentContainer(obj);\r\n                                    }} />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    {CompElegir}\r\n                </Grid>\r\n                {asd}\r\n            </Modal.Content>\r\n\r\n            <Modal.Actions>\r\n                <Button negative onClick={() => {\r\n                    /*\r\n                    var obj= {...this.props.parent.state.modalCrearEditar};\r\n                    obj.abierto=false;\r\n                    this.props.enCerrar();\r\n                    this.props.parent.setState({modalCrearEditar:obj});*/\r\n                    let obj = this.getParentContainer();\r\n                    obj.abierto = false;\r\n                    this.UpdateParentContainer(obj);\r\n                    this.props.enCerrar();\r\n                }}>\r\n                    Cancelar\r\n                </Button>\r\n                {\r\n                    this.getParentContainer().modo /*this.props.parent.state.modalCrearEditar.modo*/ === 'creacion' ?\r\n                        <Button positive icon='checkmark' labelPosition='right' content='Crear' onClick={this.props.enEnviar} /> :\r\n                        <Button color=\"yellow\" icon='checkmark' labelPosition='right' content='Modificar' onClick={this.props.enEditar} />\r\n                }\r\n            </Modal.Actions>\r\n\r\n        </Modal>\r\n\r\n    }\r\n}\r\nexport default ModalCrearEditarProveedor;","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Input , Dropdown,Button} from 'semantic-ui-react';\r\n\r\n//class InputSearchableData extends Component {\r\n\r\n/**\r\n * Input que se comporta como un searchable dropdown y fuerza que haya un valor igual a alguno de la lista.\r\n * Se le puede poner un boton al lado para facilitar el enlazado de objetos en forms complejos\r\n * @param {*} datalist\r\n *La datalist es una lista de objetos {text:\"texto\",value:\"0\"}.\r\n * \r\n */\r\nclass InputSearchableDataButton extends React.Component {\r\n\r\n    render = () => {\r\n        let control = <div>\r\n            <Input /* iconPosition='left'*/ transparent={this.props.transparent} list={this.props.linkId} loading={this.props.loading}\r\n                disabled={this.props.disabled} placeholder={this.props.placeholder}\r\n                fluid={this.props.fluid}\r\n                value={this.props.value}\r\n                onBlur={(event, data) => {/*\r\n                console.log(\"proovs! \",this.state.opcionesProveedores);\r\n                console.log(\"event! \",event.target.value);\r\n                console.log(\"data! \",data);*/\r\n                    if (event.target.value) {\r\n                        let foundVal = this.props.datalist.find((obj) => {\r\n                            /*\r\n                            console.log(\"vallllllllllllll\",obj.text);\r\n                            if(obj.text.includes(event.target.value))\r\n                                console.log(obj.text);*/\r\n                            return obj.text.includes(event.target.value)\r\n                        });\r\n                        if (foundVal) {\r\n\r\n                            this.props.setValue(foundVal);\r\n                            /*\r\n                            //console.log(\"VAL!\",foundVal)\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[this.props.index].proveedor = foundVal.text;\r\n                            this.setState({ servicios: servs });*/\r\n                        } else {\r\n                            this.props.setValue({});\r\n                            /*\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[this.props.index].proveedor = \"\";\r\n                            this.setState({ servicios: servs });*/\r\n                        }\r\n                    } else {\r\n                        this.props.setValue({});\r\n                        /*\r\n                        var servs = this.state.servicios.slice();\r\n                        servs[this.props.index].proveedor = \"\";\r\n                        this.setState({ servicios: servs });*/\r\n                    }\r\n                }}\r\n                onChange={(event) => {\r\n\r\n                    this.props.setValue(event.target.value);\r\n                    /*\r\n                    var servs = this.state.servicios.slice();\r\n                    servs[this.props.index].proveedor = event.target.value;\r\n                    this.setState({ servicios: servs });*/\r\n                }}>\r\n                {/*\r\n            <Icon name='lightning' />*/}\r\n                <input />\r\n                {this.props.sideButton}\r\n            </Input>\r\n            <datalist id={this.props.linkId}>\r\n                {this.props.datalist.map(e => <option key={e.value} value={e.text} />)}\r\n            </datalist>\r\n        </div>\r\n\r\n        let control2 = <div>\r\n            <Dropdown\r\n                placeholder={this.placeholder}\r\n                search\r\n                selection\r\n                options={this.props.datalist}\r\n                loading={this.props.loading}\r\n                disabled={this.props.disabled}\r\n                placeholder={this.props.placeholder}\r\n                value={this.props.value}\r\n                onChange={this.props.onChange}\r\n            />\r\n            {this.props.sideButton}\r\n        </div>\r\n        return control2;\r\n    }\r\n\r\n}\r\n\r\nexport default InputSearchableDataButton;","import React from 'react';\r\nimport {  Icon,  Message, Dropdown, Modal, Button, Input, Grid} from 'semantic-ui-react';\r\nimport ElementoForm from '../ElementoForm/ElementoForm';\r\nimport CONSTANTES_GLOBALES from '../../common/Constantes';\r\nimport MensajeTransaccion from '../MensajeTransaccion/MensajeTransaccion';\r\n\r\n/**\r\n * \r\n * @param {*} props Requiere un state parent con la siguiente estructura.\r\n * ```jsx\r\n * \r\n    state = { ...\r\n        modalBiblia:{\r\n            abierto:false,\r\n            transaccionEnviada:false,\r\n            responseRecibida:false,\r\n            rptaTransaccion:null,\r\n            campos:{\r\n                mes:null,\r\n                anho:null\r\n            }\r\n        }\r\n        ...\r\n    } ```\r\n\r\n */\r\nconst ModalCrearBiblia = (props) => {\r\n           \r\n    //console.log(\"props:\",props);\r\n    return (\r\n    <Modal size=\"tiny\" open ={props.parentComponent.state.modalBiblia.abierto} centered={true} onClose={() => {var obj = {...props.parentComponent.state.modalBiblia};\r\n        obj.abierto=false;\r\n        props.parentComponent.setState({modalBiblia:obj});}}>\r\n        <Modal.Header>Nueva biblia</Modal.Header>\r\n        <Modal.Content>\r\n            <Grid>\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <ElementoForm titulo=\"Mes\">\r\n                            <Dropdown placeholder=\"Junio\" fluid search selection options={CONSTANTES_GLOBALES.ListaMeses} \r\n                                onChange = {(event,data)=>{\r\n                                    var newState = {...props.parentComponent.state};\r\n                                    newState.modalBiblia.campos.mes= data.value;\r\n                                    props.parentComponent.setState(newState);\r\n                                    }}/>\r\n                        </ElementoForm>    \r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <ElementoForm titulo=\"Año\">\r\n                            <Input fluid placeholder=\"Año\" onChange={(event)=>{\r\n                                    var newState = {...props.parentComponent.state};\r\n                                    newState.modalBiblia.campos.anho=event.target.value;\r\n                                    props.parentComponent.setState(newState);\r\n                                }}></Input>\r\n                        </ElementoForm>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <MensajeTransaccion \r\n                transaccionEnviada = {props.parentComponent.state.modalBiblia.transaccionEnviada} \r\n                responseRecibida = {props.parentComponent.state.modalBiblia.responseRecibida}\r\n                rptaTransaccion = {props.parentComponent.state.modalBiblia.rptaTransaccion}\r\n                textoExito = \"Puede usar la nueva biblia\"\r\n            />\r\n            {/*msj*/}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n            <Button negative onClick={() => {var obj = {...props.parentComponent.state.modalBiblia};\r\n                obj.abierto=false;\r\n                props.parentComponent.setState({modalBiblia:obj});}}>\r\n                Cancelar\r\n            </Button>\r\n            <Button positive icon='checkmark' labelPosition='right' content='Crear' onClick={props.parentComponent.EnviarPostBiblia} />\r\n        </Modal.Actions>\r\n    </Modal>)    \r\n}\r\n\r\nexport default ModalCrearBiblia;","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Dropdown, Input, TextArea, Form, Grid, Segment, Button, Icon, Label, Table, Message, Popup, Header, Modal, Container } from 'semantic-ui-react'\r\n\r\nimport ElementoForm from '../../../components/ElementoForm/ElementoForm';\r\nimport Constantes, { RptaTrx } from '../../../common/Constantes';\r\nimport { Configuracion } from '../../../common/Constantes';\r\nimport CamposCrearCliente from '../../VerClientes/CamposCrearCliente/CamposCrearCliente';\r\n\r\n//date pickers\r\nimport { DateInput, TimeInput, DateTimeInput, DatesRangeInput } from 'semantic-ui-calendar-react';\r\nimport axios from 'axios';\r\nimport ModalTrxSimple from '../../ModalTrxSimple/ModalTrxSimple';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport ModalCrearEditarProveedor from '../../MostradorProovedores/ModalCrearEditarProveedor';\r\nimport MensajeTransaccion from '../../../components/MensajeTransaccion/MensajeTransaccion';\r\n\r\nimport '../CrearFile/CrearFile.css'\r\nimport InputSearchableDataButton from '../../../components/InputSearchableData/InputSearchableData';\r\nimport ModalCrearBiblia from '../../../components/ModalCrearBiblia/ModalCrearBiblia';\r\n\r\nconst CampoServicio = (props) => {\r\n    return <Segment style={{ padding: \"7px\" }}><Header style={{ margin: \"-2px 0px 4px 0px\" }} as=\"h4\">{props.titulo}</Header>{props.componente}</Segment>\r\n}\r\n\r\n\r\nclass CrearFile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //this.modalClientesRef = React.createRef();\r\n    }\r\n\r\n    servicio = (fecha, ciudad, nombre, pasajeros, nombrePasajero, tren, alm, observaciones, idProveedor) => {\r\n        return { fecha, ciudad, nombre, pasajeros, nombrePasajero, tren, alm, observaciones, idProveedor };\r\n    }\r\n    transporte = (fecha, ciudad, horaRecojo, horaSalida, vuelo, nombre, pasajeros, nombrePasajero, vr, tc, idProveedor, observaciones) => {\r\n        return { fecha, ciudad, horaRecojo, horaSalida, vuelo, nombre, pasajeros, nombrePasajero, vr, tc, idProveedor, observaciones };\r\n    }\r\n\r\n    servicioDefault = () => {\r\n        return this.servicio('', '', '', 0, '', '', '', '')\r\n    }\r\n    transporteDefault = () => {\r\n        return this.transporte('', '', '', '', '', '', 0, '', '', '', '', '')\r\n    }\r\n\r\n    state = {\r\n        //datos de modal biblia\r\n        modalCliente: {\r\n            //abierto:false,\r\n            transaccionEnviada: false,\r\n            responseRecibida: false,\r\n            rptaTransaccion: null\r\n        },\r\n\r\n        modalBiblia: {\r\n            abierto: false,\r\n            transaccionEnviada: false,\r\n            responseRecibida: false,\r\n            rptaTransaccion: null,\r\n\r\n            campos: {\r\n                mes: null,\r\n                anho: null\r\n            }\r\n        },\r\n\r\n        //datos de file\r\n        idFile: undefined,\r\n        codigo: '',\r\n        descripcion: '',\r\n        idBiblia: undefined,\r\n        idCliente: undefined,\r\n\r\n        servicios: [\r\n            //this.servicioDefault()\r\n        ],\r\n        transportes: [],\r\n\r\n        //opciones a elegir\r\n        bibliasCargaron: false,\r\n        //bibliasCargaronExito: true,\r\n\r\n        clientesCargaron: false,\r\n        //clientesCargaronExito: true,\r\n\r\n        hotelesCargaron: false,\r\n        //hotelesCargaronExito: true,\r\n\r\n        opcionesBiblia: [/*{value:1, text:'mayo, 2019'}*/],\r\n        opcionesCliente: [/*{value:1, text:''}*/],\r\n        opcionesProveedores: [/*{value:1, text:'juancito'}*/],\r\n        opcionesTransportes: [/*{value:1, text:'juancito'}*/],\r\n        opcionesCiudades: [],\r\n        opcionesPaises: [],\r\n\r\n\r\n        modalCrearEditarProveedor: {\r\n            //creacion o edicion\r\n            modo: \"creacion\",\r\n            abierto: false,\r\n\r\n            mensaje: {\r\n                enviado: false,\r\n                recibido: false,\r\n                respuesta: null\r\n            },\r\n\r\n            campos: {\r\n                id: '',\r\n                nombre: '',\r\n                correo: '',\r\n                correoAdic: '',\r\n                num: '',\r\n                numAdic: '',\r\n                ciudad: '',\r\n                tipo: ''\r\n            }\r\n        },\r\n\r\n        modalCrearProveedorTransporte: {\r\n            modo: \"creacion\",\r\n            abierto: false,\r\n\r\n            mensaje: {\r\n                enviado: false,\r\n                recibido: false,\r\n                respuesta: null\r\n            },\r\n\r\n            campos: {\r\n                id: '',\r\n                nombre: '',\r\n                correo: '',\r\n                correoAdic: '',\r\n                num: '',\r\n                numAdic: '',\r\n                ciudad: '',\r\n                tipo: ''\r\n            }\r\n        },\r\n\r\n        transaccionEnviadaCrearFile: false,\r\n        responseRecibidaCrearFile: false,\r\n        rptaTransaccionCrearFile: null,\r\n\r\n        mensajeCreacionFile: \"\",\r\n        creacionFileExitosa: false\r\n    }\r\n\r\n\r\n    contenedorCamposModalCliente = {\r\n        //ff:()=>{console.log(this.contCliente)},\r\n        //funcCrearCliente:()=>{}\r\n    }\r\n\r\n\r\n    modoVer = () => {\r\n        return this.props.modo === \"ver\";\r\n    }\r\n\r\n    modoEditar = () => {\r\n        return this.props.modo === \"editar\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"PROPS\", this.props);\r\n        //Requester.getListadoFiles(this.filesRecibidos,this.filesError);\r\n\r\n\r\n        if (this.props.modo === \"ver\" || this.props.modo === \"editar\") {\r\n            this.cargarFileBase();\r\n        }\r\n        if (this.props.modo === \"crear\" || this.props.modo === \"editar\") {\r\n            this.cargarClientes();\r\n            this.cargarBiblias();\r\n            this.cargarProveedoresNoTransp();\r\n            this.cargarTransportes();\r\n            this.cargarCiudades();\r\n            //this.cargarPaises();\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n\r\n        let fieldStyle = { margin: \"6px 0 4px 0\" };\r\n        let titulo = \"Nuevo File\";\r\n        if (this.props.modo === \"ver\")\r\n            titulo = \"Ver File\";\r\n        else if (this.props.modo === \"editar\")\r\n            titulo = \"Modificar File\";\r\n\r\n        let estiloTextArea = {};\r\n        if (this.modoVer()) {\r\n            estiloTextArea = { borderStyle: \"none\", color: \"gray\" };\r\n        }\r\n\r\n        let eleccionBiblia = {};\r\n\r\n        let controlBiblia = <InputSearchableDataButton\r\n            loading={!this.state.hotelesCargaron}\r\n            disabled={this.modoVer()}\r\n            placeholder={this.modoVer() ? \"\" : 'Elegir Biblia'}\r\n            datalist={this.state.opcionesBiblia}\r\n            value={this.state.idBiblia}\r\n            sideButton={\r\n                <Button icon primary onClick={() => {\r\n                    var obj = { ...this.state.modalBiblia };\r\n                    obj.abierto = true;\r\n                    this.setState({ modalBiblia: obj });\r\n                }}>\r\n                    <Icon name='plus' />\r\n                </Button>\r\n            }\r\n            onChange={(event, data) => {\r\n                console.log(\"event\", event);\r\n                console.log(\"data\", data);\r\n                this.setState({ idBiblia: data.value })\r\n            }}\r\n        />\r\n\r\n        if (this.modoVer()) {\r\n            controlBiblia = <Input disabled transparent fluid value={this.state.nombreBiblia ? this.state.nombreBiblia : \"\"} ></Input>\r\n        }\r\n\r\n        let controlCliente = <Dropdown fluid\r\n            placeholder='Christian'\r\n            search\r\n            loading={!this.state.bibliasCargaron}\r\n            selection\r\n            value={this.state.idCliente}\r\n            options={this.state.opcionesCliente}\r\n            onChange={(event, data) => {\r\n                this.setState({ idCliente: data.value });\r\n            }}\r\n        />\r\n\r\n        if (this.modoVer()) {\r\n            controlCliente = <Input disabled transparent fluid value={this.state.nombreCliente ? this.state.nombreCliente : \"\"} ></Input>\r\n        }\r\n\r\n\r\n        let controlDescripcion = <TextArea disabled={this.modoVer()} style={estiloTextArea} placeholder='Descripcion del file' rows={1} value={this.state.descripcion ? this.state.descripcion : \"\"} onChange={(event) => {\r\n            this.setState({ descripcion: event.target.value });\r\n        }} />\r\n\r\n        if (this.modoVer()) {\r\n            controlDescripcion = <Input disabled transparent fluid value={this.state.descripcion ? this.state.descripcion : \"\"} />\r\n        }\r\n\r\n\r\n\r\n        return <div>\r\n            {/*<Button onClick={() => { console.log(\"state\", this.state) }} wee></Button>*/}\r\n            <Header size=\"large\">{titulo}</Header>\r\n            <Segment>\r\n                <Grid columns={2} >\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Header >Datos</Header>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={8}>\r\n                            <ElementoForm titulo=\"Codigo *\">\r\n                                <Input disabled={this.modoVer()} transparent={this.modoVer()} fluid placeholder=\"08-020\" value={this.state.codigo ? this.state.codigo : \"\"} onChange={(event) => {\r\n                                    this.setState({ codigo: event.target.value });\r\n                                }} ></Input>\r\n                            </ElementoForm>\r\n\r\n                        </Grid.Column>\r\n                        <Grid.Column width={8}>\r\n                            <ElementoForm titulo=\"Descripcion\">\r\n                                <Form>\r\n                                    {/*style={{ minHeight: 100 }}*/}\r\n                                    {controlDescripcion}\r\n\r\n                                </Form>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={8}>\r\n                            <ElementoForm titulo=\"Biblia *\">\r\n                                <Grid>\r\n                                    <Grid.Row columns='equal'>\r\n\r\n                                        <Grid.Column width={16}>\r\n                                            {controlBiblia}\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column width={8}>\r\n                            <ElementoForm titulo=\"Cliente *\">\r\n                                {controlCliente}\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    {/*<Button positive onClick={() => { console.log(this.state) }}>weeee</Button>*/}\r\n                    <Grid.Row>\r\n                        <Grid.Column width={16}>\r\n                            <Header >Servicios</Header> \r\n                            {this.state.servicios.length==0?<Segment secondary textAlign=\"center\">No hay servicios en este file</Segment>:''}\r\n                            {this.state.servicios.map((elem, index) => {\r\n                                //return this.filaServicio(index);\r\n                                let key = 0;\r\n                                if(this.state.servicios[index])\r\n                                    key = this.state.servicios[index].idServicio;\r\n\r\n                                return this.CuerpoServicio({ index: index, key : key });\r\n                            })}\r\n                            {this.modoVer() ? <div></div> :\r\n                                <Button content='Agregar servicio' icon='plus' floated=\"left\" labelPosition='right' onClick={() => {\r\n                                    var servs = this.state.servicios.slice();\r\n                                    servs.push(this.servicioDefault());\r\n                                    this.setState({ servicios: servs });\r\n                                }} />\r\n                            }\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={16}>\r\n                            <Header >Transportes</Header>\r\n\r\n                            {this.state.transportes.length==0?<Segment secondary textAlign=\"center\">No hay transportes en este file</Segment>:''}\r\n                            {this.state.transportes.map((elem, index) => {\r\n                                let key = 0;\r\n                                if(this.state.transportes[index])\r\n                                    key = this.state.transportes[index].idServicio;\r\n                                return this.CuerpoTransporte({ index: index, key : key });\r\n                            })}\r\n                            {this.modoVer() ? <div></div> :\r\n                                <Button content='Agregar transporte' icon='plus' labelPosition='right' onClick={() => {\r\n                                    var transps = this.state.transportes.slice();\r\n                                    transps.push(this.transporteDefault());\r\n                                    this.setState({ transportes: transps });\r\n                                }} />\r\n                            }\r\n                            <MensajeTransaccion\r\n                                transaccionEnviada={this.state.transaccionEnviadaCrearFile}\r\n                                responseRecibida={this.state.responseRecibidaCrearFile}\r\n                                rptaTransaccion={this.state.rptaTransaccionCrearFile}\r\n                            //textoExito = \"Puede usar la nueva biblia\"\r\n                            />\r\n\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n                </Grid>\r\n                {this.modoVer() ? <div></div> :\r\n                    <Grid>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Button positive onClick={() => { this.EnviarPostFile() }}>Guardar file</Button>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                }\r\n\r\n            </Segment>\r\n            {/*\r\n            {!this.state.bibliasCargaronExito ? <Message error>Error de conexion: Las biblias no se pueden cargar.</Message> : null}\r\n            {!this.state.clientesCargaronExito ? <Message error>Error de conexion: Los clientes no se pueden cargar.</Message> : null}\r\n            {!this.state.hotelesCargaronExito ? <Message error>Error de conexion: Los hoteles no se pueden cargar.</Message> : null}\r\n            */}\r\n\r\n\r\n            <Container fluid textAlign=\"right\">\r\n            </Container>\r\n\r\n\r\n            <ModalCrearBiblia parentComponent={this} />\r\n\r\n            <ModalCrearEditarProveedor\r\n                parent={this}\r\n                pack=\"modalCrearEditarProveedor\"\r\n                sustantivoTitulo=\"Proveedor Nuevo\"\r\n                elegirTipo\r\n                placeholderNombre=\"Melia\"\r\n                placeholderCorreo=\"ventas@hotelmelia.com\"\r\n                placeholderCorreoAdic=\"contacto.melia@gmail.com\"\r\n                enEnviar={this.enEnviarProovedor}\r\n                enCerrar={this.enCerrarModalProveedor} />\r\n\r\n\r\n            <ModalCrearEditarProveedor \r\n                parent={this} \r\n                pack=\"modalCrearProveedorTransporte\" \r\n                sustantivoTitulo=\"Transportista Nuevo\"\r\n                placeholderNombre=\"Transportista\"\r\n                placeholderCorreo=\"carlos@gmail.com\"\r\n                placeholderCorreoAdic=\"contacto@transportescarlos.com\"\r\n                enEnviar={this.enEnviarProveedorTransporte}\r\n                enCerrar={this.enCerrarModalProveedorTransportes} />\r\n\r\n\r\n            {/*this.ModalCrearBiblia()*/}\r\n            {/*this.ModalCrearCliente()*/}\r\n        </div>\r\n\r\n    }\r\n\r\n    // ------------------------------------------------------------------------- Cargas iniciales\r\n\r\n    cargarFileBase = () => {\r\n        //console.log(\"id:\",this.props)\r\n        Requester.getFile(this.props.idFile,\r\n            rpta => {\r\n                //console.log(\"recibido\",rpta)\r\n                this.setState({\r\n                    idFile: rpta.cont.id,\r\n                    codigo: rpta.cont.codigo,\r\n                    descripcion: rpta.cont.descripcion,\r\n                    idBiblia: rpta.cont.idBiblia,\r\n                    idCliente: rpta.cont.idCliente,\r\n                    nombreBiblia: rpta.cont.nombreBiblia,\r\n                    nombreCliente: rpta.cont.nombreCliente,\r\n                    servicios: rpta.cont.servicios,\r\n                    transportes: rpta.cont.transportes\r\n                });\r\n            },\r\n            rpta => {\r\n\r\n            });\r\n    }\r\n\r\n    cargarClientes = () => {\r\n        Requester.getClientesListaDropdown(rpta => {\r\n            //console.log(rpta);\r\n            var listaOpsCliente = rpta.cont.map(element => { return { value: element.value, text: element.text } });\r\n            this.setState({\r\n                clientesCargaronExito: false,\r\n                clientesCargaron: true,\r\n                opcionesCliente: listaOpsCliente\r\n            })\r\n        }, (rptaError) => {\r\n            this.setState({\r\n                clientesCargaronExito: false,\r\n                clientesCargaron: true\r\n            });\r\n        });\r\n    }\r\n\r\n    cargarBiblias = () => {\r\n        Requester.getBibliasDropdownCompleto((rpta) => {\r\n            var listaBiblias = rpta.cont.map(element => { return { value: element.value, text: element.text } });\r\n            this.setState({ opcionesBiblia: listaBiblias });\r\n            this.setState({\r\n                bibliasCargaronExito: false,\r\n                bibliasCargaron: true\r\n            });\r\n        },\r\n            (rptaError) => {\r\n                //console.log(rptaError);\r\n                this.setState({\r\n                    bibliasCargaronExito: false,\r\n                    bibliasCargaron: true,\r\n                });\r\n            })\r\n    }\r\n\r\n    cargarCiudades = () => {\r\n        Requester.getCiudades((rpta) => {\r\n            this.setState({ opcionesCiudades: rpta.cont });\r\n        },\r\n            (rptaError) => {\r\n                console.error(\"Ciudades no cargadas\");\r\n            })\r\n    }\r\n\r\n    cargarPaises = () => {\r\n        Requester.getPaises((rpta) => {\r\n            this.setState({ opcionesPaises: rpta.cont });\r\n        },\r\n            (rptaError) => {\r\n                console.error(\"Paises no cargadas\");\r\n            })\r\n    }\r\n\r\n    cargarProveedoresNoTransp = () => {\r\n        Requester.getProveedoresMenosTransportes((rpta) => {\r\n            var listaProovs = rpta.cont.map(element => { return { value: element.idProveedor, text: element.nombre } });\r\n            this.setState({\r\n                opcionesProveedores: listaProovs,\r\n                hotelesCargaronExito: true,\r\n                hotelesCargaron: true\r\n            });\r\n        }, (rptaError) => {\r\n            //console.log(rptaError);\r\n            this.setState({\r\n                hotelesCargaronExito: false,\r\n                hotelesCargaron: true\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    cargarTransportes = () => {\r\n        Requester.getProveedoresTransportes((rpta) => {\r\n            var listaProovs = rpta.cont.map(element => { return { value: element.idProveedor, text: element.nombre } });\r\n            this.setState({\r\n                opcionesTransportes: listaProovs\r\n            });\r\n        }, (rptaError) => {\r\n        });\r\n    }\r\n\r\n    CuerpoServicio = (props) => {\r\n\r\n        let estiloInputs = {}\r\n        if (this.modoVer())\r\n            estiloInputs = { color: \"black\" };\r\n\r\n        let controlProveedor =\r\n            <InputSearchableDataButton\r\n                loading={!this.state.hotelesCargaron}\r\n                disabled={this.modoVer()}\r\n                placeholder={this.modoVer() ? \"\" : 'Sheraton'}\r\n                datalist={this.state.opcionesProveedores}\r\n                value={this.state.servicios[props.index].idProveedor}\r\n                sideButton={\r\n                    <Button style={{ padding: \"3px 11px\", backgroundColor: \"#00000000\" }} icon onClick={() => {\r\n                        let modal = { ...this.state.modalCrearEditarProveedor, abierto: true };\r\n                        this.setState({ modalCrearEditarProveedor: modal });\r\n                    }}>\r\n                        <Icon name='plus' />\r\n                    </Button>\r\n                }\r\n                onChange={(event, data) => {\r\n                    var servs = this.state.servicios.slice();\r\n                    servs[props.index].idProveedor = data.value;\r\n                    this.setState({ servicios: servs });\r\n                }}\r\n            />\r\n\r\n        if (this.modoVer()) {\r\n            console.log(\"cuerpo: \", this.state.servicios[props.index]);\r\n            controlProveedor = <Input disabled transparent fluid value={this.state.servicios[props.index].proovedor ? this.state.servicios[props.index].proovedor : \"\"} />\r\n        }\r\n\r\n\r\n        return <Segment.Group key={props.key}>\r\n            <Segment.Group horizontal>\r\n                <Segment style={{ backgroundColor: \"#fff5e6\" }}>\r\n                    <Grid columns=\"equal\">\r\n                        <Grid.Row style={{ padding: \"4px 0px\" }}>\r\n                            <Grid.Column verticalAlign=\"middle\">\r\n                                <Header as=\"h3\">Servicio {props.index + 1}</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column style={{ padding: \"0px 8px\" }}>\r\n\r\n                                {this.modoVer() ? <div></div> :\r\n                                    <Button style={{ padding: \"8px 14px\", margin: \"4px 0px\" }} floated=\"right\" color=\"red\" onClick={() => {\r\n                                        var lista = this.state.servicios.slice();\r\n                                        lista.splice(props.index, 1);\r\n                                        this.setState({ servicios: lista });\r\n                                        //console.log(this.state.servicios)\r\n                                    }}>Borrar</Button>\r\n                                }\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Segment>\r\n            </Segment.Group>\r\n            <Segment.Group horizontal style={{ backgroundColor: \"#fffbf6\" }}>\r\n                <CampoServicio titulo=\"Nombre *\" componente={\r\n                    <Input disabled={this.modoVer()} transparent fluid placeholder={this.modoVer() ? \"\" : \"In + city\"}\r\n                        value={this.state.servicios[props.index].nombre ? this.state.servicios[props.index].nombre : \"\"}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].nombre = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }} />\r\n                } />\r\n                <CampoServicio titulo=\"Ciudad de destino\" componente={\r\n                    <div>\r\n                        <Input disabled={this.modoVer()} transparent list={'ciudades' + props.index} placeholder={this.modoVer() ? \"\" : 'Lima'} fluid\r\n                        \r\n                            value={this.state.servicios[props.index].ciudad ? this.state.servicios[props.index].ciudad : \"\"}\r\n                            onChange={(event) => {\r\n                                var servs = this.state.servicios.slice();\r\n                                servs[props.index].ciudad = event.target.value;\r\n                                this.setState({ servicios: servs });\r\n                            }} />\r\n                        <datalist id={'ciudades' + props.index}>\r\n                            {this.state.opcionesCiudades.map(e => <option value={e} />)}\r\n                        </datalist>\r\n                    </div>\r\n                } />\r\n                <CampoServicio titulo=\"Fecha ejecución *\" componente={\r\n                    <DateInput\r\n                        disabled={this.modoVer()}\r\n                        transparent\r\n                        closable\r\n                        fluid\r\n                        dateFormat=\"YYYY-MM-DD\"\r\n                        name=\"fecha\"\r\n                        placeholder={this.modoVer() ? \"-\" : 'aaaa-mm-dd'}\r\n                        value={this.state.servicios[props.index].fecha ? this.state.servicios[props.index].fecha : \"\"}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"fecha\") {\r\n                                var servs = this.state.servicios.slice();\r\n                                servs[props.index].fecha = value;\r\n                                this.setState({ servicios: servs });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />} />\r\n                <CampoServicio titulo=\"Nombre pasajero\" componente={\r\n                    <Input transparent disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Lewis Hamilton'} fluid \r\n                        value={this.state.servicios[props.index].nombrePasajero ? this.state.servicios[props.index].nombrePasajero : \"\"}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].nombrePasajero = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }}></Input>} />\r\n                <CampoServicio titulo=\"Cant. pasajeros *\" componente={\r\n                    <Input type=\"number\" transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : '4'} \r\n                        value={this.state.servicios[props.index].pasajeros ? this.state.servicios[props.index].pasajeros : 0}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].pasajeros = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }}></Input>} />\r\n            </Segment.Group>\r\n            <Segment.Group horizontal style={{ backgroundColor: \"#fffbf6\" }}>\r\n\r\n                <CampoServicio titulo=\"Proveedor\" componente={controlProveedor} />\r\n\r\n                <CampoServicio titulo=\"Tren\" componente={\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Tren'}\r\n                        value={this.state.servicios[props.index].tren ? this.state.servicios[props.index].tren : \"\"}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].tren = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }}></Input>} />\r\n                <CampoServicio titulo=\"ALM\" componente={\r\n\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'ALM'} \r\n                        value={this.state.servicios[props.index].alm ? this.state.servicios[props.index].alm  :\"\"}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].alm = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }}></Input>} />\r\n                <CampoServicio titulo=\"Obs\" componente={\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'OBS'} \r\n                        value={this.state.servicios[props.index].observaciones ? this.state.servicios[props.index].observaciones : \"\"}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].observaciones = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }}></Input>\r\n                } />\r\n            </Segment.Group>\r\n        </Segment.Group>\r\n    }\r\n\r\n\r\n    CuerpoTransporte = (props) => {\r\n\r\n        let controlProveedorTransporte =\r\n            <InputSearchableDataButton\r\n                //loading={!this.state.hotelesCargaron}\r\n                disabled={this.modoVer()}\r\n                placeholder={this.modoVer() ? \"\" : 'Transp. Manuel'}\r\n                datalist={this.state.opcionesTransportes}\r\n                value={this.state.transportes[props.index].idProveedor}\r\n                sideButton={\r\n                    <Button style={{ padding: \"3px 11px\", backgroundColor: \"#00000000\" }} icon onClick={() => {\r\n                        let modal = { ...this.state.modalCrearProveedorTransporte, abierto: true };\r\n                        this.setState({ modalCrearProveedorTransporte: modal });\r\n                    }}>\r\n                        <Icon name='plus' />\r\n                    </Button>\r\n                }\r\n                onChange={(event, data) => {\r\n                    var transps = this.state.transportes.slice();\r\n                    transps[props.index].idProveedor = data.value;\r\n                    this.setState({ transportes: transps });\r\n                }}\r\n            />\r\n        if (this.modoVer()) {\r\n            controlProveedorTransporte = <Input disabled transparent fluid value={this.state.transportes[props.index].proovedor ? this.state.transportes[props.index].proovedor : \"\"} />\r\n        }\r\n\r\n\r\n        return <Segment.Group key={props.key}>\r\n            <Segment.Group horizontal>\r\n                <Segment style={{ backgroundColor: \"#ccebff\" }}>\r\n                    <Grid columns=\"equal\">\r\n                        <Grid.Row style={{ padding: \"4px 0px\" }}>\r\n                            <Grid.Column verticalAlign=\"middle\">\r\n                                <Header as=\"h3\">Transporte {props.index + 1}</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column style={{ padding: \"0px 8px\" }}>\r\n                                {this.modoVer() ? <div></div> :\r\n                                    <Button style={{ padding: \"8px 14px\", margin: \"4px 0px\" }} floated=\"right\" color=\"red\" onClick={() => {\r\n                                        var lista = this.state.transportes.slice();\r\n                                        lista.splice(props.index, 1);\r\n                                        this.setState({ transportes: lista });\r\n                                    }}>Borrar</Button>\r\n                                }\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Segment>\r\n            </Segment.Group>\r\n            <Segment.Group horizontal style={{ backgroundColor: \"#e6f5ff\" }}>\r\n                <CampoServicio titulo=\"Nombre *\" componente={\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'APTO / Four points'}\r\n                        value={this.state.transportes[props.index].nombre ? this.state.transportes[props.index].nombre : \"\"}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].nombre = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n                <CampoServicio titulo=\"Ciudad de destino\" componente={\r\n                    <div>\r\n                        <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Ciudad'}\r\n                            value={this.state.transportes[props.index].ciudad ? this.state.transportes[props.index].ciudad : \"\"}\r\n                            onChange={(event) => {\r\n                                var trans = this.state.transportes.slice();\r\n                                trans[props.index].ciudad = event.target.value;\r\n                                this.setState({ transportes: trans });\r\n                            }}></Input>\r\n                    </div>\r\n                } />\r\n                <CampoServicio titulo=\"Fecha ejecucion *\" componente={\r\n                    <DateInput\r\n                        transparent\r\n                        fluid\r\n                        closable\r\n                        name=\"fecha\"\r\n                        dateFormat=\"YYYY-MM-DD\"\r\n                        disabled={this.modoVer()}\r\n                        placeholder={this.modoVer() ? \"\" : 'aaaa-mm-dd'}\r\n                        value={this.state.transportes[props.index].fecha ? this.state.transportes[props.index].fecha : \"\"}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"fecha\") {\r\n                                var transs = this.state.transportes.slice();\r\n                                transs[props.index].fecha = value;\r\n                                this.setState({ transportes: transs });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />} />\r\n                <CampoServicio titulo=\"Nombre pasajero\" componente={\r\n\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Steven Gerard'}\r\n                        value={this.state.transportes[props.index].nombrePasajero ? this.state.transportes[props.index].nombrePasajero : \"\"}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].nombrePasajero = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n                <CampoServicio titulo=\"Cant. pasajeros *\" componente={\r\n                    <Input type=\"number\" transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : '4'}\r\n                        value={this.state.transportes[props.index].pasajeros ? this.state.transportes[props.index].pasajeros : 0}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].pasajeros = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>} />\r\n            </Segment.Group>\r\n            <Segment.Group horizontal style={{ backgroundColor: \"#e6f5ff\" }}>\r\n                <CampoServicio titulo=\"Proveedor de Transporte\" componente={controlProveedorTransporte\r\n\r\n                    /*\r\n                    <div>\r\n                        <Input icon=\"lightning\" iconPosition=\"left\" list={'transportes' + props.index} transparent fluid\r\n                            disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Transportista'}\r\n                            value={this.state.transportes[props.index].proveedor}\r\n                            onChange={(event) => {\r\n                                var trans = this.state.transportes.slice();\r\n                                trans[props.index].proveedor = event.target.value;\r\n                                this.setState({ transportes: trans });\r\n                            }}></Input>\r\n                        <datalist id={'transportes' + props.index}>\r\n                            {this.state.opcionesTransportes.map(e => <option value={e.text} />)}\r\n                        </datalist>\r\n                    </div>\r\n\r\n\r\n\r\n                        */} />\r\n                <CampoServicio titulo=\"Hora recojo\" componente={\r\n                    <TimeInput\r\n                        transparent\r\n                        fluid\r\n                        name=\"hora\"\r\n                        disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : '0:00'}\r\n                        value={this.state.transportes[props.index].horaRecojo?this.state.transportes[props.index].horaRecojo:\"\"}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"hora\") {\r\n                                var transs = this.state.transportes.slice();\r\n                                transs[props.index].horaRecojo = value;\r\n                                this.setState({ transportes: transs });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />\r\n                } />\r\n                <CampoServicio titulo=\"Hora salida\" componente={\r\n                    <TimeInput\r\n                        transparent\r\n                        fluid\r\n                        name=\"hora\"\r\n                        disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : '0:00'}\r\n                        value={this.state.transportes[props.index].horaSalida?this.state.transportes[props.index].horaSalida:\"\"}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"hora\") {\r\n                                var transs = this.state.transportes.slice();\r\n                                transs[props.index].horaSalida = value;\r\n                                this.setState({ transportes: transs });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />\r\n                } />\r\n                <CampoServicio titulo=\"Vuelo\" componente={\r\n                    <Input transparent fluid\r\n                        value={this.state.transportes[props.index].vuelo ? this.state.transportes[props.index].vuelo:\"\"}\r\n                        disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Vuelo'}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].vuelo = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n                <CampoServicio titulo=\"V/R\" componente={\r\n\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'V/R'}\r\n                        value={this.state.transportes[props.index].vr ? this.state.transportes[props.index].vr : \"\"}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].vr = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n                <CampoServicio titulo=\"TC\" componente={\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'TC'}\r\n                        value={this.state.transportes[props.index].tc ? this.state.transportes[props.index].tc : \"\"}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].tc = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n                <CampoServicio titulo=\"Obs\" componente={\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'OBS'}\r\n                        value={this.state.transportes[props.index].observaciones ? this.state.transportes[props.index].observaciones : \"\"}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].observaciones = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n            </Segment.Group>\r\n        </Segment.Group>\r\n    }\r\n\r\n    EnviarPostFile = () => {\r\n\r\n        let obj = {\r\n            id: this.state.idFile,\r\n            idBiblia: this.state.idBiblia,\r\n            idCliente: this.state.idCliente,\r\n            codigo: this.state.codigo,\r\n            descripcion: this.state.descripcion,\r\n            servicios: this.state.servicios,\r\n            transportes: this.state.transportes\r\n        };\r\n\r\n        this.setState({ transaccionEnviadaCrearFile: true , responseRecibidaCrearFile: false});\r\n        console.log(\"file a enviar: \", obj)\r\n        //console.log(\"TRANSPORTESSS: \", obj.transportes)\r\n        let func = Requester.postFile;\r\n\r\n        if (this.modoEditar())\r\n            func = Requester.postEditarFile;\r\n\r\n        func(\r\n            obj,\r\n            (rpta) => {\r\n                //console.log(\"exitooo\")\r\n                this.setState({\r\n                    responseRecibidaCrearFile: true,\r\n                    rptaTransaccionCrearFile: rpta,\r\n                    transaccionEnviadaCrearFile: false\r\n                });\r\n            },\r\n            (rpta) => {\r\n                console.log(\"RPTA de error!\", rpta);\r\n                this.setState({\r\n                    responseRecibidaCrearFile: true,\r\n                    rptaTransaccionCrearFile: rpta,\r\n                    transaccionEnviadaCrearFile: false\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    EnviarPostCliente = (camposModalCliente) => {\r\n\r\n        var newState = { ...this.state.modalCliente };\r\n        newState.transaccionEnviada = true;\r\n        this.setState({ modalCliente: newState });\r\n\r\n        Requester.postCliente(this.state.camposModalCliente, (rpta) => {\r\n            var newState = { ...this.state.modalCliente };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rpta;\r\n            this.cargarClientes();\r\n            this.setState({ modalCliente: newState });\r\n        }, (rptaError) => {\r\n            var newState = { ...this.state.modalCliente };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rptaError;\r\n            this.setState({ modalCliente: newState });\r\n        });\r\n\r\n    }\r\n\r\n    // ------------------------------------------------------------------------- Modal clientes\r\n    /*\r\n        EnviarPostBiblia = () => {\r\n    \r\n            var newStateModalBiblia = { ...this.state.modalBiblia };\r\n            newStateModalBiblia.transaccionEnviada = true;\r\n            this.setState({ modalBiblias: newStateModalBiblia });\r\n            console.log(this.state.camposModalBiblia);\r\n    \r\n            Requester.postBiblia(this.state.camposModalBiblia, (rpta) => {\r\n                var newState = { ...this.state.modalBiblia };\r\n                newState.responseRecibida = true;\r\n                newState.rptaTransaccion = rpta;\r\n                this.cargarBiblias();\r\n                this.setState({ modalBiblia: newState });\r\n            }, (rptaError) => {\r\n                console.log(\"error!\")\r\n                console.log(rptaError)\r\n                console.log(this.state.modalBiblia);\r\n                var newState = { ...this.state.modalBiblia };\r\n                newState.responseRecibida = true;\r\n                newState.rptaTransaccion = rptaError;\r\n                console.log(this.state.modalBiblia);\r\n                this.setState({ modalBiblia: newState });\r\n            });\r\n        }\r\n    */\r\n\r\n\r\n    EnviarPostBiblia = () => {\r\n\r\n        var newStateModalBiblia = { ...this.state.modalBiblia };\r\n        newStateModalBiblia.transaccionEnviada = true;\r\n        this.setState({ modalBiblia: newStateModalBiblia });\r\n\r\n        Requester.postBiblia(this.state.modalBiblia.campos, (rpta) => {\r\n            var newState = { ...this.state.modalBiblia };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rpta;\r\n            this.cargarBiblias();\r\n            this.setState({ modalBiblia: newState });\r\n        }, (rptaError) => {\r\n            var newState = { ...this.state.modalBiblia };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rptaError;\r\n            //console.log(this.state.modalBiblia);\r\n            this.setState({ modalBiblia: newState });\r\n        });\r\n    }\r\n\r\n    // ------------------------------------------------------------------------- Modal proveedores todos\r\n\r\n\r\n    abrirModalProveedor = () => {\r\n        var obj = { ...this.state.modalCrearEditarProveedor };\r\n        obj.modo = \"creacion\";\r\n        obj.abierto = true;\r\n        this.setState({ modalCrearEditarProveedor: obj });\r\n    }\r\n\r\n\r\n    enEnviarProovedor = () => {\r\n        var obj = { ...this.state.modalCrearEditarProveedor };\r\n        obj.mensaje.enviado = true;\r\n        obj.mensaje.recibido=false;\r\n        this.setState({ modalCrearEditarProveedor: obj });\r\n\r\n        Requester.postProveedor(\r\n            this.state.modalCrearEditarProveedor.campos.tipo,\r\n            this.state.modalCrearEditarProveedor.campos.nombre,\r\n            this.state.modalCrearEditarProveedor.campos.correo,\r\n            this.state.modalCrearEditarProveedor.campos.num,\r\n            this.state.modalCrearEditarProveedor.campos.numAdic,\r\n            this.state.modalCrearEditarProveedor.campos.correoAdic,\r\n            this.state.modalCrearEditarProveedor.campos.ciudad,\r\n            (rpta) => {\r\n                var obj = { ...this.state.modalCrearEditarProveedor };\r\n                obj.mensaje.recibido = true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({ modalCrearEditarProveedor: obj });\r\n                this.cargarProveedoresNoTransp();\r\n                //this.cargarProovs();\r\n            },\r\n            (rptaError) => {\r\n                console.log(\"err!\");\r\n                var obj = { ...this.state.modalCrearEditarProveedor };\r\n                obj.mensaje.recibido = true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({ modalCrearEditarProveedor: obj });\r\n            })\r\n    }\r\n\r\n\r\n    enCerrarModalProveedor = () => {\r\n        var obj = { ...this.state.modalCrearEditarProveedor };\r\n        obj.abierto = false;\r\n        obj.mensaje.recibido = false;\r\n        obj.mensaje.enviado = false;\r\n        obj.mensaje.respuesta = null;\r\n\r\n        obj.campos.id = '';\r\n        obj.campos.nombre = '';\r\n        obj.campos.correo = '';\r\n        obj.campos.correoAdic = '';\r\n        obj.campos.num = '';\r\n        obj.campos.numAdic = '';\r\n        obj.campos.ciudad = '';\r\n        obj.campos.tipo ='';\r\n        \r\n        this.setState({modalCrearEditarProveedor:obj});\r\n\r\n/*\r\n        if (this.state.modalCrearEditarProveedor.modo === \"edicion\") {\r\n            var obj = { ...this.state.modalCrearEditarProveedor };\r\n            obj.campos.tipo = '';\r\n            obj.campos.id = '';\r\n            obj.campos.nombre = '';\r\n            obj.campos.correo = '';\r\n            obj.campos.correoAdic = '';\r\n            obj.campos.num = '';\r\n            obj.campos.numAdic = '';\r\n            obj.campos.ciudad = '';\r\n            this.setState({ modalCrearEditar: obj });\r\n        }*/\r\n        //this.resetearCamposModalProveedor();\r\n    }\r\n    /*\r\n    resetearCamposModalProveedor =() => {\r\n        var obj = { ...this.state.modalCrearEditarProveedor };\r\n        obj.campos.id = '';\r\n        obj.campos.nombre = '';\r\n        obj.campos.correo = '';\r\n        obj.campos.correoAdic = '';\r\n        obj.campos.num = '';\r\n        obj.campos.numAdic = '';\r\n        obj.campos.ciudad = '';\r\n        obj.campos.tipo ='';\r\n        this.setState({ modalCrearEditarProveedor: obj });\r\n    }*/\r\n\r\n    // ------------------------------------------------------------------------- Modal proveedores transportes\r\n\r\n    abrirModalProveedorTransporte = () => {\r\n        var obj = { ...this.state.modalCrearProveedorTransporte };\r\n        obj.modo = \"creacion\";\r\n        obj.abierto = true;\r\n        this.setState({ modalCrearProveedorTransporte: obj });\r\n    }\r\n\r\n    enEnviarProveedorTransporte = () => {\r\n\r\n        var obj = { ...this.state.modalCrearProveedorTransporte };\r\n        obj.mensaje.enviado = true;\r\n        obj.mensaje.recibido=false;\r\n        this.setState({ modalCrearProveedorTransporte: obj });\r\n\r\n        Requester.postProvTransporte(\r\n            this.state.modalCrearProveedorTransporte.campos.nombre,\r\n            this.state.modalCrearProveedorTransporte.campos.correo,\r\n            this.state.modalCrearProveedorTransporte.campos.num,\r\n            this.state.modalCrearProveedorTransporte.campos.numAdic,\r\n            this.state.modalCrearProveedorTransporte.campos.correoAdic,\r\n            this.state.modalCrearProveedorTransporte.campos.ciudad,\r\n            (rpta) => {\r\n                console.log(this.state.modalCrearProveedorTransporte.campos);\r\n                console.log(\"success!\");\r\n                console.log(rpta);\r\n                var obj = { ...this.state.modalCrearProveedorTransporte };\r\n                obj.mensaje.recibido = true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({ modalCrearProveedorTransporte: obj });\r\n                //this.resetearCamposModalProveedorTransportes();\r\n                this.cargarTransportes();\r\n            },\r\n            (rptaError) => {\r\n                console.log(\"err!\");\r\n                var obj = { ...this.state.modalCrearProveedorTransporte };\r\n                obj.mensaje.recibido = true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({ modalCrearProveedorTransporte: obj });\r\n            })\r\n    }\r\n\r\n\r\n    resetearCamposModalProveedorTransportes =() => {\r\n        var obj = { ...this.state.modalCrearProveedorTransporte };\r\n        obj.campos.id = '';\r\n        obj.campos.nombre = '';\r\n        obj.campos.correo = '';\r\n        obj.campos.correoAdic = '';\r\n        obj.campos.num = '';\r\n        obj.campos.numAdic = '';\r\n        obj.campos.ciudad = '';\r\n        this.setState({ modalCrearProveedorTransporte: obj });\r\n    }\r\n\r\n    enCerrarModalProveedorTransportes = () => {\r\n        var obj = { ...this.state.modalCrearProveedorTransporte };\r\n        obj.mensaje.recibido = false;\r\n        obj.abierto=false;\r\n        obj.mensaje.enviado = false;\r\n        obj.mensaje.respuesta = null;\r\n\r\n        obj.campos.id = '';\r\n        obj.campos.nombre = '';\r\n        obj.campos.correo = '';\r\n        obj.campos.correoAdic = '';\r\n        obj.campos.num = '';\r\n        obj.campos.numAdic = '';\r\n        obj.campos.ciudad = '';\r\n\r\n        this.setState({ modalCrearProveedorTransporte: obj });\r\n        //if (this.state.modalCrearProveedorTransporte.modo === \"edicion\") {\r\n            //this.resetearCamposModalProveedorTransportes();\r\n            /*\r\n            var obj = { ...this.state.modalCrearProveedorTransporte };\r\n            obj.campos.id = '';\r\n            obj.campos.nombre = '';\r\n            obj.campos.correo = '';\r\n            obj.campos.correoAdic = '';\r\n            obj.campos.num = '';\r\n            obj.campos.numAdic = '';\r\n            obj.campos.ciudad = '';\r\n            this.setState({ modalCrearProveedorTransporte: obj });*/\r\n        //}\r\n    }\r\n\r\n}\r\n\r\nexport default CrearFile;","import React from 'react';\r\nimport {Component} from 'react';\r\nimport LogoYllari from '../../assets/logo_yllari.png'\r\n\r\nimport Huascaran from '../../assets/vistas/huascaran.png'\r\nimport Machupichu from '../../assets/vistas/machupichu.png'\r\nimport Costaverde from '../../assets/vistas/costaverdehd.png'\r\n\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nclass Inicio extends Component{\r\n\r\n    componentDidMount(){\r\n        \r\n        console.log(this.props)\r\n    }\r\n    \r\n    render(){\r\n        //return <div><h3>Pagina web en desarrollo :3</h3></div>\r\n        \r\n        return <div>\r\n            <br/>\r\n            <br/>\r\n            <Carousel showThumbs={false} showArrows={true} \r\n            autoPlay\r\n            stopOnHover\r\n            infiniteLoop\r\n            interval={8000}\r\n            emulateTouch={true}>\r\n            <div>\r\n                <img src={Huascaran} />\r\n            </div>\r\n            <div>\r\n                <img src={Machupichu} />\r\n            </div>\r\n            <div>\r\n                <img src={Costaverde} />\r\n            </div>\r\n        </Carousel><br/><br/>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Inicio;","import React from 'react';\r\nimport {Component} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { Label, Button, Container, Header, Segment} from 'semantic-ui-react';\r\nimport ReactTable from \"react-table\";\r\nimport 'react-table/react-table.css'\r\nimport TablaBuscador from '../TablaBuscador/TablaBuscador';\r\nimport ModalCrearServicio from './ModalCrearServicio';\r\nimport CONSTANTES_GLOBALES from '../../common/Constantes';\r\nimport Requester from '../../common/Services/Requester';\r\nimport moment from 'moment'\r\nimport momentTz from 'moment-timezone'\r\n\r\nclass VerServicios extends Component{\r\n\r\n    state={\r\n        modalServicio:{\r\n            abierto:false,\r\n            transaccionEnviada:false,\r\n            responseRecibida:false,\r\n            rptaTransaccion:null,\r\n            tipo:CONSTANTES_GLOBALES.TiposServicios[0].value,\r\n\r\n            campos:{\r\n                fecha:\"\",\r\n                ciudad:\"\",\r\n                nombre:'',\r\n                file:\"\",\r\n                hotel:\"\",\r\n                pasajeros:\"\",\r\n                nombrePasajero:\"\",\r\n                alm:\"\",\r\n                observaciones:\"\",\r\n                proveedor:\"\",\r\n                tren:\"\",\r\n                horaRecojo:\"\",\r\n                horaSalida:\"\",\r\n                transporte:\"\",\r\n\r\n            }\r\n        },\r\n\r\n        serviciosServ:[\r\n            /*\r\n            {\r\n                idServicio=1,\r\n                nombre: \"City tour\",\r\n                file: \"02-495\",\r\n                fecha:\"02-04-2017\", \r\n                ciudad:\"lima\",\r\n                hotel:\"melia\" ,\r\n                cantPasajeros: \"2\", \r\n                pasajero: \"Ctm\",\r\n            }*/\r\n        ] ,\r\n        \r\n        serviciosTransp:[\r\n            /*\r\n            {\r\n                nombre: \"City tour\",\r\n                file: \"02-495\",\r\n                fecha:\"02-04-2017\", \r\n                ciudad:\"lima\", \r\n                horaRecojo:\"11:40\", \r\n                horaSalida:\"11:40:01\", \r\n                cantPasajeros: \"3\", \r\n                pasajero: \"Ctm\",\r\n                transportista: \"Javi\" \r\n            }*/\r\n        ],\r\n         queryForzadoServs:\"\",\r\n         queryForzadoTransps:\"\"\r\n     }\r\n\r\n\r\n    render(){\r\n       \r\n        \r\n        const cols = [\r\n        {\r\n            Header: 'Nombre', accessor: 'nombre' , Cell: props => props.value ? props.value:\"-\" \r\n        },\r\n        {\r\n            Header: 'File', accessor: 'file', Cell: props => props.value ? props.value:\"-\" \r\n        },\r\n        {\r\n            Header: 'Fecha', accessor: 'fecha', Cell: props => props.value ? props.value:\"-\" \r\n        }, \r\n        {\r\n            Header: 'Ciudad', accessor: 'ciudad', Cell: props => props.value ? props.value:\"-\" \r\n        }, \r\n        {\r\n            Header: 'Hora recojo', accessor: 'horaRecojo', Cell: props => props.value ? props.value:\"-\" \r\n        },\r\n        {\r\n            Header: 'Cant. pasajeros', accessor: 'cantPasajeros', Cell: props => props.value ? props.value:\"-\" \r\n        }, \r\n        {\r\n            Header: 'Pasajero', accessor: 'pasajero', Cell: props => props.value ? props.value:\"-\" \r\n        }, \r\n        {\r\n            Header: 'Transportista', accessor: 'transportista', Cell: props => props.value ? props.value:\"-\" \r\n        }, \r\n        {\r\n            Header: 'Accion',\r\n            Cell: props => <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"/>\r\n                {/*<Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>*/}\r\n            </Container>\r\n        }, \r\n    ]\r\n    \r\n        return(<div>\r\n                <Header size=\"large\">Lista de servicios</Header> \r\n                {/*\r\n                <Button primary onClick={ ()=>{\r\n                    var obj = {...this.state.modalServicio};\r\n                    obj.abierto=true;\r\n                    this.setState({modalServicio:obj});\r\n                } }>Nuevo Servicio</Button>\r\n            */}\r\n            <Header size=\"small\">Servicios al día de...</Header>\r\n            <Button onClick={()=>{\r\n                    let fecha = moment().tz('America/Lima').format('Y-MM-DD')\r\n                    this.setState({queryForzadoServs:fecha,queryForzadoTransps:fecha})\r\n                }}>Hoy</Button>\r\n            <Button onClick={()=>{\r\n                    let fecha = moment().tz('America/Lima').add(1,'days').format('Y-MM-DD')\r\n                    this.setState({queryForzadoServs:fecha,queryForzadoTransps:fecha})\r\n                }}>Mañana</Button>\r\n            <Button onClick={()=>{\r\n                    this.setState({queryForzadoServs:\"\",queryForzadoTransps:\"\"})\r\n                }}   secondary>Todos</Button>\r\n                <Header size=\"medium\">Servicios generales programados</Header> \r\n                <Segment>\r\n                    <TablaBuscador \r\n                        queryForzado={this.state.queryForzadoServs} \r\n                        vaciarQueryForzado={this.vaciarQueryForzadoServs}\r\n                        data={this.state.serviciosServ} \r\n                        columns={cols} />\r\n                </Segment>\r\n                <Header size=\"medium\">Servicios de transporte programados</Header> \r\n                <Segment>\r\n                    <TablaBuscador \r\n                        queryForzado={this.state.queryForzadoTransps} \r\n                        vaciarQueryForzado={this.vaciarQueryForzadoTransps}\r\n                        data={this.state.serviciosTransp} columns={cols} />\r\n                </Segment>\r\n                {/*<ModalCrearServicio parentComp={this}/>*/}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    vaciarQueryForzadoServs = () =>{\r\n        this.setState({queryForzadoServs:''})\r\n    }\r\n    vaciarQueryForzadoTransps = () =>{\r\n        this.setState({queryForzadoTransps:''})\r\n    }\r\n\r\n    enviarServicio = () => {\r\n        /*\r\n        Requester.postServicio(\r\n            //this.state.modalServicio.campos.proveedor\r\n        )*/\r\n    }\r\n\r\n    componentDidMount= () =>{\r\n/*\r\n       \r\n                idServicio=1,\r\n                nombre: \"City tour\",\r\n                file: \"02-495\",\r\n                fecha:\"02-04-2017\", \r\n                ciudad:\"lima\",\r\n                hotel:\"melia\" ,\r\n                cantPasajeros: \"2\", \r\n                pasajero: \"Ctm\",\r\n                */\r\n               this.cargarServsGenerales();\r\n        this.cargarServsTransportes();\r\n    }\r\n\r\n    cargarServsGenerales = () => {\r\n        Requester.getServiciosGeneralesDetalle((rpta)=>{\r\n            var servs = rpta.cont.map((e,i)=>{\r\n                return {\r\n                    idServicio : e.idServicio,\r\n                    nombre : e.nombre,\r\n                    file: e.codigoFile,\r\n                    fecha : e.fecha,\r\n                    ciudad : e.ciudad,\r\n                    hotel : e.hotel,\r\n                    cantPasajeros : e.pasajeros,\r\n                    pasajero : e.nombrePasajero\r\n                };\r\n            });\r\n            this.setState({serviciosServ:servs});\r\n        },(rptaError)=>{\r\n            console.log(\"error!\");\r\n        });\r\n    }\r\n\r\n    cargarServsTransportes = () => {\r\n        \r\n        /*\r\n\r\n                nombre: \"City tour\",\r\n                file: \"02-495\",\r\n                fecha:\"02-04-2017\", \r\n                ciudad:\"lima\", \r\n                horaRecojo:\"11:40\", \r\n                horaSalida:\"11:40:01\", \r\n                cantPasajeros: \"3\", \r\n                pasajero: \"Ctm\",\r\n                transportista: \"Javi\" \r\n        */\r\n        Requester.getServiciosTransporteDetalle((rpta)=>{\r\n            console.log(\"rpta! transportes: \",rpta)\r\n            var servs = rpta.cont.map((e,i)=>{\r\n                return {\r\n                    idServicio : e.idServicio,\r\n                    nombre : e.nombre,\r\n                    file: e.codigoFile,\r\n                    fecha : e.fecha,\r\n                    ciudad : e.ciudad,\r\n                    horaRecojo : e.horaRecojo,\r\n                    cantPasajeros : e.pasajeros,\r\n                    pasajero : e.nombrePasajero,\r\n                    transportista : e.transporte\r\n                };\r\n            });\r\n            this.setState({serviciosTransp:servs});\r\n        },(rptaError)=>{\r\n            console.log(\"error!\");\r\n        });\r\n    }\r\n }\r\n\r\nexport default VerServicios;","import React from 'react';\r\nimport {Component} from 'react';\r\nimport { Form, Dropdown, Grid, Input } from 'semantic-ui-react';\r\nimport Constantes, { RptaTrx } from '../../../common/Constantes';\r\nimport ElementoForm from '../../../components/ElementoForm/ElementoForm';\r\nimport { DateInput, TimeInput } from 'semantic-ui-calendar-react';\r\n\r\nclass CrearServicio extends Component{\r\n    state={\r\n        tipo: Constantes.TiposServicios[0].value,\r\n        fecha:\"\",\r\n        ciudad:\"\",\r\n        nombre:null,\r\n        file:null,\r\n        hotel:null,\r\n        pasajeros:null,\r\n        nombrePasajero:null,\r\n        alm:null,\r\n        observaciones:null,\r\n        proveedor:null,\r\n        tren:null,\r\n        horaRecojo:null,\r\n        horaSalida:null,\r\n        transporte:null\r\n    }\r\n\r\n    render(){\r\n        if(this.state.tipo==Constantes.TiposServicios[0].value)\r\n            return this.camposServ();\r\n        else \r\n            return this.camposTransp();\r\n    }\r\n\r\n    camposTransp=()=>{\r\n        return <div>\r\n            <Form>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Tipo de servicio\">\r\n                                <Dropdown\r\n                                    placeholder='Tipo'\r\n                                    fluid\r\n                                    search\r\n                                    selection\r\n                                    value={this.state.tipo}\r\n                                    options={Constantes.TiposServicios}\r\n                                    onChange = {(event,data)=>{\r\n                                        this.setState({tipo:data.value});\r\n                                        }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"File\">\r\n                                <Dropdown\r\n                                    placeholder='File'\r\n                                    fluid\r\n                                    search\r\n                                    selection\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Fecha\">\r\n                                <DateInput\r\n                                    fluid\r\n                                    name=\"fecha\"\r\n                                    placeholder=\"10-02-2019\"\r\n                                    value={this.state.fecha}\r\n                                    iconPosition=\"left\"\r\n                                    onChange = { (event, {name, value} )=>{\r\n                                            if(name===\"fecha\"){\r\n                                                this.setState({fecha:value});\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Ciudad\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"Ciudad\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Nombre\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"City tour\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Observaciones\">\r\n                                <Input \r\n                                    fluid\r\n                                    value={this.state.ciudad} \r\n                                    placeholder=\"Observaciones y detalles sobre el servicio\"\r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Hora recojo\">\r\n                            <TimeInput\r\n                                    fluid\r\n                                    name=\"horaRecojo\"\r\n                                    placeholder=\"16:30\"\r\n                                    value={this.state.horaRecojo}\r\n                                    iconPosition=\"left\"\r\n                                    onChange = { (event, {name, value} )=>{\r\n                                            if(name===\"horaRecojo\"){\r\n                                                this.setState({horaRecojo:value});\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Hora salida\">\r\n                                <TimeInput\r\n                                    fluid\r\n                                    name=\"horaSalida\"\r\n                                    placeholder=\"17:30\"\r\n                                    value={this.state.horaSalida}\r\n                                    iconPosition=\"left\"\r\n                                    onChange = { (event, {name, value} )=>{\r\n                                            if(name===\"horaSalida\"){\r\n                                                this.setState({horaSalida:value});\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"6\">\r\n                            <ElementoForm titulo=\"Nombre pasajero\">\r\n                                <Input \r\n                                    fluid\r\n                                    value={this.state.nombrePasajero} \r\n                                    placeholder=\"Christian Cueva\"\r\n                                    onChange={(event)=>{this.setState({nombrePasajero:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Vuelo\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"Vuelo\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>  \r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Cantidad pasajeros\">\r\n                                <Input\r\n                                    fluid\r\n                                    placeholder={0}\r\n                                    type=\"number\"\r\n                                    value={this.state.pasajeros} \r\n                                    onChange={(event)=>{this.setState({pasajeros:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"6\">\r\n                            <ElementoForm titulo=\"V/R\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"V/R\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"TC\">\r\n                                <Input \r\n                                    placeholder=\"Tc\"\r\n                                    fluid\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Transporte\">\r\n                                <Input \r\n                                    icon='lightning'    \r\n                                    iconPosition='left'\r\n                                    fluid\r\n                                    placeholder=\"Carlos\"\r\n                                    list=\"transportes\"\r\n                                    value={this.state.transporte} \r\n                                    onChange={(event)=>{this.setState({transporte:event.target.value})}}/>\r\n                                <datalist id='transportes'>\r\n                                    <option value='Transportes Juan' />\r\n                                    <option value='Matias' />\r\n                                </datalist>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        {/*\r\n                        <Grid.Column width=\"6\">\r\n                            <ElementoForm titulo=\"Proveedor\">\r\n                                <Input \r\n                                    fluid\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>*/}\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Form>\r\n        </div>\r\n    }\r\n\r\n    camposServ = () => {\r\n        return <div>\r\n            <Form>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Tipo de servicio\">\r\n                                <Dropdown\r\n                                    placeholder='Tipo'\r\n                                    fluid\r\n                                    search\r\n                                    selection\r\n                                    options={Constantes.TiposServicios}\r\n                                    onChange = {(event,data)=>{\r\n                                        this.setState({tipo:data.value});\r\n                                        }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"File\">\r\n                                <Dropdown\r\n                                    placeholder='File'\r\n                                    fluid\r\n                                    search\r\n                                    selection\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Fecha\">\r\n                                <DateInput\r\n                                    fluid\r\n                                    name=\"fecha\"\r\n                                    placeholder=\"10-02-2019\"\r\n                                    value={this.state.fecha}\r\n                                    iconPosition=\"left\"\r\n                                    onChange = { (event, {name, value} )=>{\r\n                                            if(name===\"fecha\"){\r\n                                                this.setState({fecha:value});\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Ciudad\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"Ciudad\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Nombre\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"City tour\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Observaciones\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"Observaciones y detalles sobre el servicio\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Hotel\">\r\n                                <Input \r\n                                    icon='lightning'    \r\n                                    iconPosition='left'\r\n                                    list=\"hoteles\"\r\n                                    fluid\r\n                                    placeholder=\"Hotel Sheraton\"\r\n                                    value={this.state.hotel} \r\n                                    onChange={(event)=>{this.setState({hotel:event.target.value})}}/>\r\n                                <datalist id='hoteles'>\r\n                                    <option value='Sheraton' />\r\n                                    <option value='Hotel melia' />\r\n                                    <option value='Swissotel' />\r\n                                </datalist>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Cantidad pasajeros\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder={0}\r\n                                    type=\"number\"\r\n                                    value={this.state.pasajeros} \r\n                                    onChange={(event)=>{this.setState({pasajeros:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"6\">\r\n                            <ElementoForm titulo=\"Nombre pasajero\">\r\n                                <Input \r\n                                    fluid\r\n                                    value={this.state.nombrePasajero} \r\n                                    placeholder=\"Christian Cueva\"\r\n                                    onChange={(event)=>{this.setState({nombrePasajero:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Tren\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"Tren\"\r\n                                    value={this.state.tren} \r\n                                    onChange={(event)=>{this.setState({tren:event.target.value})}}/>  \r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"ALM\">\r\n                                <Input \r\n                                    fluid\r\n                                    value={this.state.alm} \r\n                                    placeholder=\"ALM\"\r\n                                    onChange={(event)=>{this.setState({alm:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"6\">\r\n                            <ElementoForm titulo=\"Proveedor\">\r\n                                <Input \r\n                                    icon='lightning'    \r\n                                    iconPosition='left'\r\n                                    fluid\r\n                                    placeholder=\"Umbro\"\r\n                                    list=\"proveedores\"\r\n                                    value={this.state.proveedor} \r\n                                    onChange={(event)=>{this.setState({proveedor:event.target.value})}}/>\r\n                                <datalist id='proveedores'>\r\n                                    <option value='Transportes Juan' />\r\n                                    <option value='Matias' />\r\n                                </datalist>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Form>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default CrearServicio;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport VerServicios from '../VerServicios/VerServicios';\r\nimport CrearFile from '../ViewFiles/CrearFile/CrearFile';\r\nimport { Segment, Header, Icon, Card, Grid, Message, Dropdown, Modal, Button, Input } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom'\r\nimport Requester from '../../common/Services/Requester';\r\nimport CONSTANTES_GLOBALES, { CodigoMesATexto } from '../../common/Constantes';\r\nimport ElementoForm from '../../components/ElementoForm/ElementoForm';\r\nimport ModalCrearBiblia from '../../components/ModalCrearBiblia/ModalCrearBiblia';\r\n\r\n\r\nclass ListaBiblias extends Component {\r\n\r\n    state = {\r\n\r\n        modalBiblia: {\r\n            abierto: false,\r\n            transaccionEnviada: false,\r\n            responseRecibida: false,\r\n            rptaTransaccion: null,\r\n\r\n            campos: {\r\n                mes: null,\r\n                anho: null\r\n            }\r\n        },\r\n\r\n        biblias: [\r\n            /*\r\n            {\r\n                anho:\"2018\",\r\n                meses:[\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Marzo\" , files:4},\r\n                    {mes:\"Mayo\" , files:2}\r\n                ]\r\n            },\r\n            {\r\n                anho:\"2019\",\r\n                meses:[\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Marzo\" , files:4},\r\n                    {mes:\"Mayo\" , files:2}\r\n                ]\r\n            }*/\r\n        ]\r\n    }\r\n\r\n    onlyUnique(value, index, self) {\r\n        return self.indexOf(value) === index;\r\n    }\r\n\r\n    navegar = (direccion) => {\r\n        this.props.history.push(direccion);\r\n    }\r\n\r\n    cargarBiblias = () => {\r\n\r\n\r\n        Requester.getBibliasDetalle((rpta) => {\r\n            var anhos = rpta.cont.map((e) => { return e.anho });\r\n            var anhosUnique = anhos.filter(this.onlyUnique);\r\n            //console.log(anhosUnique);\r\n            var biblias = anhosUnique.map((e, i) => {\r\n                var meses = rpta.cont.filter((biblia) => {\r\n                    return biblia.anho == e;\r\n                });\r\n                meses = meses.map((e) => {\r\n                    return {\r\n                        mes: CodigoMesATexto(e.mes),\r\n                        files: e.cantidadFiles,\r\n                        codigoMes:e.mes\r\n                    }\r\n                })\r\n                meses = meses.sort((a, b) => {\r\n                    return a.mes - b.mes;\r\n                })\r\n                //console.log(meses)\r\n                return { anho: e, meses: meses };\r\n            })\r\n            biblias.sort((a, b) => {\r\n                return b.anho - a.anho;\r\n            })\r\n            console.log(biblias);\r\n            this.setState({ biblias: biblias });\r\n        });\r\n    }\r\n    componentDidMount = () => {\r\n        this.cargarBiblias();\r\n    }\r\n\r\n    render = () => {\r\n        return <div>\r\n\r\n            <Header size=\"large\">Biblias</Header>\r\n            <Button primary onClick={() => {\r\n                var obj = { ...this.state.modalBiblia };\r\n                obj.abierto = true;\r\n                this.setState({ modalBiblia: obj });\r\n            }}>Nueva Biblia</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            {this.state.biblias.map(e => {\r\n                var cuadro = (\r\n                    <Segment tertiary>\r\n                        <Header size=\"large\">{e.anho}</Header>\r\n                        <Grid columns=\"6\">\r\n                            <Grid.Row>\r\n                                {e.meses.map((mes, i) => {\r\n                                    if (i < 6)\r\n                                        return <Grid.Column>\r\n                                            <Card>\r\n                                                <Card.Content header={mes.mes} />\r\n                                                <Card.Content extra style={{ backgroundColor: \"#00000000\", padding: \"5px 7px\" }}>\r\n                                                    <Icon style={{  padding: \"3px\" }} name='folder' />\r\n                                                    {mes.files}\r\n                                                    <Button style={{ backgroundColor: \"#00000000\", padding: \"5px\" }} icon floated=\"right\"\r\n                                                        onClick={() => {\r\n                                                            //console.log(\"state: \",this.props.location.pathname)\r\n                                                            this.navegar(\"/calendario/\"+e.anho+\"/\"+mes.codigoMes);\r\n                                                        }}>\r\n                                                        <Icon fitted size=\"large\" name=\"angle right\" />\r\n                                                    </Button>\r\n                                                </Card.Content>\r\n                                            </Card>\r\n                                        </Grid.Column>\r\n                                })}\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                {e.meses.map((mes, i) => {\r\n                                    if (i > 5)\r\n                                        return <Grid.Column>\r\n                                            <Card>\r\n                                                <Card.Content header={mes.mes} />\r\n                                                <Card.Content extra style={{ backgroundColor: \"#00000000\", padding: \"5px 7px\" }}>\r\n                                                    <Icon name='folder' />\r\n                                                    {mes.files}\r\n                                                    <Button style={{ backgroundColor: \"#00000000\", padding: \"5px\" }} icon floated=\"right\"\r\n                                                        onClick={() => {\r\n                                                            this.navegar(\"/calendario/\"+e.anho+\"/\"+mes.codigoMes);\r\n                                                        }}>\r\n                                                        <Icon fitted size=\"large\" name=\"angle right\" />\r\n                                                    </Button>\r\n                                                </Card.Content>\r\n                                            </Card>\r\n                                        </Grid.Column>\r\n                                })}\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Segment>\r\n                )\r\n                return cuadro;\r\n            })}{/*\r\n                \r\n            <hr/>\r\n            <Link onClick={()=>{\r\n                var obj = {...this.state.modalBiblia};\r\n                obj.abierto=true;\r\n                this.setState({modalBiblia:obj});\r\n                }}>\r\n                Crear biblia</Link>\r\n                */\r\n            }\r\n            <ModalCrearBiblia parentComponent={this} />\r\n        </div>\r\n    }\r\n\r\n    EnviarPostBiblia = () => {\r\n\r\n        var newStateModalBiblia = { ...this.state.modalBiblia };\r\n        newStateModalBiblia.transaccionEnviada = true;\r\n        this.setState({ modalBiblia: newStateModalBiblia });\r\n\r\n        Requester.postBiblia(this.state.modalBiblia.campos, (rpta) => {\r\n            var newState = { ...this.state.modalBiblia };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rpta;\r\n            this.cargarBiblias();\r\n            this.setState({ modalBiblia: newState });\r\n        }, (rptaError) => {\r\n            var newState = { ...this.state.modalBiblia };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rptaError;\r\n            //console.log(this.state.modalBiblia);\r\n            this.setState({ modalBiblia: newState });\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default ListaBiblias;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport ModalCrearEditarProveedor from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabTodos extends Component{\r\n\r\n    state = {\r\n        proveedores:[\r\n        ]\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Tipo', accessor: 'tipo'  }\r\n    ]\r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Todos los proveedores</Header> \r\n            {/*<Header size=\"small\">Lista</Header>*/}\r\n            <TablaBuscador data={this.state.proveedores} columns={this.columnasTabla} />\r\n        </div>\r\n    }\r\n\r\n    cargarTodos = () =>{\r\n        Requester.getProveedores( \"\" , (rpta)=>{\r\n            var proovs=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\",\r\n                    tipo: e.tipoProveedor?Constantes.aliasATextoProovedores(e.tipoProveedor):'-'\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({proveedores:proovs});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarTodos();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabTodos","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header, Confirm, Modal } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport lul from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabHoteles extends Component{\r\n\r\n    state = {\r\n        hoteles:[\r\n            //{idProveedor:\"-1\",nombre:\"Melia\", correo:\"asd@asd.com\", correoAdic:\"asljkdq@as.com\", numeroContacto:\"(51)65465\",numeroContactoAdicional:\"123312\", ciudad:\"city\"}\r\n        ],\r\n        \r\n        confirmacionEliminarAbierta:false,\r\n        idEliminar:null,\r\n        \r\n        modalCrearEditar:{\r\n            //creacion o edicion\r\n            modo:\"creacion\",\r\n            abierto:false,\r\n\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                id:null,\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo', accessor: 'correo', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Ciudad', accessor: 'ciudad', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Accion', Cell: props => {\r\n            //console.log(props);\r\n            return <Container textAlign=\"center\">\r\n                <Button circular color=\"yellow\" icon=\"pencil\" onClick={()=>{this.abrirModalEdicion(this.state.hoteles.find(element=>element.idProveedor==props.original.idProveedor))}}></Button>\r\n                <Button circular color=\"red\" icon=\"trash\" onClick={()=>{this.intentarEliminar(this.state.hoteles.find(element=>element.idProveedor==props.original.idProveedor))}}></Button>\r\n            </Container>\r\n        }} \r\n    ]\r\n    \r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Hoteles</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo Hotel</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.hoteles} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <lul parent={this} sustantivoTitulo=\"Hotel\" \r\n                placeholderNombre=\"Arawi\" \r\n                placeholderCorreo=\"correo@arawi.com\" \r\n                placeholderCorreoAdic=\"arawi.ventas@gmail.com\"\r\n                enEnviar={this.enviarHotel}\r\n                enEditar={this.editarHotel}\r\n                enCerrar={this.enCerrarModal}/>\r\n            <Confirm\r\n                open={this.state.confirmacionEliminarAbierta}\r\n                cancelButton=\"Cancelar\"\r\n                confirmButton=\"Eliminar\"\r\n                content={'Seguro que deseas eliminar el hotel ' + (this.state.idEliminar ? this.state.hoteles.find(element => element.idProveedor == this.state.idEliminar).nombre\r\n                    :\"<NULO>\") + '?'}\r\n                onCancel={this.cerrarConfirmacionEliminar}\r\n                onConfirm={()=>{this.confirmarEliminar(this.state.hoteles.find(element => element.idProveedor == this.state.idEliminar))}}\r\n            />\r\n            <Modal></Modal>\r\n        </div>\r\n    }\r\n\r\n    intentarEliminar=(proveedor)=>{\r\n        console.log(proveedor);\r\n        \r\n        if(proveedor){\r\n            this.setState({\r\n                idEliminar:proveedor.idProveedor,\r\n                confirmacionEliminarAbierta:true\r\n            })\r\n        }\r\n    }\r\n\r\n    confirmarEliminar = (proveedor) =>{\r\n        console.log(\"eliminando proveedor \" + proveedor.nombre)\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n\r\n        if(proveedor){\r\n            Requester.postElimnarProv(proveedor.idProveedor,\r\n                (rpta)=>{\r\n                    this.cargarHoteles();\r\n                },\r\n                (rptaError)=>{\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    cerrarConfirmacionEliminar = () =>{\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n    }\r\n\r\n    abrirModalEdicion= (proveedor)=>{\r\n        console.log(proveedor);\r\n        if(proveedor){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.modo=\"edicion\";\r\n            obj.abierto=true;\r\n            obj.campos.id = proveedor.idProveedor;\r\n            obj.campos.nombre = proveedor.nombre;\r\n            obj.campos.correo = proveedor.correo;\r\n            obj.campos.correoAdic = proveedor.correoAdic;\r\n            obj.campos.num = proveedor.numeroContacto;\r\n            obj.campos.numAdic = proveedor.numeroContactoAdicional;\r\n            obj.campos.ciudad = proveedor.ciudad;\r\n            console.log(obj);\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.modo=\"creacion\";\r\n        obj.abierto = true;\r\n        this.setState({modalCrearEditar:obj});\r\n    }\r\n\r\n    enviarHotel = () => { \r\n        console.log(\"enviando!\");\r\n        \r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrearEditar:obj});\r\n\r\n        Requester.postProvHotel( \r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.num,\r\n            this.state.modalCrearEditar.campos.numAdic,\r\n            this.state.modalCrearEditar.campos.correoAdic,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            (rpta)=>{\r\n                console.log(this.state.modalCrearEditar.campos);\r\n                console.log(\"success!\");\r\n                console.log(rpta);\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarHoteles();\r\n            },\r\n            (rptaError)=>{\r\n                console.log(\"err!\");\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n    \r\n    editarHotel = () => { \r\n        console.log(\"editando!\");\r\n        \r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrearEditar:obj});\r\n        console.log(\": \"+this.state.modalCrearEditar.campos.id);\r\n        Requester.postEditarProvHotel( \r\n            this.state.modalCrearEditar.campos.id,\r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.num,\r\n            this.state.modalCrearEditar.campos.numAdic,\r\n            this.state.modalCrearEditar.campos.correoAdic,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            (rpta)=>{\r\n                console.log(this.state.modalCrearEditar.campos);\r\n                console.log(\"edicion success!\");\r\n                console.log(rpta);\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarHoteles();\r\n            },\r\n            (rptaError)=>{\r\n                console.log(\"edicion error!\");\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n\r\n    cargarHoteles= () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.HOTEL, (rpta)=>{\r\n            var hoteles=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo,//?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional,//?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto,//?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroContactoAdicional,//?e.numeroContactoAdicional:\"-\",\r\n                    ciudad:e.ciudad//?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({hoteles:hoteles});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarHoteles();\r\n    }\r\n\r\n    enCerrarModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.recibido=false;\r\n        obj.mensaje.enviado=false;\r\n        obj.mensaje.respuesta=null;\r\n\r\n        if(this.state.modalCrearEditar.modo===\"edicion\"){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.campos.id=null;\r\n            obj.campos.nombre=null;\r\n            obj.campos.correo=null;\r\n            obj.campos.correoAdic=null;\r\n            obj.campos.num=null;\r\n            obj.campos.numAdic=null;\r\n            obj.campos.ciudad=null;\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default TabHoteles","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header, Confirm, Modal } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport ModalCrearEditarProveedor from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabProovs extends Component{\r\n\r\n    state = {\r\n        proovs:[\r\n            //{idProveedor:\"-1\",nombre:\"Melia\", correo:\"asd@asd.com\", correoAdic:\"asljkdq@as.com\", numeroContacto:\"(51)65465\",numeroContactoAdicional:\"123312\", ciudad:\"city\"}\r\n        ],\r\n        \r\n        confirmacionEliminarAbierta:false,\r\n        idEliminar:null,\r\n        \r\n        modalCrearEditar:{\r\n            //creacion o edicion\r\n            modo:\"creacion\",\r\n            abierto:false,\r\n\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                id:'',\r\n                nombre:'',\r\n                correo:'',\r\n                correoAdic:'',\r\n                num:'',\r\n                numAdic:'',\r\n                ciudad:''\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo', accessor: 'correo', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Ciudad', accessor: 'ciudad', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Accion', Cell: props => {\r\n            //console.log(props);\r\n            return <Container textAlign=\"center\">\r\n                <Button circular color=\"yellow\" icon=\"pencil\" onClick={()=>{this.abrirModalEdicion(this.state.proovs.find(element=>element.idProveedor==props.original.idProveedor))}}></Button>\r\n                <Button circular color=\"red\" icon=\"trash\" onClick={()=>{this.intentarEliminar(this.state.proovs.find(element=>element.idProveedor==props.original.idProveedor))}}></Button>\r\n            </Container>\r\n        }} \r\n    ]\r\n    \r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">{this.props.sustPlural}</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo {this.props.sust}</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.proovs} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <ModalCrearEditarProveedor pack=\"modalCrearEditar\" parent={this} sustantivoTitulo={this.props.sust}\r\n                placeholderNombre={this.props.placeholderNombre}\r\n                placeholderCorreo={this.props.placeholderCorreo}\r\n                placeholderCorreoAdic={this.props.placeholderCorreoAdic}\r\n                enEnviar={this.enviarProov}\r\n                enEditar={this.editarProov}\r\n                enCerrar={this.enCerrarModal}/>\r\n            <Confirm\r\n                open={this.state.confirmacionEliminarAbierta}\r\n                cancelButton=\"Cancelar\"\r\n                confirmButton=\"Eliminar\"\r\n                content={'Seguro que deseas eliminar el '+this.props.sust+' ' + (this.state.idEliminar ? this.state.proovs.find(element => element.idProveedor == this.state.idEliminar).nombre\r\n                    :\"<NULO>\") + '?'}\r\n                onCancel={this.cerrarConfirmacionEliminar}\r\n                onConfirm={()=>{this.confirmarEliminar(this.state.proovs.find(element => element.idProveedor == this.state.idEliminar))}}\r\n            />\r\n            <Modal></Modal>\r\n        </div>\r\n    }\r\n\r\n    intentarEliminar=(proveedor)=>{\r\n        console.log(proveedor);\r\n        \r\n        if(proveedor){\r\n            this.setState({\r\n                idEliminar:proveedor.idProveedor,\r\n                confirmacionEliminarAbierta:true\r\n            })\r\n        }\r\n    }\r\n\r\n    confirmarEliminar = (proveedor) =>{\r\n        console.log(\"eliminando proveedor \" + proveedor.nombre)\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n\r\n        if(proveedor){\r\n            Requester.postEliminarProv(proveedor.idProveedor,\r\n                (rpta)=>{\r\n                    this.cargarProovs();\r\n                },\r\n                (rptaError)=>{\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    cerrarConfirmacionEliminar = () =>{\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n    }\r\n\r\n    abrirModalEdicion= (proveedor)=>{\r\n        console.log(proveedor);\r\n        if(proveedor){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.modo=\"edicion\";\r\n            obj.abierto=true;\r\n            obj.campos.id = proveedor.idProveedor;\r\n            obj.campos.nombre = proveedor.nombre;\r\n            obj.campos.correo = proveedor.correo;\r\n            obj.campos.correoAdic = proveedor.correoAdic;\r\n            obj.campos.num = proveedor.numeroContacto;\r\n            obj.campos.numAdic = proveedor.numeroContactoAdicional;\r\n            obj.campos.ciudad = proveedor.ciudad;\r\n            console.log(obj);\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.modo=\"creacion\";\r\n        obj.abierto = true;\r\n        this.setState({modalCrearEditar:obj});\r\n    }\r\n\r\n    enviarProov = () => { \r\n        console.log(\"enviando!\");\r\n        \r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrearEditar:obj});\r\n\r\n        this.props.funcEnviar( \r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.num,\r\n            this.state.modalCrearEditar.campos.numAdic,\r\n            this.state.modalCrearEditar.campos.correoAdic,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            (rpta)=>{\r\n                console.log(this.state.modalCrearEditar.campos);\r\n                console.log(\"success!\");\r\n                console.log(rpta);\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarProovs();\r\n            },\r\n            (rptaError)=>{\r\n                console.log(\"err!\");\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n    \r\n    editarProov = () => { \r\n        console.log(\"editando!\");\r\n        \r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrearEditar:obj});\r\n        console.log(\": \"+this.state.modalCrearEditar.campos.id);\r\n        Requester.postEditarProv(\r\n            this.props.alias,\r\n            this.state.modalCrearEditar.campos.id,\r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.num,\r\n            this.state.modalCrearEditar.campos.numAdic,\r\n            this.state.modalCrearEditar.campos.correoAdic,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            (rpta)=>{\r\n                console.log(this.state.modalCrearEditar.campos);\r\n                console.log(\"edicion success!\");\r\n                console.log(rpta);\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarProovs();\r\n            },\r\n            (rptaError)=>{\r\n                console.log(\"edicion error!\");\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n\r\n    cargarProovs= () =>{\r\n        console.log(this.props.alias);\r\n        Requester.getProveedores(this.props.alias, (rpta)=>{\r\n            var proovs=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor?e.idProveedor:0,\r\n                    nombre:e.nombre?e.nombre:'',\r\n                    correo:e.correo?e.correo:\"\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:'',\r\n                    numeroContactoAdicional:e.numeroContactoAdicional?e.numeroContactoAdicional:\"\",\r\n                    ciudad:e.ciudad?e.ciudad:\"\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({proovs:proovs});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log(\"weeeee\");\r\n        this.cargarProovs();\r\n    }\r\n\r\n    enCerrarModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.recibido=false;\r\n        obj.mensaje.enviado=false;\r\n        obj.mensaje.respuesta=null;\r\n\r\n        if(this.state.modalCrearEditar.modo===\"edicion\"){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.campos.id='';\r\n            obj.campos.nombre='';\r\n            obj.campos.correo='';\r\n            obj.campos.correoAdic='';\r\n            obj.campos.num='';\r\n            obj.campos.numAdic='';\r\n            obj.campos.ciudad='';\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default TabProovs","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport ModalCrearEditarProveedor from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabRestaurantes extends Component{\r\n\r\n    state = {\r\n        restaurantes:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n    \r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Restaurantes</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo Restaurante</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.restaurantes} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <ModalCrearEditarProveedor parent={this} titulo=\"Crear Restaurantes\" \r\n                placeholderNombre=\"Punto Azul\" \r\n                placeholderCorreo=\"ventas@puntoazul.com\" \r\n                placeholderCorreoAdic=\"correo.ventas@puntoazul.com\"\r\n                enEnviar={this.enviarTransporte}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarTransporte = () => { \r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvRestaurante( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarRestaurantes();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarRestaurantes= () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.RESTAURANTE, (rpta)=>{\r\n            var rests=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({restaurantes:rests});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarRestaurantes();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabRestaurantes","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport ModalCrearEditarProveedor from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabTransportes extends Component{\r\n\r\n    state = {\r\n        transportes:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n     \r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Transportes</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo Transporte</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.transportes} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <ModalCrearEditarProveedor parent={this} titulo=\"Crear Transportes\" \r\n                placeholderNombre=\"Javier\" \r\n                placeholderCorreo=\"javier.asd@gmail.com\" \r\n                placeholderCorreoAdic=\"javier.asdasd@hotmail.com\"\r\n                enEnviar={this.enviarTransporte}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarTransporte = () => { \r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvTransporte( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarTransportes();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarTransportes= () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.TRANSPORTE, (rpta)=>{\r\n            var transps=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({transportes:transps});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarTransportes();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabTransportes","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport lul from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabGuias extends Component{\r\n\r\n    state = {\r\n        guias:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Guías</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nueva Guia</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.guias} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <lul parent={this} titulo=\"Crear Guias\" \r\n                placeholderNombre=\"Guia\" \r\n                placeholderCorreo=\"guia@gmail.com\" \r\n                placeholderCorreoAdic=\"ventas.guia@hotmail.com\"\r\n                enEnviar={this.enviarGuia}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarGuia = () => { \r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvGuia( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarGuias();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarGuias = () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.GUIA, (rpta)=>{\r\n            var guias=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({guias:guias});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarGuias();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabGuias","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport lul from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabOperadores extends Component{\r\n\r\n    state = {\r\n        operadores:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n    \r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Operadores</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo Operador</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.operadores} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <lul parent={this} titulo=\"Crear Operador\" \r\n                placeholderNombre=\"Operador\" \r\n                placeholderCorreo=\"correo@gmail.com\" \r\n                placeholderCorreoAdic=\"correo.ventas@gmail.com\"\r\n                enEnviar={this.enviarOperador}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarOperador = () => { \r\n        console.log(\"enviando!\");\r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvOperador( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarOperadores();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarOperadores= () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.OPERADOR, (rpta)=>{\r\n            var opers=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({operadores:opers});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarOperadores();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabOperadores","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport lul from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabEmpresas extends Component{\r\n\r\n    state = {\r\n        empresas:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Empresas</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nueva Empresa</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.empresas} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <lul parent={this} titulo=\"Crear Empresa\" \r\n                placeholderNombre=\"Empresa\" \r\n                placeholderCorreo=\"empresa@gmail.com\" \r\n                placeholderCorreoAdic=\"ventas.empresa@hotmail.com\"\r\n                enEnviar={this.enviarEmpresa}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarEmpresa = () => { \r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvEmpresa( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarEmpresas();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarEmpresas = () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.EMPRESA, (rpta)=>{\r\n            var empresas=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({empresas:empresas});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarEmpresas();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabEmpresas","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport lul from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabPersonas extends Component{\r\n\r\n    state = {\r\n        personas:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Personas</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nueva Persona</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.personas} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <lul parent={this} titulo=\"Crear Persona\" \r\n                placeholderNombre=\"Christian cueva\" \r\n                placeholderCorreo=\"cuevita@gmail.com\" \r\n                placeholderCorreoAdic=\"cuevita.1@hotmail.com\"\r\n                enEnviar={this.enviarEmpresa}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarEmpresa = () => { \r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvPersona( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarPersonas();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarPersonas = () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.PERSONA, (rpta)=>{\r\n            var personas=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({personas:personas});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarPersonas();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabPersonas","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Tab, Menu, Label, Icon} from 'semantic-ui-react';\r\nimport TabHoteles from './TabHoteles/TabHoteles';\r\nimport TabTodos from './TabTodos/TabTodos';\r\nimport TabRestaurantes from './TabRestaurantes/TabRestaurantes';\r\nimport TabTransportes from './TabTransportes/TabTransportes';\r\nimport TabGuias from './TabGuias/TabGuias';\r\nimport TabOperadores from './TabOperadores/TabOperadores';\r\nimport TabEmpresas from './TabEmpresas/TabEmpresas';\r\nimport TabPersonas from './TabPersonas/TabPersonas';\r\nimport TabProovs from './TabHoteles/TabProovs';\r\nimport Constantes from '../../common/Constantes';\r\nimport Requester from '../../common/Services/Requester';\r\n\r\n\r\n\r\nclass MostradorProveedores extends Component{\r\n\r\n    state={\r\n        activeIndex:0\r\n    }\r\n\r\n    \r\n\r\n    panes = [ \r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Todos'>\r\n                    Todos \r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane>\r\n                    <TabTodos/>\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Hoteles'>\r\n                    <Icon name=\"hotel\"/>Hoteles \r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane>\r\n                    <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                    <TabProovs sust=\"Hotel\" \r\n                        sustPlural=\"Hoteles\"\r\n                        placeholderNombre=\"Arawi\" \r\n                        placeholderCorreo=\"correo@arawi.com\" \r\n                        placeholderCorreoAdic=\"arawi.ventas@gmail.com\"\r\n                        alias = {Constantes.AliasProovedores.HOTEL}\r\n                        funcEnviar = {Requester.postProvHotel}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Restaurantes'>\r\n                    <Icon name=\"food\"/>Restaurantes\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane>\r\n                    <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                    <TabProovs sust=\"Restaurant\" \r\n                        sustPlural=\"Restaurantes\"\r\n                        placeholderNombre=\"Punto Azul\" \r\n                        placeholderCorreo=\"ventas@puntoazul.com\" \r\n                        placeholderCorreoAdic=\"contacto@puntoazul.com\"\r\n                        alias = {Constantes.AliasProovedores.RESTAURANTE}\r\n                        funcEnviar = {Requester.postProvRestaurante}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Transportes'>\r\n                    <Icon name=\"truck\"/>Transportes\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane><div ></div><div></div><div></div><div></div><div></div>\r\n                    <TabProovs sust=\"Transporte\" \r\n                        sustPlural=\"Transportes\"\r\n                        placeholderNombre=\"Javier\" \r\n                        placeholderCorreo=\"javier.tran@gmail.com\" \r\n                        placeholderCorreoAdic=\"javier.tran@hotmail.com\"\r\n                        alias = {Constantes.AliasProovedores.TRANSPORTE}\r\n                        funcEnviar = {Requester.postProvTransporte}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Guias'>\r\n                    <Icon name=\"user\"/>Guias\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane><div></div><div></div><div></div><div></div>\r\n                    <TabProovs sust=\"Guia\" \r\n                        sustPlural=\"Guias\"\r\n                        placeholderNombre=\"Guia\" \r\n                        placeholderCorreo=\"carlos.guia@gmail.com\" \r\n                        placeholderCorreoAdic=\"carlos.guia@hotmail.com\"\r\n                        alias = {Constantes.AliasProovedores.GUIA}\r\n                        funcEnviar = {Requester.postProvGuia}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Operadores'>\r\n                    <Icon name=\"cog\"/>Operadores\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane>\r\n                    <div></div><div></div><div></div>\r\n                    <TabProovs sust=\"Operador\" \r\n                        sustPlural=\"Operadores\"\r\n                        placeholderNombre=\"Matias\" \r\n                        placeholderCorreo=\"correo@gmail.com\" \r\n                        placeholderCorreoAdic=\"correo.ventas@gmail.com\"\r\n                        alias = {Constantes.AliasProovedores.OPERADOR}\r\n                        funcEnviar = {Requester.postProvOperador}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Empresas'>\r\n                    <Icon name=\"building\"/>Empresas\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane>\r\n                    <div></div><div></div>\r\n                    <TabProovs sust=\"Empresa\" \r\n                        sustPlural=\"Empresas\"\r\n                        placeholderNombre=\"asda\" \r\n                        placeholderCorreo=\"empresa@gmail.com\" \r\n                        placeholderCorreoAdic=\"correo.ventas@gmail.com\"\r\n                        alias = {Constantes.AliasProovedores.EMPRESA}\r\n                        funcEnviar = {Requester.postProvEmpresa}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Personas'>\r\n                    <Icon name=\"id card\"/>Personas\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane >\r\n                    <div></div>\r\n                    <TabProovs\r\n                        i={this.state.activeIndex}\r\n                        sust=\"Persona\" \r\n                        sustPlural=\"Personas\"\r\n                        placeholderNombre=\"Christian cueva\" \r\n                        placeholderCorreo=\"christian@gmail.com\" \r\n                        placeholderCorreoAdic=\"cuevita@gmail.com\"\r\n                        alias = {Constantes.AliasProovedores.PERSONA}\r\n                        funcEnviar = {Requester.postProvPersona}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n    ]\r\n\r\n    render(){\r\n        return <Tab renderActiveOnly activeIndex={this.state.activeIndex} panes={this.panes} onTabChange={(event,data)=>{\r\n            this.setState({activeIndex:data.activeIndex})\r\n            console.log(this.state.activeIndex)\r\n        }}/>\r\n    }\r\n}\r\n\r\nexport default MostradorProveedores;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Message, Icon, Input, Modal, Grid } from 'semantic-ui-react';\r\nimport ElementoForm from '../../components/ElementoForm/ElementoForm';\r\nimport MensajeTransaccion from '../../components/MensajeTransaccion/MensajeTransaccion';\r\n\r\nclass ModalCrearEditarCliente extends Component{\r\n\r\n    render(){\r\n\r\n        var msjSuccess=\"Objeto creado\";\r\n        if(this.props.parent.state.modalCrearEditar.modo === \"edicion\")\r\n            msjSuccess =\"Objeto editado exitosamente\";\r\n\r\n        var msjComp = <div></div>\r\n\r\n\r\n        return  <Modal size=\"tiny\"  open ={ this.props.parent.state.modalCrearEditar.abierto} centered={true}  onClose={() => {\r\n            var obj= {...this.props.parent.state.modalCrearEditar};\r\n            obj.abierto=false;\r\n            this.props.enCerrar();\r\n            this.props.parent.setState({modalCrearEditar:obj});\r\n        }}>\r\n\r\n            <Modal.Header>{this.props.parent.state.modalCrearEditar.modo==='creacion'?'Crear '+ this.props.sustantivoTitulo:'Modificar ' + this.props.sustantivoTitulo}</Modal.Header>\r\n            \r\n            <Modal.Content>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Nombre *\">\r\n                                <Input fluid placeholder={this.props.placeholderNombre} value={this.props.parent.state.modalCrearEditar.campos.nombre} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.nombre = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}\r\n                                        />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n                    <Grid.Row columns={2}>\r\n                        <Grid.Column>\r\n                        <ElementoForm grid titulo=\"Correo electrónico\">\r\n                                <Input \r\n                                    fluid\r\n                                    iconPosition=\"left\" placeholder={this.props.placeholderCorreo} value={this.props.parent.state.modalCrearEditar.campos.correo} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.correo = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}\r\n                                    >\r\n                                    <Icon name=\"at\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Correo electrónico adicional\">\r\n                                <Input \r\n                                    fluid\r\n                                    iconPosition=\"left\" placeholder={this.props.placeholderCorreoAdic} value={this.props.parent.state.modalCrearEditar.campos.correoAdic} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.correoAdicional = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}>\r\n                                    <Icon name=\"at\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    \r\n\r\n                    <Grid.Row columns={2}>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Numero contacto\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"+57 98 957 0845\"\r\n                                    iconPosition=\"left\"\r\n                                    value={this.props.parent.state.modalCrearEditar.campos.num} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.numero = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}>\r\n                                    <Icon name=\"phone\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Numero contacto adicional\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"564-8790\"\r\n                                    iconPosition=\"left\"\r\n                                    value={this.props.parent.state.modalCrearEditar.campos.numAdic} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.numeroAdicional = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}>\r\n                                    <Icon name=\"phone\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n\r\n                    <Grid.Row columns={2}>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Ciudad\">\r\n                                <Input fluid placeholder=\"Medellin\" \r\n                                    value={this.props.parent.state.modalCrearEditar.campos.ciudad} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.ciudad = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Pais\">\r\n                                <Input fluid placeholder=\"Colombia\" \r\n                                    value={this.props.parent.state.modalCrearEditar.campos.pais} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.pais = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n                </Grid>\r\n                <MensajeTransaccion\r\n                    transaccionEnviada = {this.props.parent.state.modalCrearEditar.transaccionEnviada} \r\n                    responseRecibida = {this.props.parent.state.modalCrearEditar.responseRecibida}\r\n                    rptaTransaccion = {this.props.parent.state.modalCrearEditar.rptaTransaccion}\r\n                    //textoExito = \"Puede usar la nueva biblia\"\r\n                />\r\n            </Modal.Content>\r\n\r\n            <Modal.Actions>\r\n                <Button negative onClick={() => {\r\n                    var obj= {...this.props.parent.state.modalCrearEditar};\r\n                    obj.abierto=false;\r\n                    this.props.enCerrar();\r\n                    this.props.parent.setState({modalCrearEditar:obj});\r\n                    }}>\r\n                    Cancelar\r\n                </Button>\r\n                {\r\n                    this.props.parent.state.modalCrearEditar.modo==='creacion'?\r\n                    <Button positive icon='checkmark' labelPosition='right' content='Crear' onClick={ this.props.enEnviar } /> :\r\n                    <Button color=\"yellow\" icon='checkmark' labelPosition='right' content='Modificar' onClick={ this.props.enEditar}/>\r\n                }\r\n            </Modal.Actions>\r\n\r\n        </Modal>\r\n\r\n    }\r\n}\r\nexport default ModalCrearEditarCliente;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header, Menu, Modal, Confirm, Segment } from 'semantic-ui-react';\r\nimport Requester from '../../common/Services/Requester';\r\n\r\n\r\n\r\nimport TablaBuscador from '../TablaBuscador/TablaBuscador';\r\nimport ModalCrearEditarCliente from './ModalCrearEditarCliente';\r\nimport Constantes from '../../common/Constantes';\r\n\r\n\r\nclass TabClientes extends Component{\r\n\r\n    \r\n    state = {\r\n        clientesDirs:[\r\n        ],\r\n        \r\n        confirmacionEliminarAbierta:false,\r\n        idEliminar:null,\r\n        \r\n        modalCrearEditar:{\r\n            //creacion o edicion\r\n            modo:\"creacion\",\r\n            abierto:false,\r\n            transaccionEnviada:false,\r\n            responseRecibida:false,\r\n            rptaTransaccion:null,\r\n\r\n            campos:{\r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n    \r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo', accessor: 'correo', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdicional', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroAdicional', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Ciudad', accessor: 'ciudad', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Pais', accessor: 'pais', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Accion', Cell: props => {\r\n            //console.log(props);\r\n            return <Container textAlign=\"center\">\r\n                <Button circular color=\"yellow\" icon=\"pencil\" \r\n                onClick={()=>{\r\n                    this.abrirModalEdicion(this.state.clientesDirs.find(element=>element.idCliente==props.original.idCliente))\r\n                    }}></Button>\r\n                <Button circular color=\"red\" icon=\"trash\" \r\n                onClick={()=>{\r\n                    this.intentarEliminar(this.state.clientesDirs.find(element=>element.idCliente==props.original.idCliente))\r\n                    }}></Button>\r\n            </Container>\r\n        }} \r\n    ]\r\n\r\n    render(){\r\n        \r\n        return <div /*style={{backgroundColor:\"#f9f9f9\"}}*/>\r\n            <Header size=\"medium\">{this.props.sustPlural}</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo {this.props.sust}</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.clientesDirs} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n\r\n            <ModalCrearEditarCliente parent={this} sustantivoTitulo={this.props.sust}\r\n                placeholderNombre={this.props.placeholderNombre}\r\n                placeholderCorreo={this.props.placeholderCorreo}\r\n                placeholderCorreoAdic={this.props.placeholderCorreoAdic}\r\n                enEnviar={this.enviarCliente}\r\n                enEditar={this.editarCliente}\r\n                enCerrar={this.enCerrarModal}/>\r\n            <Confirm\r\n                open={this.state.confirmacionEliminarAbierta}\r\n                cancelButton=\"Cancelar\"\r\n                confirmButton=\"Eliminar\"\r\n                content={'Seguro que deseas eliminar el '+this.props.sust+' ' + (this.state.idEliminar ? this.state.clientesDirs.find(element => element.idCliente == this.state.idEliminar).nombre\r\n                    :\"<NULO>\") + '?'}\r\n                onCancel={this.cerrarConfirmacionEliminar}\r\n                onConfirm={()=>{this.confirmarEliminar(this.state.clientesDirs.find(element => element.idCliente == this.state.idEliminar))}}\r\n            />\r\n            <Modal></Modal>\r\n        </div>\r\n    }\r\n    \r\n    intentarEliminar=(cliente)=>{\r\n        console.log(cliente);\r\n        \r\n        if(cliente){\r\n            this.setState({\r\n                idEliminar:cliente.idCliente,\r\n                confirmacionEliminarAbierta:true\r\n            })\r\n        }\r\n    }\r\n\r\n    confirmarEliminar = (cliente) =>{\r\n        console.log(\"eliminando cliente \", cliente)\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n\r\n        if(cliente){\r\n            Requester.postEliminarCliente(cliente.idCliente,\r\n                (rpta)=>{\r\n                    this.cargarClientes();\r\n                },\r\n                (rptaError)=>{\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    cerrarConfirmacionEliminar = () =>{\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n    }\r\n\r\n    abrirModalEdicion= (cliente)=>{\r\n        console.log(cliente);\r\n        if(cliente){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.modo=\"edicion\";\r\n            obj.abierto=true;\r\n            obj.campos.idCliente = cliente.idCliente;\r\n            obj.campos.nombre = cliente.nombre;\r\n            obj.campos.correo = cliente.correo;\r\n            obj.campos.correoAdicional = cliente.correoAdicional;\r\n            obj.campos.nummeroContacto = cliente.numeroContacto;\r\n            obj.campos.numeroAdicional = cliente.numeroAdicional;\r\n            obj.campos.ciudad = cliente.ciudad;\r\n            obj.campos.pais = cliente.pais;\r\n            console.log(obj);\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.modo=\"creacion\";\r\n        obj.abierto = true;\r\n        this.setState({modalCrearEditar:obj});\r\n    }\r\n\r\n    enviarCliente = () => { \r\n        //console.log(\"enviando!\");\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.transaccionEnviada=true;\r\n        this.setState({modalCrearEditar:obj});\r\n\r\n        //Requester.postCliente(\r\n        this.props.funcEnviar(\r\n            this.props.alias,\r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.numero,\r\n            this.state.modalCrearEditar.campos.numeroAdicional,\r\n            this.state.modalCrearEditar.campos.correoAdicional,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            this.state.modalCrearEditar.campos.pais,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.responseRecibida=true;\r\n                obj.rptaTransaccion = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarClientes();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.responseRecibida=true;\r\n                obj.rptaTransaccion = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n    \r\n    editarCliente = () => { \r\n        console.log(\"editando!\");\r\n        \r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.transaccionEnviada=true;\r\n        this.setState({modalCrearEditar:obj});\r\n        //console.log(\"::::::::: \",this.state.modalCrearEditar.campos);\r\n        Requester.postEditarCliente( \r\n            this.props.alias,\r\n            this.state.modalCrearEditar.campos.idCliente,\r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.numero,\r\n            this.state.modalCrearEditar.campos.numeroAdicional,\r\n            this.state.modalCrearEditar.campos.correoAdicional,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            this.state.modalCrearEditar.campos.pais,\r\n            (rpta)=>{\r\n                console.log(this.state.modalCrearEditar.campos);\r\n                console.log(\"edicion success!\");\r\n                console.log(rpta);\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.responseRecibida = true;\r\n                obj.rptaTransaccion = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarClientes();\r\n            },\r\n            (rptaError)=>{\r\n                //console.log(\"edicion error!\");\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.responseRecibida = true;\r\n                obj.rptaTransaccion = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n\r\n    cargarClientes= () =>{\r\n        //console.log(\"aweeeee\");\r\n        Requester.getClientesFullDetallado(this.props.alias, (rpta)=>{\r\n            var clientesDirs=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idCliente:e.idCliente,\r\n                    nombre:e.nombre,\r\n                    correo:e.correoContacto,\r\n                    correoAdicional:e.correoAdicional,\r\n                    numeroContacto:e.numeroContacto,\r\n                    numeroAdicional:e.numeroAdicional,\r\n                    ciudad:e.ciudad,\r\n                    pais:e.pais,\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({clientesDirs:clientesDirs});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarClientes();\r\n    }\r\n\r\n    enCerrarModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.responseRecibida=false;\r\n        obj.transaccionEnviada=false;\r\n        obj.rptaTransaccion=null;\r\n\r\n        if(this.state.modalCrearEditar.modo === \"edicion\"){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.campos.id=null;\r\n            obj.campos.nombre=null;\r\n            obj.campos.correo=null;\r\n            obj.campos.correoAdic=null;\r\n            obj.campos.num=null;\r\n            obj.campos.numAdic=null;\r\n            obj.campos.ciudad=null;\r\n            obj.campos.pais=null;\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n}\r\n\r\nexport default TabClientes","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header, Menu } from 'semantic-ui-react';\r\nimport ReactTable from \"react-table\";\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\n\r\n\r\nclass TabTodosClientes extends Component{\r\n\r\n    state = {\r\n        clientes:[\r\n        ]\r\n    }\r\n    \r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correoContacto' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdicional' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Tipo', accessor: 'tipo'  }\r\n    ]\r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Todos los clientes</Header> \r\n            {/*<Header size=\"small\">Lista</Header>*/}\r\n            <TablaBuscador data={this.state.clientes} columns={this.columnasTabla} />\r\n        </div>\r\n    }\r\n\r\n    cargarTodos = () =>{ \r\n        Requester.getClientesFullDetallado( \"\" , (rpta)=>{\r\n            var clientes=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idCliente:e.idCliente,\r\n                    nombre:e.nombre,\r\n                    correo:e.correoContacto?e.correoContacto:\"-\",\r\n                    correoAdicional:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroAdicional:e.numeroAdicional?e.numeroAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\",\r\n                    pais:e.pais?e.pais:\"-\",\r\n                    tipo: e.tipo?Constantes.aliasATextoClientes(e.tipo):'-'\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({clientes:clientes});\r\n        });\r\n        console.log(\"clientes\",this.state.clientes)\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarTodos();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabTodosClientes","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Tab, Menu, Label, Icon} from 'semantic-ui-react';\r\nimport TabClientes from './TabClientes';\r\nimport Requester from '../../common/Services/Requester';\r\nimport Constantes from '../../common/Constantes';\r\nimport TabTodosClientes from './TabTodos/TabTodosClientes';\r\n\r\nconst panes = [ \r\n    {\r\n        menuItem: (\r\n            <Menu.Item key='Todos'>\r\n                Todos \r\n            </Menu.Item>\r\n        ),\r\n        render: () => {\r\n            return <Tab.Pane>\r\n                <TabTodosClientes/>\r\n            </Tab.Pane>},\r\n    },\r\n    {\r\n        menuItem: (\r\n            <Menu.Item key='clienteDirecto'>\r\n                <Icon name=\"user\"/>Cliente Directo\r\n            </Menu.Item>\r\n        ),\r\n        render: () => {\r\n            return <Tab.Pane>\r\n                \r\n                <TabClientes sust=\"Cliente directo\" \r\n                    sustPlural=\"Clientes directos\"\r\n                    placeholderNombre=\"Juan\" \r\n                    placeholderCorreo=\"Juan@gmail.com\" \r\n                    placeholderCorreoAdic=\"juan.agencia@gmail.com\"\r\n                    alias = {Constantes.AliasClientes.CLIENTE_DIRECTO}\r\n                    funcEnviar = {Requester.postCliente}\r\n                    />\r\n            </Tab.Pane>},\r\n    },\r\n    {\r\n        menuItem: (\r\n            <Menu.Item key='OpMinorista'>\r\n                <Icon name=\"box\"/>Operador minorista\r\n            </Menu.Item>\r\n        ),\r\n        render: () => {\r\n            return <Tab.Pane>\r\n                <div></div>\r\n                <TabClientes sust=\"Operador minorista\" \r\n                    sustPlural=\"Minoristas\"\r\n                    placeholderNombre=\"NTS\" \r\n                    placeholderCorreo=\"mariana@nts.com.gt\" \r\n                    placeholderCorreoAdic=\"-\"\r\n                    alias = {Constantes.AliasClientes.OPERADOR_MINORISTA}\r\n                    funcEnviar = {Requester.postCliente}\r\n                    />\r\n            </Tab.Pane>},\r\n    },\r\n    {\r\n        menuItem: (\r\n            <Menu.Item key='opMayorista'>\r\n                <Icon name=\"boxes\"/>Operador mayorista \r\n            </Menu.Item>\r\n        ),\r\n        render: () => {\r\n            return <Tab.Pane>\r\n                <div></div><div></div>\r\n                <TabClientes sust=\"Operador mayorista\" \r\n                    sustPlural=\"Mayoristas\"\r\n                    placeholderNombre=\"Eurolatina\" \r\n                    placeholderCorreo=\"acaiminagua@eurolatina.com.ec\" \r\n                    placeholderCorreoAdic=\"achala@eurolatina.com.ec\"\r\n                    alias = {Constantes.AliasClientes.OPERADOR_MAYORISTA}\r\n                    funcEnviar = {Requester.postCliente}\r\n                    />\r\n            </Tab.Pane>},\r\n    }\r\n  ]\r\n\r\nclass VerClientes extends Component{\r\n\r\n    render(){\r\n        return <Tab panes={panes} />\r\n    }\r\n}\r\nexport default VerClientes","import React from 'react';\r\nimport { Component } from 'react';\r\nimport moment from 'moment'\r\nimport BigCalendar from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { Segment, Header } from 'semantic-ui-react';\r\n\r\nimport 'moment/locale/es'\r\nimport Requester from '../../common/Services/Requester';\r\nimport CONSTANTES_GLOBALES from '../../common/Constantes';\r\n\r\n\r\nconst localizer = BigCalendar.momentLocalizer(moment)\r\n\r\nclass VerCalendario extends Component {\r\n\r\n\r\n    state = {\r\n        fecha:this.props.fechaDefault?this.props.fechaDefault : new Date(),\r\n        events: [\r\n        ],\r\n        //culture: moment.locale(\"es\")\r\n\r\n    }\r\n\r\n    componentDidMount=()=>{\r\n        //console.log(\"fecha: \",this.state.fecha.getMonth())\r\n        this.cargarServicios(this.state.fecha.getMonth()+1);\r\n\r\n    }\r\n \r\n    v = (event, start, end, isSelected) => {\r\n        let newStyle = {\r\n          backgroundColor: event.color,\r\n          color: 'black',\r\n          borderRadius: \"0px\",\r\n          border: \"none\"\r\n        };\r\n  \r\n        if (event.isMine){\r\n          newStyle.backgroundColor = \"lightgreen\"\r\n        }\r\n  \r\n        return {\r\n          className: \"\",\r\n          style: newStyle\r\n        };\r\n      }\r\n\r\n    cargarServicios= (mes)=>{\r\n\r\n        let eventosServ = [];\r\n        Requester.getServiciosTodos( (rpta) =>{\r\n            rpta.cont.map((s,i)=>{\r\n                //let lista = eventosServ ;\r\n                if(s.tipoServicio===CONSTANTES_GLOBALES.AliasServicios.SERVICIO){\r\n                    /*console.log(\"FECHA\"+s.fecha.split(\"-\")[0]+ \" => \" + moment(s.fecha).format(\"YYYY MM DD\") + \" =>>< \" \r\n                    +new Date(s.fecha.split(\"-\")[0],s.fecha.split(\"-\")[1],s.fecha.split(\"-\")[2]) );*/\r\n                eventosServ.push({\r\n                    title:s.nombre,\r\n                    \r\n                    start: moment(s.fecha),\r\n                    end: moment(s.fecha),\r\n                    allDay:true,\r\n                    color:'yellow'\r\n                })\r\n            }else{\r\n                eventosServ.push({\r\n                    title:s.nombre,\r\n                    start:moment(s.fecha),\r\n                    end:moment(s.fecha),\r\n                    allDay:true,\r\n                    color:'lightblue'\r\n                })\r\n                }\r\n            });\r\n            this.setState({events:eventosServ});\r\n        }, (rpta) => {\r\n            \r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return <div>\r\n            {/*<Header size=\"large\">Calendario</Header>*/}\r\n            <Segment style={{ height: \"800px\" }}>\r\n                <BigCalendar\r\n                    localizer={localizer}\r\n                    events={this.state.events}\r\n                    culture={this.state.culture}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    defaultDate={this.state.fecha }\r\n                    defaultView=\"month\"\r\n                    eventPropGetter={this.v}\r\n                />\r\n            </Segment>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default VerCalendario;","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Button } from 'semantic-ui-react';\r\nimport ContainedComponent from '../../components/ContainedComponent';\r\n\r\nclass ModalPrueba1 extends ContainedComponent {\r\n    \r\n    render = () => {\r\n\r\n        return <div>\r\n            <p>1:</p>\r\n            <Button onClick={() => {\r\n                console.log(\"obj:\", this.props.parent.state[this.props.pack]);\r\n\r\n\r\n                var c = this.getParentContainer();\r\n                c.valor1+=\"3\";\r\n                this.UpdateParentContainer({...this.getParentContainer(),valor1:\"ctmre!\"});\r\n/*\r\n                var obj = { ...this.props.parent.state[this.props.pack] };\r\n                obj.valor1 += \"2\";\r\n                obj.valor2 += \"b2\";\r\n\r\n                console.log(\"OBJ: \", obj);\r\n                this.props.parent.setState({ [this.props.pack]: obj })*/\r\n\r\n                console.log(\"obj cambiado:\", this.props.parent.state);\r\n                console.log(\"obj cambiado:\", this.props.parent);\r\n            }}>\r\n                Cambiar estado!\r\n            </Button>\r\n        </div>\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ModalPrueba1;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport ModalPrueba1 from './ModalPrueba1';\r\n\r\nclass Pruebas extends Component{\r\n\r\n    state={\r\n        modal:{\r\n            //parent:this,\r\n            valor1:\"a\",\r\n            valor2:\"b\"\r\n        }\r\n    }\r\n\r\n    render = () =>{\r\n        return <div> \r\n            <ModalPrueba1 parent={this} pack=\"modal\"/>\r\n        </div>\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Pruebas;","import React from 'react'\r\nimport { Component } from 'react';\r\nimport './NavBar.css';\r\nimport { Link } from 'react-router-dom'\r\nimport { Grid, Button, Menu, Image, Header, Container, Segment, Flag, Icon } from 'semantic-ui-react'\r\nimport { Configuracion } from '../../common/Constantes'\r\n\r\nimport LogoYllari from '../../assets/logo_yllari.png'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport momentTz from 'moment-timezone'\r\nimport 'moment/locale/es-us'\r\n\r\nclass NavBar extends Component {\r\n\r\n    capitalize = (string) => {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n    state = {\r\n        enlace: '',\r\n        usuarioNombre: '',\r\n        fecha:this.capitalize(moment().tz('America/Lima').format('dddd D')) + ' de ' + moment().tz('America/Lima').format('MMMM'),\r\n        hora:moment().tz('America/Lima').format('LT')\r\n    }\r\n\r\n    componentDidMount() {\r\n        moment().locale(\"es\");\r\n        this.timerID = setInterval(() => this.tick(), 5000);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            fecha:this.capitalize(moment().tz('America/Lima').format('dddd D')) + ' de ' + moment().tz('America/Lima').format('MMMM'),\r\n            hora:moment().tz('America/Lima').format('LT')\r\n        });\r\n    }\r\n\r\n    navegar(direccion) {\r\n        this.props.history.push(direccion);\r\n    }\r\n    render() {\r\n        let nombre = \"\";\r\n        let genero = 0;\r\n        if (this.props.usuario) {\r\n            nombre = this.props.usuario.nombre;\r\n            genero = this.props.usuario.genero;\r\n        }\r\n        return (\r\n            <div>\r\n                <Menu /*style={{backgroundColor:\"#ffb366\"}}*/ size=\"huge\" stackable >\r\n                    <Menu.Item >\r\n                        <img src={LogoYllari} />\r\n                    </Menu.Item>\r\n                    {Configuracion.EnlacesNavBar.map((element,index) => {\r\n                        return <Menu.Item key={index} as='a' active={this.state.enlace === element.nombre}\r\n                            onClick={() => { this.setState({ enlace: element.nombre }); this.navegar(element.valor) }}>\r\n                            {element.nombre}\r\n                            {/*<Link to={element.valor} style={{color:\"black\"}}>{element.nombre}</Link>*/}\r\n                        </Menu.Item>\r\n                    })}\r\n\r\n                    <Menu.Menu position='right'>\r\n                        <Menu.Item style={{ padding: \"4px 16px\" }}>\r\n                            <div style={{ lineHeight: \"1.4\" }}>\r\n                                <div style={{ fontSize: \"11px\" }}>{this.state.fecha}{/*Martes, 21 de Mayo*/}</div>\r\n                                <Flag name='pe' />{' '}<b>{this.state.hora}</b>\r\n                            </div>\r\n                        </Menu.Item>\r\n                        <Menu.Item style={{ padding: \"4px 16px\" }}>\r\n                            {genero == 0 ? \"Bienvenido\" : \"Bienvenida\"},{' '}<br /><b>{nombre ? nombre : \"usuario\"}</b>\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                            <Button size=\"massive\" style={{ backgroundColor: \"#00000000\", padding: \"13.3px 5px\" }} icon onClick={() => {\r\n                                this.props.cerrarSesionHandler();\r\n                            }}>\r\n                                <Icon size=\"large\" name='power off' />\r\n                            </Button>\r\n                            {/*\r\n                            <Button as='a' onClick={() => {\r\n                                this.props.cerrarSesionHandler();\r\n                            }}>\r\n                                Cerrar sesión\r\n                                </Button>\r\n                                */}\r\n                        </Menu.Item>\r\n                    </Menu.Menu>\r\n                </Menu>\r\n\r\n                {/*\r\n                <Grid>\r\n                    <Grid.Row className=\"Spaced\">\r\n\r\n                        <Grid.Column width={4} verticalAlign=\"middle\" textAlign=\"left\">\r\n                            <Image src ={LogoYllari} size=\"tiny\"></Image>\r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column width={8} textAlign=\"center\"  verticalAlign=\"middle\">\r\n                            <Grid columns=\"equal\">\r\n                                <Grid.Row >\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/inicio\"><h4>Inicio</h4></Link>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/files\"><h4>Files</h4></Link>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/servicios\"><h4>Servicios</h4></Link>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/transportes\"><h4>Transportes</h4></Link>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/clientes\"><h4>Clientes</h4></Link>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/calendario\"><h4>Calendario</h4></Link>\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                            </Grid>\r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column width ={4} textAlign=\"right\"  verticalAlign=\"middle\">\r\n                            <Link floated=\"right\" to=\"/inicio\">Cerrar sesión</Link>\r\n                        </Grid.Column>\r\n\r\n                    </Grid.Row>\r\n                </Grid>\r\n\r\n                */}\r\n\r\n\r\n                {/*\r\n                    <Link to=\"/inicio\">Inicio</Link>\r\n                    <Link to=\"/files\">Files</Link>\r\n                    <Link to=\"/servicios\">Servicios</Link>\r\n                <Link to=\"/transportes\">Transportes</Link>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport { Grid, Header, Image, Form, Button, Segment, Message, Divider, Input } from 'semantic-ui-react';\r\nimport './Auth.css'\r\n\r\nimport LogoYllari from '../../assets/logo_yllari.png'\r\nimport Requester from '../../common/Services/Requester';\r\nimport MensajeTransaccion from '../../components/MensajeTransaccion/MensajeTransaccion';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        usuario: \"\",\r\n        clave: \"\",\r\n\r\n        transaccionEnviada: false,\r\n        responseRecibida: false,\r\n        rptaTransaccion: null,\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Header as='h2' color='black' textAlign='center'>\r\n                            <Image src={LogoYllari} size=\"massive\" />\r\n                            <Divider hidden />\r\n                            Gestor de Recursos Yllari Travel\r\n                        </Header>\r\n                        <Form size='large'>\r\n                            <Segment >\r\n                                <Form.Input value={this.state.usuario}\r\n                                    onChange={(event) => { this.setState({ usuario: event.target.value }) }}\r\n                                    fluid icon='user' iconPosition='left' placeholder='Usuario' />\r\n                                <Form.Input value={this.state.clave}\r\n                                    onChange={(event) => {\r\n                                        this.setState({ clave: event.target.value })\r\n                                    }}\r\n                                    fluid\r\n                                    icon='lock'\r\n                                    iconPosition='left'\r\n                                    placeholder='Contraseña'\r\n                                    type='password'\r\n                                />\r\n                                <Button color='orange' fluid size='large'\r\n                                    onClick={() => {\r\n\r\n                                        this.setState({ transaccionEnviada: true,\r\n                                            responseRecibida: false });\r\n\r\n                                        console.log(\"asd!\", this.state);\r\n                                        Requester.postLogin(\r\n                                            {\r\n                                            username: this.state.usuario,\r\n                                            password: this.state.clave\r\n                                        },\r\n                                            (rpta) => {\r\n\r\n                                                var token = rpta.cont.token;\r\n                                                Requester.store.token = token;\r\n                                                console.log(\"Requester store: \",Requester.store)\r\n\r\n                                                localStorage.setItem(\"token\", token);\r\n                                                var pack = { token: token };\r\n\r\n                                                Requester.getInfo((rpta) => {\r\n                                                    //console.log(\"Infooooo:\",rpta.cont)\r\n                                                    pack.usuario = {\r\n                                                        usuario: rpta.cont.usr,\r\n                                                        rol: rpta.cont.rol,\r\n                                                        nombre:rpta.cont.nombrePersona,\r\n                                                        correo: rpta.cont.correoPersona,\r\n                                                        genero:rpta.cont.genero\r\n                                                    }\r\n                                                    pack.mostrarContenido = true;\r\n                                                    this.props.loggedInHandler(pack);\r\n                                                }, (error, errorCompleto) => {\r\n                                                    //error etc\r\n                                                }, null, token)\r\n\r\n\r\n                                            }, (rpta) => {\r\n                                                this.setState({\r\n                                                    responseRecibida: true,\r\n                                                    rptaTransaccion: rpta\r\n                                                });\r\n                                            }\r\n                                        );\r\n\r\n                                        /*\r\n                                        var token = //\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjEiLCJyb2xlIjoiQWRtaW4iLCJuYmYiOjE1NTgzNDkyNDAsImV4cCI6MTU1ODk1NDA0MCwiaWF0IjoxNTU4MzQ5MjQwfQ.H-jsWOpteqIrJo9rkT8Z8_xd3XKHs8aEE6YVwQMoXlw\";\r\n                                        \r\n                                        localStorage.setItem(\"token\",token);\r\n                                        var pack = {token:token};\r\n                                        \r\n                                        Requester.getInfo((rpta)=>{\r\n                                            //console.log(\"Infooooo:\",rpta.cont)\r\n                                            pack.usuario={\r\n                                                    usuario:rpta.cont.usr,\r\n                                                    rol:rpta.cont.rol\r\n                                                }\r\n                                            pack.mostrarContenido=true;\r\n                                            this.props.loggedInHandler(pack);\r\n                                        }, (error,errorCompleto)=>{\r\n                                            //error etc\r\n                                        }, null, token)\r\n                                        */\r\n                                    }\r\n                                    }>\r\n                                    Ingresar\r\n                                </Button>\r\n\r\n\r\n                                <MensajeTransaccion\r\n                                    transaccionEnviada={this.state.transaccionEnviada}\r\n                                    responseRecibida={this.state.responseRecibida}\r\n                                    rptaTransaccion={this.state.rptaTransaccion} />\r\n                                {/*\r\n                                <Button color='orange' fluid size='large' onClick={\r\n                                    ()=>{\r\n                                        localStorage.removeItem(\"token\")\r\n                                    }\r\n                                }>sacar token</Button>\r\n                            */}\r\n                            </Segment>\r\n                        </Form>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Auth;","import React from 'react'\r\nimport { Header, Icon, Dimmer, Segment } from 'semantic-ui-react';\r\n\r\nconst Mostrador404 = (props) => {\r\n    return (\r\n        <Segment textAlign=\"center\" style={{ height: \"400px\" }} >\r\n            <Header as='h1' icon style={{ height: \"400px\", margin: \"100px 0px\" }} >\r\n                <Icon name='question circle' />\r\n                404<Header.Subheader>La página que buscas no existe</Header.Subheader>\r\n            </Header>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default Mostrador404","import React from 'react'\r\nimport { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport ViewFiles from '../ViewFiles/ViewFiles'\r\n\r\nimport './MainContent.css';\r\nimport CrearFile from '../ViewFiles/CrearFile/CrearFile';\r\nimport { Grid, Segment, Loader, Dimmer } from 'semantic-ui-react'\r\nimport Inicio from '../Inicio/Inicio';\r\nimport VerServicios from '../VerServicios/VerServicios';\r\nimport CrearServicio from '../VerServicios/CrearServicio/CrearServicio';\r\nimport ListaBiblias from '../VerBiblias/VerBiblias';\r\nimport MostradorProveedores from '../MostradorProovedores/MostradorProveedores';\r\nimport VerClientes from '../VerClientes/VerClientes';\r\nimport VerCalendario from '../Calendario/VerCalendario';\r\nimport Pruebas from '../Test/Pruebas';\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport Auth from '../Auth/Auth';\r\nimport Requester from '../../common/Services/Requester';\r\nimport Mostrador404 from '../../components/Mostrador404/Mostrador404';\r\n\r\nclass MainContent extends Component {\r\n\r\n    state = {\r\n        mostrarContenido: false,\r\n        //logueado: false,\r\n        token: null,\r\n        usuario: null\r\n    }\r\n\r\n    cerrarSesion = () => {\r\n        localStorage.removeItem(\"token\");\r\n\r\n        this.setState({\r\n            token: null,\r\n            mostrarContenido: true,\r\n            usuario: null\r\n        });\r\n    }\r\n\r\n\r\n    loggedInHandler = (obj) => {\r\n        //console.log(\"aaaaaaaa: \"+obj);\r\n        Requester.store.token = obj.token;\r\n        Requester.store.usuario = obj.usuario;\r\n        this.setState({\r\n            token: obj.token,\r\n            mostrarContenido: true,\r\n            usuario: obj.usuario\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        //console.log(\"hah!\");\r\n        var token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            //console.log(\"HAY TOKEN!!!!!\")\r\n            Requester.store.token = token;\r\n            //si hay token guardado\r\n            Requester.getInfo((rpta) => {\r\n                //console.log(\"Info:\", rpta.cont)\r\n                this.setState({\r\n                    usuario:\r\n                    {\r\n                        usuario: rpta.cont.usr,\r\n                        rol: rpta.cont.rol,\r\n                        nombre: rpta.cont.nombrePersona,\r\n                        correo: rpta.cont.correoPersona,\r\n                        genero: rpta.cont.genero\r\n                    },\r\n\r\n                    mostrarContenido: true\r\n                });\r\n            }, (error, errorCompleto) => {\r\n\r\n                this.setState({ mostrarContenido: true, usuario: null });\r\n            }, null, token)\r\n        } else {\r\n            //console.log(\"NO HAY TOKEN!!!!!\")\r\n            //si no hay token guardado\r\n            this.setState({ mostrarContenido: true, usuario: null });\r\n        }\r\n\r\n        //localStorage.removeItem(\"token\");\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.mostrarContenido)\r\n            return (<div style={{height:\"100%\"}}>\r\n                <Dimmer inverted active>\r\n                <Loader size=\"massive\" content=\"\" />\r\n                </Dimmer>\r\n                </div> \r\n                );\r\n        let contenido = (\r\n            <div>\r\n                <Route component={(props) => { return <NavBar usuario={this.state.usuario} history={props.history} cerrarSesionHandler={this.cerrarSesion} /> }} />\r\n                <div className=\"MainContent\">\r\n                    <Grid>\r\n                        <Grid.Row>\r\n                            <Grid.Column width={1}></Grid.Column>\r\n                            <Grid.Column width={14}>\r\n                                {/*<br />*/}\r\n                                <Switch>\r\n                                    <Route path=\"/pruebas\" exact component={Pruebas} />\r\n                                    <Route path=\"/inicio\" exact component={Inicio} />\r\n                                    <Route path=\"/files\" exact component={ViewFiles} />\r\n                                    <Route path=\"/files/crear\" exact component={(a) => { return <CrearFile modo=\"crear\" /> }} />\r\n                                    <Route path=\"/file/ver/:idFile\" exact component={(obj) => {/*console.log(\"@@@@@@@@\",obj);*/return <CrearFile modo=\"ver\" idFile={obj.match.params.idFile} /> }} />\r\n                                    <Route path=\"/file/editar/:idFile\" exact component={(obj) => { return <CrearFile modo=\"editar\" idFile={obj.match.params.idFile} /> }} />\r\n                                    <Route path=\"/servicios\" exact component={VerServicios} />\r\n                                    <Route path=\"/servicios/crear\" exact component={CrearServicio} />\r\n                                    <Route path=\"/biblias\" exact component={ListaBiblias} />\r\n                                    <Route path=\"/proveedores\" exact component={MostradorProveedores} />\r\n                                    <Route path=\"/clientes\" exact component={VerClientes} />\r\n                                    <Route path=\"/calendario/\" exact component={(obj) => { return <VerCalendario/> }} />\r\n                                    <Route path=\"/calendario/:anho/:mes\" component={(obj) => { return <VerCalendario\r\n                                        fechaDefault={new Date(obj.match.params.anho,obj.match.params.mes-1,1)}/> }} />\r\n                                    <Route path=\"/\" exact component={Inicio} />\r\n                                    <Route component={Mostrador404 /*() => { return <div>404!</div> }*/} />\r\n                                </Switch>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={1}></Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </div>\r\n            </div>);\r\n\r\n        if (!this.state.usuario) {\r\n            contenido = (\r\n                <div className=\"LoginContent\">\r\n                    <Switch>\r\n                        {/*<Route path=\"/calendario\" exact component={VerCalendario} />*/}\r\n                        <Route component={() => { return <Auth loggedInHandler={this.loggedInHandler} /> }} />\r\n                    </Switch>\r\n                </div>);\r\n        }\r\n\r\n        return (contenido);\r\n    }\r\n\r\n}\r\n\r\nexport default MainContent;","import React, { Component } from 'react';\nimport './App.css';\nimport MainContent from './containers/MainContent/MainContent';\nimport {BrowserRouter, Route} from 'react-router-dom'; \n\nclass App extends Component {\n  render() {\n    \n    var sectionStyle = {\n      //backgroundImage: `url(${Background})`\n    };\n\n    return (\n      <BrowserRouter>\n          <MainContent/>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}