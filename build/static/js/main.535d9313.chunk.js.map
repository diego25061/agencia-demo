{"version":3,"sources":["assets/logo_yllari.png","assets/vistas/huascaran.png","assets/vistas/machupichu.png","assets/vistas/costaverdehd.png","components/FileCard/FileCard.js","common/Constantes.js","common/Services/Requester.js","containers/TablaBuscador/TablaBuscador.js","containers/ViewFiles/ViewFiles.js","components/ElementoForm/ElementoForm.js","containers/VerClientes/CamposCrearCliente/CamposCrearCliente.js","containers/ModalTrxSimple/ModalTrxSimple.js","components/ContainedComponent.jsx","components/MensajeTransaccion/MensajeTransaccion.js","containers/MostradorProovedores/ModalCrearEditarProveedor.js","components/InputSearchableData/InputSearchableData.jsx","components/ModalCrearBiblia/ModalCrearBiblia.js","containers/ViewFiles/CrearFile/CrearFile.js","containers/Inicio/Inicio.js","containers/VerServicios/VerServicios.js","containers/VerServicios/CrearServicio/CrearServicio.js","containers/VerBiblias/VerBiblias.js","containers/MostradorProovedores/TabTodos/TabTodos.js","containers/MostradorProovedores/TabHoteles/TabHoteles.js","containers/MostradorProovedores/TabHoteles/TabProovs.js","containers/MostradorProovedores/TabRestaurantes/TabRestaurantes.js","containers/MostradorProovedores/TabTransportes/TabTransportes.js","containers/MostradorProovedores/TabGuias/TabGuias.js","containers/MostradorProovedores/TabOperadores/TabOperadores.js","containers/MostradorProovedores/TabEmpresas/TabEmpresas.js","containers/MostradorProovedores/TabPersonas/TabPersonas.js","containers/MostradorProovedores/MostradorProveedores.js","containers/VerClientes/ModalCrearEditarCliente.js","containers/VerClientes/TabClientes.js","containers/VerClientes/TabTodos/TabTodosClientes.js","containers/VerClientes/VerClientes.js","containers/Calendario/VerCalendario.js","containers/Test/ModalPrueba1.jsx","containers/Test/Pruebas.jsx","components/NavBar/NavBar.js","containers/Auth/Auth.js","components/Mostrador404/Mostrador404.jsx","containers/MainContent/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Component","CONSTANTES_GLOBALES","ListaMeses","key","text","value","AliasClientes","CLIENTE_DIRECTO","OPERADOR_MAYORISTA","OPERADOR_MINORISTA","AliasProovedores","PERSONA","EMPRESA","HOTEL","RESTAURANTE","TRANSPORTE","GUIA","OPERADOR","TiposClientes","TiposServicios","TiposProveedores","aliasATextoProovedores","alias","console","log","aliasATextoClientes","AliasServicios","SERVICIO","HOSPEDAJE","Configuracion","ServerUrl","EnlacesNavBar","nombre","valor","CodigoMesATexto","codigoMes","obj","find","x","RptaTrx","response","_this","this","Object","classCallCheck","set","cont","msj","trace","cod","transaccionExitosa","Requester","direccion","funcSuccess","funcError","funcAlways","auth","arguments","length","undefined","axios","get","headers","Authorization","store","token","then","data","err","catch","error","r","objeto","post","resp","getPing","requestBasicoGet","getInfo","postLogin","requestBasicoPost","postFile","file","postEditarFile","postBorrarFile","idFile","getListadoFiles","getFile","getHoteles","getBibliasDropdownCompleto","getBibliasDetalle","postBiblia","getServiciosTodos","getServiciosPorMes","mes","getServiciosGeneralesDetalle","getServiciosTransporteDetalle","getServiciosHospedaje","postServicio","idProveedor","fecha","tipoServicio","horaRecojo","horaSalida","vuelo","pasajeros","vr","tc","observaciones","ciudad","nombrePasajero","tren","alm","transporte","hotel","getClientesFullDetallado","getClientesListaDropdown","postCliente","tipo","correo","numeroContacto","numeroContactoAdicional","correoAdicional","pais","body","CorreoContacto","numeroAdicional","postEditarCliente","idCliente","postEliminarCliente","id","getHotelesListaDropdown","getProveedores","tipoProveedor","getProveedoresMenosTransportes","getProveedoresTransportes","getProveedoresHoteles","getProveedoresDropdown","postEliminarProv","postProveedor","postEditarProv","postProvHotel","postEditarProvHotel","postProvOperador","postProvRestaurante","postProvTransporte","postProvGuia","postProvEmpresa","postProvPersona","getCiudades","getPaises","TablaBuscador","state","queryBusqueda","columnasDefault","Header","accessor","Cell","props","react_default","a","createElement","className","_this2","dataFiltrada","query","queryForzado","filter","objetoFila","property","hasOwnProperty","val","String","toLowerCase","includes","Container","fluid","Input","style","padding","placeholder","onChange","e","vaciarQueryForzado","setState","target","es","columns","defaultPageSize","minRows","ViewFiles","open","idFileABorrar","codigoFileABorrar","files","cargarFiles","rpta","listaFiles","map","i","codigo","descripcion","biblia","nombreBiblia","cliente","nombreCliente","fechaCreacion","split","cantServicios","cantTransportes","render","cols","show","urlVer","row","urlEditar","textAlign","react_router_dom","to","Button","circular","icon","color","onClick","openConfirm","size","primary","Segment","containers_TablaBuscador_TablaBuscador","Confirm","content","onCancel","closeConfirm","onConfirm","rptaError","codFile","codigoFile","ElementoForm","titulo","black","children","ContainedComponent","getParentContainer","objectSpread","parent","pack","UpdateParentContainer","defineProperty","MensajeTransaccion","lineasMensaje","rptaTransaccion","transaccionEnviada","responseRecibida","Message","Icon","name","loading","Content","headerCargando","textoCargando","success","headerExito","List","textoExito","Item","negative","headerError","ModalCrearEditarProveedor","componentDidMount","CompElegir","elegirTipo","Grid","Row","Column","components_ElementoForm_ElementoForm","grid","Dropdown","search","selection","options","Constantes","event","campos","modo","asd","components_MensajeTransaccion_MensajeTransaccion","mensaje","enviado","recibido","respuesta","Modal","abierto","centered","onClose","enCerrar","sustantivoTitulo","placeholderNombre","iconPosition","placeholderCorreo","placeholderCorreoAdic","correoAdic","num","numAdic","Actions","positive","labelPosition","enEnviar","enEditar","InputSearchableDataButton","_React$createElement","transparent","list","linkId","disabled","onBlur","foundVal","datalist","setValue","sideButton","React","ModalCrearBiblia","parentComponent","modalBiblia","newState","anho","EnviarPostBiblia","CampoServicio","margin","as","componente","CrearFile","possibleConstructorReturn","getPrototypeOf","call","servicio","horaInicio","horaFin","hospedaje","fechaOut","servicioDefault","transporteDefault","hospedajeDefault","modalCliente","idBiblia","servicios","transportes","hospedajes","bibliasCargaron","clientesCargaron","hotelesCargaron","opcionesBiblia","opcionesCliente","opcionesProveedores","opcionesTransportes","opcionesHoteles","opcionesCiudades","opcionesPaises","modalCrearEditarProveedor","modalCrearProveedorTransporte","transaccionEnviadaCrearFile","responseRecibidaCrearFile","rptaTransaccionCrearFile","mensajeCreacionFile","creacionFileExitosa","contenedorCamposModalCliente","modoVer","modoEditar","estiloTextArea","borderStyle","controlBiblia","InputSearchableData","controlCliente","controlDescripcion","TextArea","rows","width","Form","secondary","elem","index","idServicio","CuerpoServicio","floated","servs","slice","push","CuerpoHospedaje","transps","CuerpoTransporte","EnviarPostFile","components_ModalCrearBiblia_ModalCrearBiblia","assertThisInitialized","MostradorProovedores_ModalCrearEditarProveedor","enEnviarProovedor","enCerrarModalProveedor","enEnviarProveedorTransporte","enCerrarModalProveedorTransportes","cargarFileBase","servis","cargarClientes","listaOpsCliente","element","clientesCargaronExito","cargarBiblias","listaBiblias","bibliasCargaronExito","cargarCiudades","cargarPaises","cargarProveedoresNoTransp","listaProovs","hotelesCargaronExito","cargarHoteles","cargarTransportes","controlProveedor","backgroundColor","modal","proovedor","Group","horizontal","verticalAlign","lista","splice","CrearFile_CampoServicio","commonjs","closable","dateFormat","_ref","fechaFinal","_ref2","type","_ref3","servss","_ref4","_ref5","_ref6","_ref7","controlProveedorTransporte","trans","_ref8","transs","_ref9","_ref10","listaTotal","apply","toConsumableArray","func","EnviarPostCliente","camposModalCliente","newStateModalBiblia","abrirModalProveedor","abrirModalProveedorTransporte","resetearCamposModalProveedorTransportes","Inicio","lib","showThumbs","showArrows","autoPlay","stopOnHover","infiniteLoop","interval","emulateTouch","src","Huascaran","Machupichu","Costaverde","VerServicios","modalServicio","proveedor","serviciosServ","serviciosTransp","serviciosHospedajes","queryForzadoServs","queryForzadoTransps","queryForzadoHospedajes","vaciarQueryForzadoServs","vaciarQueryForzadoTransps","vaciarQueryForzadoHospedajes","enviarServicio","cargarServsGenerales","cargarServsTransportes","cargarHospedajes","cantPasajeros","pasajero","transportista","moment","tz","format","add","CrearServicio","camposTransp","camposServ","ListaBiblias","biblias","navegar","history","onlyUnique","meses","cantidadFiles","sort","b","tertiary","Card","header","extra","fitted","self","indexOf","TabTodos","proveedores","columnasTabla","cargarTodos","proovs","numeroCntctAdicional","TabProovs","confirmacionEliminarAbierta","idEliminar","modalCrearEditar","abrirModalEdicion","original","intentarEliminar","sustPlural","abrirModal","sust","enviarProov","editarProov","enCerrarModal","cancelButton","confirmButton","cerrarConfirmacionEliminar","confirmarEliminar","cargarProovs","funcEnviar","MostradorProveedores","activeIndex","panes","menuItem","Menu","Tab","Pane","MostradorProovedores_TabTodos_TabTodos","TabHoteles_TabProovs","renderActiveOnly","onTabChange","ModalCrearEditarCliente","numero","TabClientes","clientesDirs","nummeroContacto","enviarCliente","editarCliente","correoContacto","VerClientes_ModalCrearEditarCliente","TabTodosClientes","clientes","TabTodos_TabTodosClientes","VerClientes_TabClientes","VerClientes","localizer","BigCalendar","momentLocalizer","VerCalendario","fechaDefault","Date","events","cargarServicios","getMonth","v","start","end","isSelected","newStyle","borderRadius","border","isMine","eventosServ","s","title","allDay","height","react_big_calendar_esm","culture","startAccessor","endAccessor","defaultDate","defaultView","eventPropGetter","ModalPrueba1","valor1","Pruebas","valor2","Test_ModalPrueba1","NavBar","capitalize","string","charAt","toUpperCase","enlace","usuarioNombre","hora","locale","timerID","setInterval","tick","_this3","genero","usuario","stackable","LogoYllari","active","position","lineHeight","fontSize","Flag","cerrarSesionHandler","Auth","clave","maxWidth","Image","Divider","hidden","username","password","localStorage","setItem","usr","rol","nombrePersona","correoPersona","mostrarContenido","loggedInHandler","errorCompleto","Mostrador404","Subheader","MainContent","cerrarSesion","removeItem","getItem","Dimmer","inverted","Loader","contenido","react_router","component","components_NavBar_NavBar","path","exact","ViewFiles_CrearFile_CrearFile","match","params","Calendario_VerCalendario","containers_Auth_Auth","App","containers_MainContent_MainContent","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.535d9313.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_yllari.5229e823.png\";","module.exports = __webpack_public_path__ + \"static/media/huascaran.1782fcc0.png\";","module.exports = __webpack_public_path__ + \"static/media/machupichu.a5183e08.png\";","module.exports = __webpack_public_path__ + \"static/media/costaverdehd.b67f036a.png\";","import React from 'react';\r\nimport {Component} from 'react';\r\nimport './FileCard.css';\r\n\r\nclass FileCard extends Component{\r\n\r\n    render(){\r\n        console.log(this.props);\r\n        return (\r\n        <div className=\"FileCard\">\r\n            <b>{this.props.codigo}</b>\r\n            <hr/>\r\n            <p><em>{this.props.descripcion}</em></p>\r\n            <p>Agencia {this.props.agencia}</p>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileCard;","\r\nconst CONSTANTES_GLOBALES={\r\n    ListaMeses: [\r\n        { key: 1, text: 'Enero', value: 1 },\r\n        { key: 2, text: 'Febrero', value: 2 },\r\n        { key: 3, text: 'Marzo', value: 3 },\r\n        { key: 4, text: 'Abril', value: 4 },\r\n        { key: 5, text: 'Mayo', value: 5 },\r\n        { key: 6, text: 'Junio', value: 6 },\r\n        { key: 7, text: 'Julio', value: 7 },\r\n        { key: 8, text: 'Agosto', value: 8 },\r\n        { key: 9, text: 'Septiembre', value: 9 },\r\n        { key: 10, text: 'Octubre', value: 10 },\r\n        { key: 11, text: 'Noviembre', value: 11 },\r\n        { key: 12   , text: 'Diciembre', value: 12 },\r\n    ],\r\n    \r\n    \r\n    AliasClientes:{\r\n        CLIENTE_DIRECTO:\"CLDIR\",\r\n        OPERADOR_MAYORISTA:\"OPMAY\",\r\n        OPERADOR_MINORISTA:\"OPMIN\"\r\n    },\r\n\r\n    AliasProovedores:{\r\n        PERSONA:\"PERSO\",\r\n        EMPRESA:\"EMPRE\",\r\n        HOTEL:\"HOTEL\",\r\n        RESTAURANTE:\"RESTA\",\r\n        TRANSPORTE:\"TRANS\",\r\n        GUIA:\"GUIAA\",\r\n        OPERADOR:\"OPERA\"\r\n    },\r\n    \r\n    TiposClientes:[\r\n        { key: 1, text: 'Cliente directo', value: \"CLDIR\" },\r\n        { key: 2, text: 'Operador mayorista', value: \"OPMAY\" },\r\n        { key: 3, text: 'Operador minorista', value: \"OPMIN\" }\r\n    ],\r\n\r\n    TiposServicios:[\r\n        { key: 1, text: 'Servicio general', value: 1 },\r\n        { key: 2, text: 'Transporte', value: 2 },\r\n        { key: 1, text: 'Hospedaje', value: 1 },\r\n    ],\r\n    TiposProveedores:[\r\n        { key: 1, text: 'Persona', value: \"PERSO\"},\r\n        { key: 2, text: 'Empresa', value: \"EMPRE\"},\r\n        { key: 3, text: 'Hotel', value: \"HOTEL\"},\r\n        { key: 4, text: 'Restaurant', value: \"RESTA\"},\r\n        { key: 5, text: 'Transporte', value: \"TRANS\" },\r\n        { key: 6, text: 'Guia', value: \"GUIAA\"},\r\n        { key: 7, text: 'Operador', value: \"OPERA\" }\r\n    ],\r\n\r\n    aliasATextoProovedores : (alias) => {\r\n        console.log(\"a\");\r\n        if(alias){\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.PERSONA)\r\n                return \"Persona\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.EMPRESA)\r\n                return \"Empresa\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.HOTEL)\r\n                return \"Hotel\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.RESTAURANTE)\r\n                return \"Restaurante\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.GUIA)\r\n                return \"Guia\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.OPERADOR)\r\n                return \"Operador\"\r\n        }else\r\n            return \"ERROR\";\r\n    },\r\n\r\n    aliasATextoClientes : (alias) => {\r\n        console.log(\"a\",alias);\r\n        if(alias){\r\n            if (alias===CONSTANTES_GLOBALES.AliasClientes.CLIENTE_DIRECTO)\r\n                return \"Cliente directo\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasClientes.OPERADOR_MAYORISTA)\r\n                return \"Operador mayorista\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasClientes.OPERADOR_MINORISTA)\r\n                return \"Operador minorista\"\r\n        }else\r\n            return \"ERROR\";\r\n    },\r\n\r\n    AliasServicios:{\r\n        TRANSPORTE:\"TRANS\",\r\n        SERVICIO:\"SERVI\",\r\n        HOSPEDAJE:\"HOSPE\"\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nconst Rol_Admin=\"Admin\";\r\nconst Rol_Gerente=\"Gerente\";\r\nconst Rol_Operador=\"Operador\";\r\nconst Rol_Observador = \"Observador\";\r\n\r\nconst Configuracion={\r\n    //ServerUrl:\"http://localhost:65212\",\r\n    ServerUrl:\"http://diego25061-001-site2.itempurl.com\",\r\n    EnlacesNavBar:[\r\n        {nombre:\"Inicio\", valor:\"/inicio\" },\r\n        {nombre:\"Files\", valor:\"/files\"},\r\n        {nombre:\"Servicios\", valor:\"/servicios\"},\r\n        {nombre:\"Biblias\", valor:\"/biblias\"},\r\n        {nombre:\"Proveedores\", valor:\"/proveedores\"},\r\n        {nombre:\"Clientes\", valor:\"/clientes\"},\r\n        {nombre:\"Calendario\", valor:\"/calendario\"},\r\n    ]\r\n}\r\n\r\nconst CodigoMesATexto = (codigoMes) => {\r\n    if(codigoMes){\r\n        var obj = CONSTANTES_GLOBALES.ListaMeses.find(x=> x.key === codigoMes );\r\n        console.log(obj);\r\n        if(obj){\r\n            return obj.text;\r\n        }else{\r\n            return \"error\";\r\n        }\r\n    }\r\n}\r\n\r\nclass RptaTrx{\r\n    cont;\r\n    msj;\r\n    trace;\r\n    cod;\r\n    constructor(response){\r\n        if(response){\r\n            this.cont = response.cont;\r\n            this.msj = response.msj;\r\n            this.trace = response.trace;\r\n            this.cod = response.cod;\r\n\r\n            if(!this.cont || !this.cod)\r\n                this.cod=0;\r\n\r\n        }\r\n    }\r\n\r\n    set=(cont,msj,trace,cod)=>{\r\n        this.cont = cont;\r\n        this.msj = msj;\r\n        this.trace = trace;\r\n        this.cod = cod;\r\n    };\r\n\r\n    transaccionExitosa=()=>{\r\n        return this.cod!=0\r\n    }\r\n}\r\n\r\nexport {Configuracion, RptaTrx, CodigoMesATexto};\r\nexport default CONSTANTES_GLOBALES;","import axios from 'axios';\r\nimport CONSTANTES_GLOBALES, {\r\n    RptaTrx,\r\n    Configuracion\r\n} from '../Constantes';\r\n\r\nclass Requester {\r\n\r\n    static store = {}\r\n\r\n    static requestBasicoGet(direccion, funcSuccess, funcError, funcAlways, auth=true) {\r\n        axios.get(direccion,\r\n            auth ? {headers:{Authorization:\"Bearer \"+ this.store.token}}: null)\r\n            .then(response => {\r\n                try {\r\n                    if (funcSuccess)\r\n                        funcSuccess(response.data)\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n            }).catch(error => {\r\n                if (funcError) {\r\n                    if (error.response) {\r\n                        if (error.response.data)\r\n                            funcError(new RptaTrx(error.response.data));\r\n                        else {\r\n                            var r = new RptaTrx();\r\n                            r.set(null, \"Servidor inaccesible\", null, 0);\r\n                            funcError(r);\r\n                        }\r\n                    } else {\r\n                        //si hay un error donde el server ni responde\r\n                        var r = new RptaTrx();\r\n                        r.set(null, \"Servidor inaccesible\", null, 0);\r\n                        funcError(r);\r\n                    }\r\n                }\r\n            }) //.finally(response=>{})\r\n    }\r\n\r\n\r\n    static requestBasicoPost(direccion, objeto, funcSuccess, funcError, funcAlways, auth=true) {\r\n        axios.post(direccion, objeto,\r\n            auth ? {headers:{Authorization:\"Bearer \"+ this.store.token}}: null)\r\n            .then(response => {\r\n                try {\r\n                    if (funcSuccess) {\r\n                        if (response.data) {\r\n                            var resp = new RptaTrx();\r\n                            resp.set(response.data.cont, response.data.msj, response.data.trace, response.data.cod);\r\n                            funcSuccess(resp);\r\n                        }\r\n                    }\r\n                } catch (err) {\r\n                    console.error(err);\r\n                }\r\n            }).catch(error => {\r\n                console.error(\"Error en POST!\",error);\r\n                if (funcError) {\r\n                    if (error.response) {\r\n                        if (error.response.data) {\r\n                            funcError(new RptaTrx(error.response.data, error));\r\n                        } else {\r\n                            var r = new RptaTrx();\r\n                            r.set(null, \"Servidor inaccesible\", null, 0);\r\n                            funcError(r);\r\n                        }\r\n                    } else {\r\n                        //si hay un error donde el server ni responde\r\n                        var r = new RptaTrx();\r\n                        r.set(null, \"Servidor inaccesible\", null, 0);\r\n                        funcError(r);\r\n                    }\r\n                }\r\n            })\r\n    }\r\n    //------------------------ MISC -----------------------------------\r\n\r\n    static getPing = (funcSuccess, funcError, funcAlways ) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/misc/ping\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getInfo = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/misc/info\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //------------------------ AUTH -----------------------------------\r\n\r\n    static postLogin = (obj, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/usuarios/authenticate/\", obj, funcSuccess, funcError, funcAlways, false);\r\n    }\r\n\r\n    //------------------------ FILES -----------------------------------\r\n\r\n    static postFile = (file, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/files\", file, funcSuccess, funcError, funcAlways);\r\n    }\r\n    \r\n    static postEditarFile = (file, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/files/editar/\", file, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postBorrarFile = (idFile, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/files/eliminar/\"+idFile, null, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getListadoFiles = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/files\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getFile = (idFile, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/files/\"+idFile, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getHoteles = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/files\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //------------------------ BIBLIAS -----------------------------------\r\n\r\n    ///lista de biblias para elegir\r\n    static getBibliasDropdownCompleto = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/biblias/dropdown\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getBibliasDetalle = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/biblias/\", funcSuccess, funcError, funcAlways , true);\r\n    }\r\n\r\n\r\n    static postBiblia = (objeto, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/biblias/\", objeto, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //------------------------ SERVICIOS -----------------------------------\r\n\r\n    \r\n    static getServiciosTodos = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/servicios\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    static getServiciosPorMes = (mes, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/servicios/mes/\"+mes, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getServiciosGeneralesDetalle = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/servicios/generales\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getServiciosTransporteDetalle = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/servicios/transportes\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    \r\n    static getServiciosHospedaje = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/servicios/hospedajes\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    static postServicio = (\r\n        idFile,\r\n        idProveedor,\r\n        fecha,\r\n        tipoServicio,\r\n        nombre,\r\n        horaRecojo,\r\n        horaSalida,\r\n        vuelo,\r\n        pasajeros,\r\n        vr,\r\n        tc,\r\n        observaciones,\r\n        ciudad,\r\n        nombrePasajero,\r\n        tren,\r\n        alm,\r\n        transporte,\r\n        hotel,\r\n        funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/servicios/\", {\r\n            idFile,\r\n            idProveedor,\r\n            fecha,\r\n            tipoServicio,\r\n            nombre,\r\n            horaRecojo,\r\n            horaSalida,\r\n            vuelo,\r\n            pasajeros,\r\n            vr,\r\n            tc,\r\n            observaciones,\r\n            ciudad,\r\n            nombrePasajero,\r\n            tren,\r\n            alm,\r\n            transporte,\r\n            hotel\r\n        }, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //------------------------ CLIENTES -----------------------------------\r\n\r\n    static getClientesFullDetallado = (alias, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/clientes/\" + alias, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getClientesListaDropdown = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/clientes/dropdown\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postCliente = (tipo, nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, pais, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            CorreoContacto: correo,\r\n            numeroContacto,\r\n            numeroAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad,\r\n            pais\r\n        };\r\n        body.tipo = tipo;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/clientes/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    static postEditarCliente = (tipo, idCliente, nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, pais, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            idCliente,\r\n            nombre,\r\n            CorreoContacto: correo,\r\n            numeroContacto,\r\n            numeroAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad,\r\n            pais\r\n        };\r\n        body.tipo = tipo;\r\n        console.log(\"weeeeeeeee\", body);\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/clientes/editar\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postEliminarCliente = (id, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/clientes/eliminar/\" + id, null, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    //------------------------ HOTELES -----------------------------------\r\n\r\n    static getHotelesListaDropdown = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/proveedores/dropdown/hotel\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    //------------------------ PROVEEDORES -----------------------------------\r\n\r\n    static getProveedores = (tipoProveedor, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/proveedores/\" + tipoProveedor, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    static getProveedoresMenosTransportes = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/proveedores/tipos?incluir=GUIAA,EMPRE,RESTA,HOTEL,PERSO,OPERA\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getProveedoresTransportes = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/proveedores/tipos?incluir=trans\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getProveedoresHoteles = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/proveedores/tipos?incluir=hotel\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getProveedoresDropdown = (tipoProveedor, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/proveedores/dropdown/\" + tipoProveedor, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postEliminarProv = (id, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/eliminar/\" + id, null, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postProveedor = (tipo, nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = tipo;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postEditarProv = (alias, idProveedor, nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            idProveedor,\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = alias;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/editar\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //hoteles\r\n\r\n    static postProvHotel = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.HOTEL;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n\r\n    static postEditarProvHotel = (idProveedor, nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            idProveedor,\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.HOTEL;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/editar\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //operadores\r\n\r\n    static postProvOperador = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.OPERADOR;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //restaurantes\r\n\r\n    static postProvRestaurante = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.RESTAURANTE;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //transportes\r\n\r\n    static postProvTransporte = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.TRANSPORTE;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //guias\r\n\r\n    static postProvGuia = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.GUIA;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    //empresas\r\n\r\n    static postProvEmpresa = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.EMPRESA;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //personas\r\n\r\n    static postProvPersona = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.PERSONA;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //------------------------ CIUDADES -----------------------------------\r\n\r\n    static getCiudades = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/ciudades/\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    //------------------------ PAISES -----------------------------------\r\n\r\n    static getPaises = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/paises/\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n}\r\n\r\nexport default Requester;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Container , Input} from 'semantic-ui-react';\r\nimport ReactTable from \"react-table\";\r\nimport 'react-table/react-table.css'\r\n\r\n\r\nclass TablaBuscador extends Component{\r\n\r\n    \r\n    state={\r\n        queryBusqueda:\"\"\r\n    }\r\n\r\n\r\n    columnasDefault=[\r\n        {\r\n            Header: 'Columna 1',\r\n            accessor: 'col1'\r\n        },\r\n        {\r\n            Header: 'Columna 2',\r\n            accessor: 'col2',\r\n            Cell: props => <span className='number'>{props.value}</span>\r\n        },\r\n        {\r\n            Header: 'Columna 3!',\r\n            accessor: 'col3',\r\n        }\r\n    ]\r\n\r\n    render(){\r\n\r\n        //filtrando data\r\n        console.log(\"reupdate!\")\r\n        let dataFiltrada = this.props.data;\r\n\r\n        let query = this.state.queryBusqueda;\r\n\r\n        if(this.props.queryForzado)\r\n            query=this.props.queryForzado;\r\n\r\n\t\tif (query) \r\n            if(dataFiltrada)\r\n                dataFiltrada = dataFiltrada.filter(objetoFila => {\r\n                    for (var property in objetoFila) {\r\n                        if (objetoFila.hasOwnProperty(property)) {\r\n                            let val = objetoFila[property];\r\n                            if(val){\r\n                                if(String(val).toLowerCase().includes(query.toLowerCase()))\r\n                                    return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                })\r\n        \r\n\r\n        //mostrando data\r\n        return <Container fluid>\r\n                Buscar registros:{\"      \"}\r\n                <Input style={{padding:\"0px 0px 12px 0px\"}}\r\n                    placeholder=\"Buscar...\"\r\n                    value={query}\r\n                    onChange={e => {\r\n                        if(this.props.queryForzado)\r\n                            this.props.vaciarQueryForzado(); \r\n                        this.setState({queryBusqueda: e.target.value})\r\n                    }}/>\r\n                <br/>\r\n                <ReactTable\r\n                    data={dataFiltrada}\r\n                    columns={this.props.columns ? this.props.columns : this.columnasDefault} \r\n                    defaultPageSize={5}\r\n                    minRows={5}\r\n                    className=\"-highlight\"\r\n                />\r\n            </Container>\r\n    }\r\n}\r\n\r\nexport default TablaBuscador;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport FileCard from '../../components/FileCard/FileCard';\r\nimport { Link } from 'react-router-dom'\r\nimport './ViewFiles.css';\r\nimport { Table, Menu, Icon, Label, Button, Container, Header, Input, Segment, Confirm } from 'semantic-ui-react';\r\nimport ReactTable from \"react-table\";\r\nimport 'react-table/react-table.css'\r\nimport Requester from '../../common/Services/Requester';\r\nimport TablaBuscador from '../TablaBuscador/TablaBuscador';\r\n\r\n//import { MDBDataTable } from 'mdbreact';\r\n\r\n\r\n\r\nclass ViewFiles extends Component {\r\n\tstate = {\r\n\t\t//search:'',\r\n\t\topen: false,\r\n\t\tidFileABorrar: 0,\r\n\t\tcodigoFileABorrar: '',\r\n\t\tfiles: [\r\n\t\t\t//{codigo: \"23123\", descripcion: \"descripcion del file\", biblia:\"2018, mayo\", cliente:\"nts\", fecha:\"2/05/2019\", estado:\"activo\", cantServicios: \"2\", cantTransportes: \"3\" },\r\n\t\t]\r\n\t}\r\n\r\n\tcargarFiles = () => {\r\n\t\tRequester.getListadoFiles(rpta => {\r\n\t\t\tlet listaFiles = rpta.cont.map((e, i) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tidFile: e.id,\r\n\t\t\t\t\tcodigo: e.codigo,\r\n\t\t\t\t\tdescripcion: e.descripcion,\r\n\t\t\t\t\tbiblia: e.nombreBiblia,\r\n\t\t\t\t\tcliente: e.nombreCliente,\r\n\t\t\t\t\tfecha: e.fechaCreacion.split(\" \")[0],\r\n\t\t\t\t\tcantServicios: e.cantServicios,\r\n\t\t\t\t\tcantTransportes: e.cantTransportes\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.setState({ files: listaFiles });\r\n\t\t});\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.cargarFiles();\r\n\t}\r\n\r\n\trender=()=> {\r\n\t\tconst cols = [\r\n\t\t\t{\r\n\t\t\t\tHeader: 'id',\r\n\t\t\t\taccessor: 'idFile',\r\n\t\t\t\tshow: false\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Codigo',\r\n\t\t\t\taccessor: 'codigo' // String-based value accessors!\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Descripcion',\r\n\t\t\t\taccessor: 'descripcion',\r\n\t\t\t\tCell: props => <span className='number'>{props.value}</span> // Custom cell components!\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Biblia',\r\n\t\t\t\taccessor: 'biblia',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Cliente',\r\n\t\t\t\taccessor: 'cliente',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Fecha registro',\r\n\t\t\t\taccessor: 'fecha',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Cant. servicios',\r\n\t\t\t\taccessor: 'cantServicios',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Cant. Transportes',\r\n\t\t\t\taccessor: 'cantTransportes',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Accion',\r\n\t\t\t\tCell: props => {\r\n\t\t\t\t\t//console.log(props);\r\n\t\t\t\t\tlet urlVer = \"/file/ver/\" + props.row.idFile;\r\n\t\t\t\t\tlet urlEditar = \"/file/editar/\" + props.row.idFile;\r\n\t\t\t\t\treturn <Container textAlign=\"center\">\r\n\t\t\t\t\t\t<Link to={urlVer}>\r\n\t\t\t\t\t\t\t<Button circular icon=\"eye\"></Button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link to={urlEditar}>\r\n\t\t\t\t\t\t\t<Button circular icon=\"pencil\"></Button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Button circular color=\"red\" icon=\"trash\" onClick={() => { console.log(\"propss\", props); this.openConfirm(props.row.idFile, props.row.codigo) }}>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]\r\n\r\n\t\treturn (<div>\r\n\r\n\t\t\t<Header size=\"large\">Files</Header>\r\n\t\t\t<Container fluid textAlign=\"left\">\r\n\t\t\t\t<Link to=\"/files/crear\">\r\n\t\t\t\t\t<Button primary>Nuevo file</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</Container>\r\n\t\t\t<Header size=\"medium\">Lista de files</Header>\r\n\r\n\t\t\t<Segment>\r\n\t\t\t\t<TablaBuscador data={this.state.files} columns={cols} />\r\n\t\t\t</Segment>\r\n\r\n\t\t\t<Confirm content={\"Seguro que deseas eliminar el file '\" + this.state.codigoFileABorrar + \"' ?\"}\r\n\t\t\t\topen={this.state.open}\r\n\t\t\t\tonCancel={this.closeConfirm}\r\n\t\t\t\tonConfirm={() => {\r\n\t\t\t\t\tRequester.postBorrarFile(this.state.idFileABorrar,\r\n\t\t\t\t\t\t(rpta)=>{this.cargarFiles();},\r\n\t\t\t\t\t\t(rptaError)=>{this.cargarFiles();});\r\n\t\t\t\t\tthis.closeConfirm();\r\n\t\t\t\t}} />\r\n\r\n\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\r\n\topenConfirm = (idFile, codFile) => this.setState({ open: true, idFileABorrar: idFile, codigoFileABorrar: codFile })\r\n\tcloseConfirm = () => {\r\n\t\tthis.setState({ open: false, idFileABorrar: 0, codigoFile: '' });\r\n\t}\r\n}\r\nexport default ViewFiles;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Header, Container,Grid } from 'semantic-ui-react';\r\n\r\nclass ElementoForm extends Component{\r\n    render(){\r\n        let e = this.props.titulo;\r\n        if(this.props.black)\r\n            e = <b>{e}</b>;\r\n\r\n        let obj = \r\n        <Container fluid>\r\n            <p>{e}</p>\r\n            {this.props.children}\r\n        </Container>\r\n/*\r\n        if(this.props.grid)\r\n            obj = <Grid.Row>\r\n                <Grid.Column>\r\n                    {obj}\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n\r\n*/\r\n        return obj;\r\n    }\r\n\r\n}\r\n\r\nexport default ElementoForm;","import React from 'react'\r\nimport {Component} from 'react';\r\nimport ElementoForm from '../../../components/ElementoForm/ElementoForm';\r\nimport { Dropdown, Input, Icon, Grid} from 'semantic-ui-react';\r\nimport Constantes from '../../../common/Constantes';\r\n\r\nclass CamposCrearCliente extends Component{\r\n    \r\n    componentDidMount(){\r\n        //this.props.contCliente.campos = {};\r\n    }\r\n\r\n    render(){\r\n        return <Grid>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <ElementoForm titulo=\"Nombre *\">\r\n                        <Input fluid placeholder=\"Universal\" \r\n                            onChange={(event)=>{ this.props.contenedor.nombre=event.target.value; /*this.props.contenedor.ff();*/ }}>\r\n                        </Input>\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n\r\n                <ElementoForm titulo=\"Tipo *\">\r\n                    <Dropdown placeholder=\"Operador\" selection fluid search options={Constantes.TiposClientes}\r\n                        onChange = {(event,data)=>{this.props.contenedor.tipo=data.value}}\r\n                    ></Dropdown>\r\n                </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n                \r\n            <Grid.Row columns={2}>\r\n                <Grid.Column>\r\n\r\n                <ElementoForm titulo=\"Correo de contacto\">\r\n                    <Input placeholder=\"correo@gmail.com\" iconPosition=\"left\" fluid \r\n                        onChange={(event)=>{this.props.contenedor.correo=event.target.value}}>\r\n                        <Icon name=\"at\"></Icon>\r\n                        <input />\r\n                    </Input>\r\n                </ElementoForm>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <ElementoForm titulo=\"Correo adicional\">\r\n                    <Input placeholder=\"correo@gmail.com\" iconPosition=\"left\" fluid \r\n                        onChange={(event)=>{this.props.contenedor.correoAdicional=event.target.value}}>\r\n                        <Icon name=\"at\"></Icon>\r\n                        <input />\r\n                    </Input>\r\n                </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n                \r\n            <Grid.Row columns={2}>\r\n                <Grid.Column>\r\n                    <ElementoForm titulo=\"Numero contacto\">\r\n                        <Input placeholder=\"(511)97985020\" fluid onChange={(event)=>{this.props.contenedor.numContacto=event.target.value}}></Input>\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                    <ElementoForm titulo=\"Numero contacto adicional\">\r\n                        <Input placeholder=\"(511)97985020\" fluid onChange={(event)=>{this.props.contenedor.numContactoAdic=event.target.value}}></Input>\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row columns={2}>\r\n                <Grid.Column>\r\n                    <ElementoForm titulo=\"Pais\">\r\n                        <Input placeholder=\"Colombia\" fluid onChange={(event)=>{this.props.contenedor.pais=event.target.value}}></Input>\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                    <ElementoForm titulo=\"Ciudad\">\r\n                        <Input placeholder=\"Bogotá\" fluid onChange={(event)=>{this.props.contenedor.ciudad=event.target.value}}></Input>\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport default CamposCrearCliente;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button,Modal } from 'semantic-ui-react';\r\n\r\n\r\nclass ModalTrxSimple extends Component{\r\n    state={\r\n        abierto:false\r\n    }\r\n\r\n    abrir(){\r\n        this.setState({abierto:true});\r\n    }\r\n\r\n    render(){\r\n        return <Modal size={this.props.size?this.props.size:\"small\"}\r\n        open ={this.state.abierto} \r\n        centered={false} \r\n        onClose={() => {this.setState({abierto:false})}}>\r\n                <Modal.Header>{this.props.titulo}</Modal.Header>\r\n                <Modal.Content>{this.props.children}</Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button positive icon='checkmark' labelPosition='right' content={this.props.textoAceptar} onClick={this.props.enAceptar}/>\r\n                    <Button negative onClick={()=>{if(this.props.enCancelar) this.props.enCancelar(); this.setState({abierto:false})}}>{this.props.textoCancelar}</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n    }\r\n}\r\n\r\n\r\nexport default ModalTrxSimple;","import React from 'react'\r\nimport {Component} from 'react'\r\n\r\nclass ContainedComponent extends Component{\r\n    \r\n    getParentContainer = () => {\r\n        return { ...this.props.parent.state[this.props.pack] };\r\n    }\r\n\r\n    UpdateParentContainer = (cont) => {\r\n        this.props.parent.setState({ [this.props.pack]: cont })\r\n    }\r\n}\r\n\r\nexport default ContainedComponent;","import React from 'react';\r\nimport { Message, Icon } from 'semantic-ui-react';\r\n\r\n/**\r\n * \r\n * @param {*} props \r\n */\r\n\r\nconst MensajeTransaccion = (props) => {\r\n\r\n    let msj = <div></div>\r\n    let lineasMensaje = null;\r\n\r\n    if (props.rptaTransaccion)\r\n        if (props.rptaTransaccion.msj) {\r\n            //console.log(\"WWWWWWWWAAAAAck\",props.rptaTransaccion.msj)\r\n            lineasMensaje = props.rptaTransaccion.msj.split('|');\r\n        }\r\n\r\n    //console.log(\"LINEAS MENSAJE:\",lineasMensaje);\r\n    //props.rptaTransaccion.msj ? <Message.Item> {props.rptaTransaccion.msj} </Message.Item> : null\r\n\r\n    //console.log(props)\r\n\r\n    //let contenedor = props.contenedor;\r\n    /*\r\n    transaccionEnviada:false,\r\n    responseRecibida:false,\r\n    rptaTransaccion:null,*/\r\n    if (props) {\r\n        if (props.transaccionEnviada && !props.responseRecibida) {\r\n            msj = <Message icon>\r\n                <Icon name='circle notched' loading />\r\n                <Message.Content>\r\n                    <Message.Header>{props.headerCargando ? props.headerCargando : \"Espere un momento...\"}</Message.Header>\r\n                    {props.textoCargando ? props.textoCargando : \"Enviando petición\"}\r\n                </Message.Content>\r\n            </Message>\r\n        } else\r\n            if (props.responseRecibida) {\r\n                //console.log(props.parentComponent.state.modalBiblia)\r\n                if (props.rptaTransaccion.transaccionExitosa()) {\r\n                    msj = <Message success >\r\n                        <Message.Header>{props.headerExito ? props.headerExito : \"Transaccion exitosa\"}</Message.Header>\r\n                        <Message.List>\r\n                            {props.textoExito/*<Message.Item>Puede usar la biblia nueva.</Message.Item>*/}\r\n                            {props.rptaTransaccion.msj ? <Message.Item>{props.rptaTransaccion.msj}</Message.Item> : null}\r\n                        </Message.List>\r\n                    </Message>\r\n                } else {\r\n                    msj = <Message negative>\r\n                        <Message.Header>{props.headerError ? props.headerError : \"Error en transaccion\"}</Message.Header>\r\n                        <Message.List>\r\n                            {lineasMensaje ? lineasMensaje.map((e, i) => {\r\n                                if(e)\r\n                                    return <Message.Item>{e}</Message.Item>\r\n                            }) : null}\r\n                            {props.rptaTransaccion.trace ? <Message.Item>{props.rptaTransaccion.trace}</Message.Item> : null}\r\n                        </Message.List>\r\n                    </Message>\r\n                }\r\n            }\r\n\r\n        return msj;\r\n    }\r\n\r\n}\r\n/*\r\nclass MensajeTransaccion extends Component{\r\n\r\n    state={\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n    }\r\n\r\n}*/\r\n\r\nexport default MensajeTransaccion;","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Button, Container, Message, Icon, Input, Modal, Grid, Dropdown } from 'semantic-ui-react';\r\nimport ElementoForm from '../../components/ElementoForm/ElementoForm';\r\nimport Constantes from '../../common/Constantes';\r\nimport ContainedComponent from '../../components/ContainedComponent';\r\nimport MensajeTransaccion from '../../components/MensajeTransaccion/MensajeTransaccion';\r\n\r\nclass ModalCrearEditarProveedor extends ContainedComponent {\r\n\r\n    componentDidMount=()=>{\r\n        //console.log(\"Contenedor: \",this.getParentContainer());\r\n    }\r\n\r\n    render() {\r\n        var CompElegir = ''\r\n        if (this.props.elegirTipo) {\r\n            CompElegir = <Grid.Row>\r\n                <Grid.Column>\r\n                    <ElementoForm grid titulo=\"Tipo de proveedor *\">\r\n\r\n                        <Dropdown fluid placeholder='Elegir Tipo'\r\n                            search\r\n                            selection\r\n                            options={Constantes.TiposProveedores}\r\n                            onChange={(event, data) => {\r\n                                let obj = this.getParentContainer();\r\n                                obj.campos.tipo = data.value;\r\n                                this.UpdateParentContainer(obj);\r\n                                /*\r\n                                var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                obj.campos.tipo = data.value;\r\n                                this.props.parent.setState({modalCrearEditar:obj});*/\r\n                            }} />\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        }\r\n\r\n        var msjSuccess = \"Objeto creado\";\r\n        if (/*this.props.parent.state.modalCrearEditar.modo === \"edicion\"*/this.getParentContainer().modo===\"edicion\")\r\n            msjSuccess = \"Objeto editado exitosamente\";\r\n\r\n        var msjComp = <div></div>\r\n        //console.log(\"weee\");\r\n        //console.log(this.props.parent.state.modalCrearEditar);\r\n        let asd = \r\n        <MensajeTransaccion\r\n            transaccionEnviada = {this.getParentContainer().mensaje.enviado} \r\n            responseRecibida = {this.getParentContainer().mensaje.recibido}\r\n            rptaTransaccion = {this.getParentContainer().mensaje.respuesta}\r\n            //textoExito = \"Puede usar la nueva biblia\"\r\n        />\r\n\r\n        /*{\r\n        if (this.getParentContainer() && this.getParentContainer().mensaje ) {\r\n            var mensaje = this.getParentContainer().mensaje;\r\n            if (mensaje.enviado && !mensaje.recibido) {\r\n                msjComp = <Message icon>\r\n                    <Icon name='circle notched' loading />\r\n                    <Message.Content>\r\n                        <Message.Header>Espere un momento...</Message.Header>\r\n                        Completando la transacción\r\n                    </Message.Content>\r\n                </Message>\r\n            } else\r\n                if (mensaje.recibido) {\r\n                    if (mensaje.respuesta.transaccionExitosa()) {\r\n                        msjComp = <Message success >\r\n                            <Message.Header>Transaccion exitosa</Message.Header>\r\n                            <Message.List>\r\n                                <Message.Item>{msjSuccess}</Message.Item>\r\n                                {mensaje.respuesta.msj ? <Message.Item> {mensaje.respuesta.msj} </Message.Item> : null}\r\n                            </Message.List>\r\n                        </Message>\r\n                    } else {\r\n                        msjComp = <Message negative>\r\n                            <Message.Header>Error en transaccion</Message.Header>\r\n                            <Message.List>\r\n                                <Message.Item>{mensaje.respuesta.msj}</Message.Item>\r\n                                {mensaje.respuesta.trace ? <Message.Item>{mensaje.respuesta.trace}</Message.Item> : null}\r\n                            </Message.List>\r\n                        </Message>\r\n                    }\r\n                }\r\n    }*/\r\n\r\n        return <Modal size=\"tiny\" open={this.getParentContainer().abierto /* this.props.parent.state.modalCrearEditar.abierto*/} centered={true} onClose={() => {\r\n            this.UpdateParentContainer({ ...this.getParentContainer(), abierto:false });\r\n            this.props.enCerrar();\r\n\r\n            /*var obj= {...this.props.parent.state.modalCrearEditar};\r\n            obj.abierto=false;\r\n            this.props.enCerrar();\r\n            this.props.parent.setState({modalCrearEditar:obj});\r\n            */\r\n        }}>\r\n\r\n            <Modal.Header>{/*this.props.parent.state.modalCrearEditar.modo==='creacion'*/ this.getParentContainer().modo ? 'Crear ' + this.props.sustantivoTitulo : 'Modificar ' + this.props.sustantivoTitulo}</Modal.Header>\r\n\r\n            <Modal.Content>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Nombre *\">\r\n                                <Input fluid placeholder={this.props.placeholderNombre} value={this.getParentContainer().campos.nombre/*this.props.parent.state.modalCrearEditar.campos.nombre*/} onChange={(event) => {\r\n                                    /*var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                    obj.campos.nombre = event.target.value;\r\n                                    this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                    let obj = this.getParentContainer();\r\n                                    obj.campos.nombre = event.target.value;\r\n                                    this.UpdateParentContainer(obj);\r\n                                }} />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n                    <Grid.Row columns={2}>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Correo electrónico\">\r\n                                <Input\r\n                                    fluid\r\n                                    iconPosition=\"left\" placeholder={this.props.placeholderCorreo} value={this.getParentContainer().campos.correo/*this.props.parent.state.modalCrearEditar.campos.correo*/} onChange={(event) => {\r\n                                        /*var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.correo = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                        let obj = this.getParentContainer();\r\n                                        obj.campos.correo = event.target.value;\r\n                                        this.UpdateParentContainer(obj);\r\n                                    }}>\r\n                                    <Icon name=\"at\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Correo electrónico adicional\">\r\n                                <Input\r\n                                    fluid\r\n                                    iconPosition=\"left\" placeholder={this.props.placeholderCorreoAdic} value={this.getParentContainer().campos.correoAdic/*this.props.parent.state.modalCrearEditar.campos.correoAdic*/} onChange={(event) => {\r\n                                        /*var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.correoAdic = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                        let obj = this.getParentContainer();\r\n                                        obj.campos.correoAdic = event.target.value;\r\n                                        this.UpdateParentContainer(obj);\r\n                                    }}>\r\n                                    <Icon name=\"at\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n\r\n                    <Grid.Row columns={2}>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Numero contacto\">\r\n                                <Input\r\n                                    fluid\r\n                                    placeholder=\"98957845\"\r\n                                    iconPosition=\"left\"\r\n                                    value={this.getParentContainer().campos.num/*this.props.parent.state.modalCrearEditar.campos.num*/} onChange={(event) => {\r\n                                        /*var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.num = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                        let obj = this.getParentContainer();\r\n                                        obj.campos.num = event.target.value;\r\n                                        this.UpdateParentContainer(obj);\r\n                                    }}>\r\n                                    <Icon name=\"phone\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Numero contacto adicional\">\r\n                                <Input\r\n                                    fluid\r\n                                    placeholder=\"564-8790\"\r\n                                    iconPosition=\"left\"\r\n                                    value={this.getParentContainer().campos.numAdic/*this.props.parent.state.modalCrearEditar.campos.numAdic*/} onChange={(event) => {\r\n                                        /*\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.numAdic = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                        let obj = this.getParentContainer();\r\n                                        obj.campos.numAdic = event.target.value;\r\n                                        this.UpdateParentContainer(obj);\r\n                                    }}>\r\n                                    <Icon name=\"phone\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Ciudad\">\r\n                                <Input fluid placeholder=\"Cusco\"\r\n                                    value={this.getParentContainer().campos.ciudad/*this.props.parent.state.modalCrearEditar.campos.ciudad*/} onChange={(event) => {\r\n                                        /*\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.ciudad = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                        let obj = this.getParentContainer();\r\n                                        obj.campos.ciudad = event.target.value;\r\n                                        this.UpdateParentContainer(obj);\r\n                                    }} />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    {CompElegir}\r\n                </Grid>\r\n                {asd}\r\n            </Modal.Content>\r\n\r\n            <Modal.Actions>\r\n                <Button negative onClick={() => {\r\n                    /*\r\n                    var obj= {...this.props.parent.state.modalCrearEditar};\r\n                    obj.abierto=false;\r\n                    this.props.enCerrar();\r\n                    this.props.parent.setState({modalCrearEditar:obj});*/\r\n                    let obj = this.getParentContainer();\r\n                    obj.abierto = false;\r\n                    this.UpdateParentContainer(obj);\r\n                    this.props.enCerrar();\r\n                }}>\r\n                    Cancelar\r\n                </Button>\r\n                {\r\n                    this.getParentContainer().modo /*this.props.parent.state.modalCrearEditar.modo*/ === 'creacion' ?\r\n                        <Button positive icon='checkmark' labelPosition='right' content='Crear' onClick={this.props.enEnviar} /> :\r\n                        <Button color=\"yellow\" icon='checkmark' labelPosition='right' content='Modificar' onClick={this.props.enEditar} />\r\n                }\r\n            </Modal.Actions>\r\n\r\n        </Modal>\r\n\r\n    }\r\n}\r\nexport default ModalCrearEditarProveedor;","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Input , Dropdown,Button} from 'semantic-ui-react';\r\n\r\n//class InputSearchableData extends Component {\r\n\r\n/**\r\n * Input que se comporta como un searchable dropdown y fuerza que haya un valor igual a alguno de la lista.\r\n * Se le puede poner un boton al lado para facilitar el enlazado de objetos en forms complejos\r\n * @param {*} datalist\r\n *La datalist es una lista de objetos {text:\"texto\",value:\"0\"}.\r\n * \r\n */\r\nclass InputSearchableDataButton extends React.Component {\r\n\r\n    render = () => {\r\n        let control = <div>\r\n            <Input /* iconPosition='left'*/ transparent={this.props.transparent} list={this.props.linkId} loading={this.props.loading}\r\n                disabled={this.props.disabled} placeholder={this.props.placeholder}\r\n                fluid={this.props.fluid}\r\n                value={this.props.value}\r\n                onBlur={(event, data) => {/*\r\n                console.log(\"proovs! \",this.state.opcionesProveedores);\r\n                console.log(\"event! \",event.target.value);\r\n                console.log(\"data! \",data);*/\r\n                    if (event.target.value) {\r\n                        let foundVal = this.props.datalist.find((obj) => {\r\n                            /*\r\n                            console.log(\"vallllllllllllll\",obj.text);\r\n                            if(obj.text.includes(event.target.value))\r\n                                console.log(obj.text);*/\r\n                            return obj.text.includes(event.target.value)\r\n                        });\r\n                        if (foundVal) {\r\n\r\n                            this.props.setValue(foundVal);\r\n                            /*\r\n                            //console.log(\"VAL!\",foundVal)\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[this.props.index].proveedor = foundVal.text;\r\n                            this.setState({ servicios: servs });*/\r\n                        } else {\r\n                            this.props.setValue({});\r\n                            /*\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[this.props.index].proveedor = \"\";\r\n                            this.setState({ servicios: servs });*/\r\n                        }\r\n                    } else {\r\n                        this.props.setValue({});\r\n                        /*\r\n                        var servs = this.state.servicios.slice();\r\n                        servs[this.props.index].proveedor = \"\";\r\n                        this.setState({ servicios: servs });*/\r\n                    }\r\n                }}\r\n                onChange={(event) => {\r\n\r\n                    this.props.setValue(event.target.value);\r\n                    /*\r\n                    var servs = this.state.servicios.slice();\r\n                    servs[this.props.index].proveedor = event.target.value;\r\n                    this.setState({ servicios: servs });*/\r\n                }}>\r\n                {/*\r\n            <Icon name='lightning' />*/}\r\n                <input />\r\n                {this.props.sideButton}\r\n            </Input>\r\n            <datalist id={this.props.linkId}>\r\n                {this.props.datalist.map(e => <option key={e.value} value={e.text} />)}\r\n            </datalist>\r\n        </div>\r\n\r\n        let control2 = <div>\r\n            <Dropdown\r\n                placeholder={this.placeholder}\r\n                search\r\n                selection\r\n                options={this.props.datalist}\r\n                loading={this.props.loading}\r\n                disabled={this.props.disabled}\r\n                placeholder={this.props.placeholder}\r\n                value={this.props.value}\r\n                onChange={this.props.onChange}\r\n            />\r\n            {this.props.sideButton}\r\n        </div>\r\n        return control2;\r\n    }\r\n\r\n}\r\n\r\nexport default InputSearchableDataButton;","import React from 'react';\r\nimport {  Icon,  Message, Dropdown, Modal, Button, Input, Grid} from 'semantic-ui-react';\r\nimport ElementoForm from '../ElementoForm/ElementoForm';\r\nimport CONSTANTES_GLOBALES from '../../common/Constantes';\r\nimport MensajeTransaccion from '../MensajeTransaccion/MensajeTransaccion';\r\n\r\n/**\r\n * \r\n * @param {*} props Requiere un state parent con la siguiente estructura.\r\n * ```jsx\r\n * \r\n    state = { ...\r\n        modalBiblia:{\r\n            abierto:false,\r\n            transaccionEnviada:false,\r\n            responseRecibida:false,\r\n            rptaTransaccion:null,\r\n            campos:{\r\n                mes:null,\r\n                anho:null\r\n            }\r\n        }\r\n        ...\r\n    } ```\r\n\r\n */\r\nconst ModalCrearBiblia = (props) => {\r\n           \r\n    //console.log(\"props:\",props);\r\n    return (\r\n    <Modal size=\"tiny\" open ={props.parentComponent.state.modalBiblia.abierto} centered={true} onClose={() => {var obj = {...props.parentComponent.state.modalBiblia};\r\n        obj.abierto=false;\r\n        props.parentComponent.setState({modalBiblia:obj});}}>\r\n        <Modal.Header>Nueva biblia</Modal.Header>\r\n        <Modal.Content>\r\n            <Grid>\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <ElementoForm titulo=\"Mes\">\r\n                            <Dropdown placeholder=\"Junio\" fluid search selection options={CONSTANTES_GLOBALES.ListaMeses} \r\n                                onChange = {(event,data)=>{\r\n                                    var newState = {...props.parentComponent.state};\r\n                                    newState.modalBiblia.campos.mes= data.value;\r\n                                    props.parentComponent.setState(newState);\r\n                                    }}/>\r\n                        </ElementoForm>    \r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <ElementoForm titulo=\"Año\">\r\n                            <Input fluid placeholder=\"Año\" onChange={(event)=>{\r\n                                    var newState = {...props.parentComponent.state};\r\n                                    newState.modalBiblia.campos.anho=event.target.value;\r\n                                    props.parentComponent.setState(newState);\r\n                                }}></Input>\r\n                        </ElementoForm>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <MensajeTransaccion \r\n                transaccionEnviada = {props.parentComponent.state.modalBiblia.transaccionEnviada} \r\n                responseRecibida = {props.parentComponent.state.modalBiblia.responseRecibida}\r\n                rptaTransaccion = {props.parentComponent.state.modalBiblia.rptaTransaccion}\r\n                textoExito = \"Puede usar la nueva biblia\"\r\n            />\r\n            {/*msj*/}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n            <Button negative onClick={() => {var obj = {...props.parentComponent.state.modalBiblia};\r\n                obj.abierto=false;\r\n                props.parentComponent.setState({modalBiblia:obj});}}>\r\n                Cancelar\r\n            </Button>\r\n            <Button positive icon='checkmark' labelPosition='right' content='Crear' onClick={props.parentComponent.EnviarPostBiblia} />\r\n        </Modal.Actions>\r\n    </Modal>)    \r\n}\r\n\r\nexport default ModalCrearBiblia;","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Dropdown, Input, TextArea, Form, Grid, Segment, Button, Icon, Label, Table, Message, Popup, Header, Modal, Container } from 'semantic-ui-react'\r\n\r\nimport ElementoForm from '../../../components/ElementoForm/ElementoForm';\r\nimport Constantes, { RptaTrx } from '../../../common/Constantes';\r\nimport { Configuracion } from '../../../common/Constantes';\r\nimport CamposCrearCliente from '../../VerClientes/CamposCrearCliente/CamposCrearCliente';\r\n\r\n//date pickers\r\nimport { DateInput, TimeInput, DateTimeInput, DatesRangeInput } from 'semantic-ui-calendar-react';\r\nimport axios from 'axios';\r\nimport ModalTrxSimple from '../../ModalTrxSimple/ModalTrxSimple';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport ModalCrearEditarProveedor from '../../MostradorProovedores/ModalCrearEditarProveedor';\r\nimport MensajeTransaccion from '../../../components/MensajeTransaccion/MensajeTransaccion';\r\n\r\nimport '../CrearFile/CrearFile.css'\r\nimport InputSearchableDataButton from '../../../components/InputSearchableData/InputSearchableData';\r\nimport ModalCrearBiblia from '../../../components/ModalCrearBiblia/ModalCrearBiblia';\r\n\r\nconst CampoServicio = (props) => {\r\n    return <Segment style={{ padding: \"7px\" }}><Header style={{ margin: \"-2px 0px 4px 0px\" }} as=\"h4\">{props.titulo}</Header>{props.componente}</Segment>\r\n}\r\n\r\n\r\nclass CrearFile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //this.modalClientesRef = React.createRef();\r\n    }\r\n\r\n    servicio = (tipoServicio, fecha, ciudad, horaInicio, nombre, pasajeros, nombrePasajero, tren, alm, observaciones, idProveedor) => {\r\n        return {tipoServicio,  fecha, ciudad, horaInicio, nombre, pasajeros, nombrePasajero, tren, alm, observaciones, idProveedor };\r\n    }\r\n    transporte = (tipoServicio, fecha, ciudad, horaInicio, horaFin, vuelo, nombre, pasajeros, nombrePasajero, vr, tc, idProveedor, observaciones) => {\r\n        return {tipoServicio,  fecha, ciudad, horaInicio, horaFin, vuelo, nombre, pasajeros, nombrePasajero, vr, tc, idProveedor, observaciones };\r\n    }\r\n    hospedaje = (tipoServicio, fecha, fechaOut, horaInicio, horaFin,  nombre, pasajeros, nombrePasajero, idProveedor, observaciones) => {\r\n        return { tipoServicio, fecha, fechaOut,  horaInicio, horaFin,  nombre, pasajeros, nombrePasajero, idProveedor, observaciones };\r\n    }\r\n\r\n    servicioDefault = () => {\r\n        return this.servicio(Constantes.AliasServicios.SERVICIO, '', '', '', '', 0, '', '', '', '')\r\n    }\r\n    transporteDefault = () => {\r\n        return this.transporte(Constantes.AliasServicios.TRANSPORTE, '', '', '', '', '', '', 0, '', '', '', '', '')\r\n    }\r\n    \r\n    hospedajeDefault = () => {\r\n        return this.hospedaje(Constantes.AliasServicios.HOSPEDAJE, '', '', '', '', '', 0, '', '', '')\r\n    }\r\n\r\n\r\n    state = {\r\n        //datos de modal biblia\r\n        modalCliente: {\r\n            //abierto:false,\r\n            transaccionEnviada: false,\r\n            responseRecibida: false,\r\n            rptaTransaccion: null\r\n        },\r\n\r\n        modalBiblia: {\r\n            abierto: false,\r\n            transaccionEnviada: false,\r\n            responseRecibida: false,\r\n            rptaTransaccion: null,\r\n\r\n            campos: {\r\n                mes: null,\r\n                anho: null\r\n            }\r\n        },\r\n\r\n        //datos de file\r\n        idFile: undefined,\r\n        codigo: '',\r\n        descripcion: '',\r\n        idBiblia: undefined,\r\n        idCliente: undefined,\r\n\r\n        servicios: [\r\n            //this.servicioDefault()\r\n        ],\r\n        transportes: [],\r\n        hospedajes: [],\r\n\r\n        //opciones a elegir\r\n        bibliasCargaron: false,\r\n        //bibliasCargaronExito: true,\r\n\r\n        clientesCargaron: false,\r\n        //clientesCargaronExito: true,\r\n\r\n        hotelesCargaron: false,\r\n        //hotelesCargaronExito: true,\r\n\r\n        opcionesBiblia: [/*{value:1, text:'mayo, 2019'}*/],\r\n        opcionesCliente: [/*{value:1, text:''}*/],\r\n        opcionesProveedores: [/*{value:1, text:'juancito'}*/],\r\n        opcionesTransportes: [/*{value:1, text:'juancito'}*/],\r\n        opcionesHoteles : [],\r\n        \r\n        opcionesCiudades: [],\r\n        opcionesPaises: [],\r\n\r\n\r\n        modalCrearEditarProveedor: {\r\n            //creacion o edicion\r\n            modo: \"creacion\",\r\n            abierto: false,\r\n\r\n            mensaje: {\r\n                enviado: false,\r\n                recibido: false,\r\n                respuesta: null\r\n            },\r\n\r\n            campos: {\r\n                id: '',\r\n                nombre: '',\r\n                correo: '',\r\n                correoAdic: '',\r\n                num: '',\r\n                numAdic: '',\r\n                ciudad: '',\r\n                tipo: ''\r\n            }\r\n        },\r\n\r\n        modalCrearProveedorTransporte: {\r\n            modo: \"creacion\",\r\n            abierto: false,\r\n\r\n            mensaje: {\r\n                enviado: false,\r\n                recibido: false,\r\n                respuesta: null\r\n            },\r\n\r\n            campos: {\r\n                id: '',\r\n                nombre: '',\r\n                correo: '',\r\n                correoAdic: '',\r\n                num: '',\r\n                numAdic: '',\r\n                ciudad: '',\r\n                tipo: ''\r\n            }\r\n        },\r\n\r\n        transaccionEnviadaCrearFile: false,\r\n        responseRecibidaCrearFile: false,\r\n        rptaTransaccionCrearFile: null,\r\n\r\n        mensajeCreacionFile: \"\",\r\n        creacionFileExitosa: false\r\n    }\r\n\r\n\r\n    contenedorCamposModalCliente = {\r\n        //ff:()=>{console.log(this.contCliente)},\r\n        //funcCrearCliente:()=>{}\r\n    }\r\n\r\n\r\n    modoVer = () => {\r\n        return this.props.modo === \"ver\";\r\n    }\r\n\r\n    modoEditar = () => {\r\n        return this.props.modo === \"editar\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"PROPS\", this.props);\r\n        //Requester.getListadoFiles(this.filesRecibidos,this.filesError);\r\n\r\n\r\n        if (this.props.modo === \"ver\" || this.props.modo === \"editar\") {\r\n            this.cargarFileBase();\r\n        }\r\n        if (this.props.modo === \"crear\" || this.props.modo === \"editar\") {\r\n            this.cargarClientes();\r\n            this.cargarBiblias();\r\n            this.cargarProveedoresNoTransp();\r\n            this.cargarTransportes();\r\n            this.cargarCiudades();\r\n            this.cargarHoteles();\r\n            //this.cargarPaises();\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n\r\n        let fieldStyle = { margin: \"6px 0 4px 0\" };\r\n        let titulo = \"Nuevo File\";\r\n        if (this.props.modo === \"ver\")\r\n            titulo = \"Ver File\";\r\n        else if (this.props.modo === \"editar\")\r\n            titulo = \"Modificar File\";\r\n\r\n        let estiloTextArea = {};\r\n        if (this.modoVer()) {\r\n            estiloTextArea = { borderStyle: \"none\", color: \"gray\" };\r\n        }\r\n\r\n        let eleccionBiblia = {};\r\n\r\n        let controlBiblia = <InputSearchableDataButton\r\n            loading={!this.state.hotelesCargaron}\r\n            disabled={this.modoVer()}\r\n            placeholder={this.modoVer() ? \"\" : 'Elegir Biblia'}\r\n            datalist={this.state.opcionesBiblia}\r\n            value={this.state.idBiblia}\r\n            sideButton={\r\n                <Button icon primary onClick={() => {\r\n                    var obj = { ...this.state.modalBiblia };\r\n                    obj.abierto = true;\r\n                    this.setState({ modalBiblia: obj });\r\n                }}>\r\n                    <Icon name='plus' />\r\n                </Button>\r\n            }\r\n            onChange={(event, data) => {\r\n                console.log(\"event\", event);\r\n                console.log(\"data\", data);\r\n                this.setState({ idBiblia: data.value })\r\n            }}\r\n        />\r\n\r\n        if (this.modoVer()) {\r\n            controlBiblia = <Input disabled transparent fluid value={this.state.nombreBiblia ? this.state.nombreBiblia : \"\"} ></Input>\r\n        }\r\n\r\n        let controlCliente = <Dropdown fluid\r\n            placeholder='Christian'\r\n            search\r\n            loading={!this.state.bibliasCargaron}\r\n            selection\r\n            value={this.state.idCliente}\r\n            options={this.state.opcionesCliente}\r\n            onChange={(event, data) => {\r\n                this.setState({ idCliente: data.value });\r\n            }}\r\n        />\r\n\r\n        if (this.modoVer()) {\r\n            controlCliente = <Input disabled transparent fluid value={this.state.nombreCliente ? this.state.nombreCliente : \"\"} ></Input>\r\n        }\r\n\r\n\r\n        let controlDescripcion = <TextArea disabled={this.modoVer()} style={estiloTextArea} placeholder='Descripcion del file' rows={1} value={this.state.descripcion ? this.state.descripcion : \"\"} onChange={(event) => {\r\n            this.setState({ descripcion: event.target.value });\r\n        }} />\r\n\r\n        if (this.modoVer()) {\r\n            controlDescripcion = <Input disabled transparent fluid value={this.state.descripcion ? this.state.descripcion : \"\"} />\r\n        }\r\n\r\n\r\n\r\n        return <div>\r\n            {/*<Button onClick={() => { console.log(\"state\", this.state) }} wee></Button>*/}\r\n            <Header size=\"large\">{titulo}</Header>\r\n            <Segment>\r\n                <Grid columns={2} >\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Header >Datos</Header>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={8}>\r\n                            <ElementoForm titulo=\"Codigo *\">\r\n                                <Input disabled={this.modoVer()} transparent={this.modoVer()} fluid placeholder=\"08-020\" value={this.state.codigo ? this.state.codigo : \"\"} onChange={(event) => {\r\n                                    this.setState({ codigo: event.target.value });\r\n                                }} ></Input>\r\n                            </ElementoForm>\r\n\r\n                        </Grid.Column>\r\n                        <Grid.Column width={8}>\r\n                            <ElementoForm titulo=\"Descripcion\">\r\n                                <Form>\r\n                                    {/*style={{ minHeight: 100 }}*/}\r\n                                    {controlDescripcion}\r\n\r\n                                </Form>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={8}>\r\n                            <ElementoForm titulo=\"Biblia *\">\r\n                                <Grid>\r\n                                    <Grid.Row columns='equal'>\r\n\r\n                                        <Grid.Column width={16}>\r\n                                            {controlBiblia}\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column width={8}>\r\n                            <ElementoForm titulo=\"Cliente *\">\r\n                                {controlCliente}\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    {/*<Button positive onClick={() => { console.log(this.state) }}>weeee</Button>*/}\r\n                    <Grid.Row>\r\n                        <Grid.Column width={16}>\r\n                            <Header >Servicios</Header> \r\n                            {this.state.servicios.length==0?<Segment secondary textAlign=\"center\">No hay servicios en este file</Segment>:''}\r\n                            {this.state.servicios.map((elem, index) => {\r\n                                //return this.filaServicio(index);\r\n                                let key = 0;\r\n                                if(this.state.servicios[index])\r\n                                    key = this.state.servicios[index].idServicio;\r\n\r\n                                return this.CuerpoServicio({ index: index, key : key });\r\n                            })}\r\n                            {this.modoVer() ? <div></div> :\r\n                                <Button content='Agregar servicio' icon='plus' floated=\"left\" labelPosition='right' onClick={() => {\r\n                                    var servs = this.state.servicios.slice();\r\n                                    servs.push(this.servicioDefault());\r\n                                    this.setState({ servicios: servs });\r\n                                }} />\r\n                            }\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={16}>\r\n                            <Header >Hospedajes</Header>\r\n\r\n                            {this.state.hospedajes.length===0?<Segment secondary textAlign=\"center\">No hay hospedajes programados en este file</Segment>:''}\r\n                            {this.state.hospedajes.map((elem, index) => {\r\n                                let key = 0;\r\n                                if(this.state.hospedajes[index])\r\n                                    key = this.state.hospedajes[index].idServicio;\r\n                                return this.CuerpoHospedaje({ index: index, key : key });\r\n                            })}\r\n                            {this.modoVer() ? <div></div> :\r\n                                <Button content='Agregar hospedaje' icon='plus' labelPosition='right' onClick={() => {\r\n                                    var transps = this.state.hospedajes.slice();\r\n                                    transps.push(this.hospedajeDefault());\r\n                                    this.setState({ hospedajes: transps });\r\n                                }} />\r\n                            }\r\n\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={16}>\r\n\r\n                            \r\n                            <Header >Transportes</Header>\r\n\r\n                            {this.state.transportes.length==0?<Segment secondary textAlign=\"center\">No hay transportes en este file</Segment>:''}\r\n                            {this.state.transportes.map((elem, index) => {\r\n                                let key = 0;\r\n                                if(this.state.transportes[index])\r\n                                    key = this.state.transportes[index].idServicio;\r\n                                return this.CuerpoTransporte({ index: index, key : key });\r\n                            })}\r\n                            {this.modoVer() ? <div></div> :\r\n                                <Button content='Agregar transporte' icon='plus' labelPosition='right' onClick={() => {\r\n                                    var transps = this.state.transportes.slice();\r\n                                    transps.push(this.transporteDefault());\r\n                                    this.setState({ transportes: transps });\r\n                                }} />\r\n                            }\r\n                            <MensajeTransaccion\r\n                                transaccionEnviada={this.state.transaccionEnviadaCrearFile}\r\n                                responseRecibida={this.state.responseRecibidaCrearFile}\r\n                                rptaTransaccion={this.state.rptaTransaccionCrearFile}\r\n                            //textoExito = \"Puede usar la nueva biblia\"\r\n                            />\r\n\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n                </Grid>\r\n                {this.modoVer() ? <div></div> :\r\n                    <Grid>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Button positive onClick={() => { this.EnviarPostFile() }}>Guardar file</Button>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                }\r\n\r\n            </Segment>\r\n            {/*\r\n            {!this.state.bibliasCargaronExito ? <Message error>Error de conexion: Las biblias no se pueden cargar.</Message> : null}\r\n            {!this.state.clientesCargaronExito ? <Message error>Error de conexion: Los clientes no se pueden cargar.</Message> : null}\r\n            {!this.state.hotelesCargaronExito ? <Message error>Error de conexion: Los hoteles no se pueden cargar.</Message> : null}\r\n            */}\r\n\r\n\r\n            <Container fluid textAlign=\"right\">\r\n            </Container>\r\n\r\n\r\n            <ModalCrearBiblia parentComponent={this} />\r\n\r\n            <ModalCrearEditarProveedor\r\n                parent={this}\r\n                pack=\"modalCrearEditarProveedor\"\r\n                sustantivoTitulo=\"Proveedor Nuevo\"\r\n                elegirTipo\r\n                placeholderNombre=\"Melia\"\r\n                placeholderCorreo=\"ventas@hotelmelia.com\"\r\n                placeholderCorreoAdic=\"contacto.melia@gmail.com\"\r\n                enEnviar={this.enEnviarProovedor}\r\n                enCerrar={this.enCerrarModalProveedor} />\r\n\r\n\r\n            <ModalCrearEditarProveedor \r\n                parent={this} \r\n                pack=\"modalCrearProveedorTransporte\" \r\n                sustantivoTitulo=\"Transportista Nuevo\"\r\n                placeholderNombre=\"Transportista\"\r\n                placeholderCorreo=\"carlos@gmail.com\"\r\n                placeholderCorreoAdic=\"contacto@transportescarlos.com\"\r\n                enEnviar={this.enEnviarProveedorTransporte}\r\n                enCerrar={this.enCerrarModalProveedorTransportes} />\r\n\r\n\r\n            {/*this.ModalCrearBiblia()*/}\r\n            {/*this.ModalCrearCliente()*/}\r\n        </div>\r\n\r\n    }\r\n\r\n    // ------------------------------------------------------------------------- Cargas iniciales\r\n\r\n    cargarFileBase = () => {\r\n        //console.log(\"id:\",this.props)\r\n        Requester.getFile(this.props.idFile,\r\n            rpta => {\r\n                //console.log(\"recibido\",rpta)\r\n                let servis=[];\r\n                let transportes=[];\r\n                let hospedajes=[];\r\n\r\n                if(rpta.cont.servicios)\r\n                    rpta.cont.servicios.map((e,i)=>{\r\n                        if(e.tipoServicio===Constantes.AliasServicios.SERVICIO){\r\n                            servis.push(e);\r\n                        }else if (e.tipoServicio===Constantes.AliasServicios.TRANSPORTE){\r\n                            transportes.push(e);\r\n                        }else if (e.tipoServicio===Constantes.AliasServicios.HOSPEDAJE){\r\n                            hospedajes.push(e);\r\n                        }\r\n                    });\r\n                \r\n                this.setState({\r\n                    idFile: rpta.cont.id,\r\n                    codigo: rpta.cont.codigo,\r\n                    descripcion: rpta.cont.descripcion,\r\n                    idBiblia: rpta.cont.idBiblia,\r\n                    idCliente: rpta.cont.idCliente,\r\n                    nombreBiblia: rpta.cont.nombreBiblia,\r\n                    nombreCliente: rpta.cont.nombreCliente,\r\n                    servicios: servis,\r\n                    transportes: transportes,\r\n                    hospedajes : hospedajes\r\n                });\r\n            },\r\n            rpta => {\r\n\r\n            });\r\n    }\r\n\r\n    cargarClientes = () => {\r\n        Requester.getClientesListaDropdown(rpta => {\r\n            //console.log(rpta);\r\n            var listaOpsCliente = rpta.cont.map(element => { return { value: element.value, text: element.text } });\r\n            this.setState({\r\n                clientesCargaronExito: false,\r\n                clientesCargaron: true,\r\n                opcionesCliente: listaOpsCliente\r\n            })\r\n        }, (rptaError) => {\r\n            this.setState({\r\n                clientesCargaronExito: false,\r\n                clientesCargaron: true\r\n            });\r\n        });\r\n    }\r\n\r\n    cargarBiblias = () => {\r\n        Requester.getBibliasDropdownCompleto((rpta) => {\r\n            var listaBiblias = rpta.cont.map(element => { return { value: element.value, text: element.text } });\r\n            this.setState({ opcionesBiblia: listaBiblias });\r\n            this.setState({\r\n                bibliasCargaronExito: false,\r\n                bibliasCargaron: true\r\n            });\r\n        },\r\n            (rptaError) => {\r\n                //console.log(rptaError);\r\n                this.setState({\r\n                    bibliasCargaronExito: false,\r\n                    bibliasCargaron: true,\r\n                });\r\n            })\r\n    }\r\n\r\n    cargarCiudades = () => {\r\n        Requester.getCiudades((rpta) => {\r\n            this.setState({ opcionesCiudades: rpta.cont });\r\n        },\r\n            (rptaError) => {\r\n                console.error(\"Ciudades no cargadas\");\r\n            })\r\n    }\r\n\r\n    cargarPaises = () => {\r\n        Requester.getPaises((rpta) => {\r\n            this.setState({ opcionesPaises: rpta.cont });\r\n        },\r\n            (rptaError) => {\r\n                console.error(\"Paises no cargadas\");\r\n            })\r\n    }\r\n\r\n    cargarProveedoresNoTransp = () => {\r\n        Requester.getProveedoresMenosTransportes((rpta) => {\r\n            var listaProovs = rpta.cont.map(element => { return { value: element.idProveedor, text: element.nombre } });\r\n            this.setState({\r\n                opcionesProveedores: listaProovs,\r\n                hotelesCargaronExito: true,\r\n                hotelesCargaron: true\r\n            });\r\n        }, (rptaError) => {\r\n            //console.log(rptaError);\r\n            this.setState({\r\n                hotelesCargaronExito: false,\r\n                hotelesCargaron: true\r\n            });\r\n        });\r\n    }\r\n\r\n    cargarHoteles = () => {\r\n        Requester.getProveedoresHoteles((rpta) => {\r\n            var listaProovs = rpta.cont.map(element => { return { value: element.idProveedor, text: element.nombre } });\r\n            console.log(\"recibidooooooooooo: \",listaProovs);\r\n            this.setState({\r\n                opcionesHoteles: listaProovs\r\n            });\r\n        }, (rptaError) => {\r\n        });\r\n    }\r\n\r\n    cargarTransportes = () => {\r\n        Requester.getProveedoresTransportes((rpta) => {\r\n            var listaProovs = rpta.cont.map(element => { return { value: element.idProveedor, text: element.nombre } });\r\n            this.setState({\r\n                opcionesTransportes: listaProovs\r\n            });\r\n        }, (rptaError) => {\r\n        });\r\n    }\r\n\r\n    CuerpoServicio = (props) => {\r\n\r\n        let estiloInputs = {}\r\n        if (this.modoVer())\r\n            estiloInputs = { color: \"black\" };\r\n\r\n        let controlProveedor =\r\n            <InputSearchableDataButton\r\n                loading={!this.state.hotelesCargaron}\r\n                disabled={this.modoVer()}\r\n                placeholder={this.modoVer() ? \"\" : 'Sheraton'}\r\n                datalist={this.state.opcionesProveedores}\r\n                value={this.state.servicios[props.index].idProveedor}\r\n                sideButton={\r\n                    <Button style={{ padding: \"3px 11px\", backgroundColor: \"#00000000\" }} icon onClick={() => {\r\n                        let modal = { ...this.state.modalCrearEditarProveedor, abierto: true };\r\n                        this.setState({ modalCrearEditarProveedor: modal });\r\n                    }}>\r\n                        <Icon name='plus' />\r\n                    </Button>\r\n                }\r\n                onChange={(event, data) => {\r\n                    var servs = this.state.servicios.slice();\r\n                    servs[props.index].idProveedor = data.value;\r\n                    this.setState({ servicios: servs });\r\n                }}\r\n            />\r\n\r\n        if (this.modoVer()) {\r\n            console.log(\"cuerpo: \", this.state.servicios[props.index]);\r\n            controlProveedor = <Input disabled transparent fluid value={this.state.servicios[props.index].proovedor ? this.state.servicios[props.index].proovedor : \"\"} />\r\n        }\r\n\r\n\r\n        return <Segment.Group key={props.key}>\r\n            <Segment.Group horizontal>\r\n                <Segment style={{ backgroundColor: \"#fff5e6\" }}>\r\n                    <Grid columns=\"equal\">\r\n                        <Grid.Row style={{ padding: \"4px 0px\" }}>\r\n                            <Grid.Column verticalAlign=\"middle\">\r\n                                <Header as=\"h3\">Servicio {props.index + 1}</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column style={{ padding: \"0px 8px\" }}>\r\n\r\n                                {this.modoVer() ? <div></div> :\r\n                                    <Button style={{ padding: \"8px 14px\", margin: \"4px 0px\" }} floated=\"right\" color=\"red\" onClick={() => {\r\n                                        var lista = this.state.servicios.slice();\r\n                                        lista.splice(props.index, 1);\r\n                                        this.setState({ servicios: lista });\r\n                                        //console.log(this.state.servicios)\r\n                                    }}>Borrar</Button>\r\n                                }\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Segment>\r\n            </Segment.Group>\r\n            <Segment.Group horizontal style={{ backgroundColor: \"#fffbf6\" }}>\r\n                <CampoServicio titulo=\"Nombre *\" componente={\r\n                    <Input disabled={this.modoVer()} transparent fluid placeholder={this.modoVer() ? \"\" : \"In + city\"}\r\n                        value={this.state.servicios[props.index].nombre ? this.state.servicios[props.index].nombre : \"\"}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].nombre = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }} />\r\n                } />\r\n                <CampoServicio titulo=\"Ciudad de destino\" componente={\r\n                    <div>\r\n                        <Input disabled={this.modoVer()} transparent list={'ciudades' + props.index} placeholder={this.modoVer() ? \"\" : 'Lima'} fluid\r\n                        \r\n                            value={this.state.servicios[props.index].ciudad ? this.state.servicios[props.index].ciudad : \"\"}\r\n                            onChange={(event) => {\r\n                                var servs = this.state.servicios.slice();\r\n                                servs[props.index].ciudad = event.target.value;\r\n                                this.setState({ servicios: servs });\r\n                            }} />\r\n                        <datalist id={'ciudades' + props.index}>\r\n                            {this.state.opcionesCiudades.map(e => <option value={e} />)}\r\n                        </datalist>\r\n                    </div>\r\n                } />\r\n                <CampoServicio titulo=\"Fecha ejecución *\" componente={\r\n                    <DateInput\r\n                        disabled={this.modoVer()}\r\n                        transparent\r\n                        closable\r\n                        fluid\r\n                        dateFormat=\"YYYY-MM-DD\"\r\n                        name=\"fecha\"\r\n                        placeholder={this.modoVer() ? \"-\" : 'aaaa-mm-dd'}\r\n                        value={this.state.servicios[props.index].fecha ? this.state.servicios[props.index].fecha : \"\"}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"fecha\") {\r\n                                var servs = this.state.servicios.slice();\r\n                                servs[props.index].fecha = value;\r\n                                this.setState({ servicios: servs });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />} />\r\n                    \r\n\r\n                    \r\n                <CampoServicio titulo=\"Fecha final \" componente={\r\n                    <DateInput\r\n                        disabled={this.modoVer()}\r\n                        transparent\r\n                        closable\r\n                        fluid\r\n                        dateFormat=\"YYYY-MM-DD\"\r\n                        name=\"fecha\"\r\n                        placeholder={this.modoVer() ? \"-\" : 'aaaa-mm-dd'}\r\n                        value={this.state.servicios[props.index].fechaFinal ? this.state.servicios[props.index].fechaFinal : \"\"}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"fecha\") {\r\n                                var servs = this.state.servicios.slice();\r\n                                servs[props.index].fechaFinal = value;\r\n                                this.setState({ servicios: servs });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />} />\r\n                    \r\n                <CampoServicio titulo=\"Nombre pasajero\" componente={\r\n                    <Input transparent disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Lewis Hamilton'} fluid \r\n                        value={this.state.servicios[props.index].nombrePasajero ? this.state.servicios[props.index].nombrePasajero : \"\"}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].nombrePasajero = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }}></Input>} />\r\n                <CampoServicio titulo=\"Cant. pasajeros *\" componente={\r\n                    <Input type=\"number\" transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : '4'} \r\n                        value={this.state.servicios[props.index].pasajeros ? this.state.servicios[props.index].pasajeros : 0}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].pasajeros = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }}></Input>} />\r\n            </Segment.Group>\r\n            <Segment.Group horizontal style={{ backgroundColor: \"#fffbf6\" }}>\r\n\r\n                <CampoServicio titulo=\"Proveedor\" componente={controlProveedor} />\r\n                \r\n                <CampoServicio titulo=\"Hora\" componente={\r\n                    <TimeInput\r\n                        transparent\r\n                        fluid\r\n                        name=\"horaInicio\"\r\n                        disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : '0:00'}\r\n                        value={this.state.servicios[props.index].horaInicio?this.state.servicios[props.index].horaInicio:\"\"}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"horaInicio\") {\r\n                                var servss = this.state.servicios.slice();\r\n                                servss[props.index].horaInicio = value;\r\n                                this.setState({ servicios: servss });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />\r\n                } />\r\n                \r\n                <CampoServicio titulo=\"Tren\" componente={\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Tren'}\r\n                        value={this.state.servicios[props.index].tren ? this.state.servicios[props.index].tren : \"\"}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].tren = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }}></Input>} />\r\n\r\n                <CampoServicio titulo=\"ALM\" componente={\r\n\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'ALM'} \r\n                        value={this.state.servicios[props.index].alm ? this.state.servicios[props.index].alm  :\"\"}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].alm = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }}></Input>} />\r\n\r\n                <CampoServicio titulo=\"Obs\" componente={\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'OBS'} \r\n                        value={this.state.servicios[props.index].observaciones ? this.state.servicios[props.index].observaciones : \"\"}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].observaciones = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }}></Input>\r\n                } />\r\n            </Segment.Group>\r\n        </Segment.Group>\r\n    }\r\n\r\n    \r\n    CuerpoHospedaje = (props) => {\r\n\r\n        let estiloInputs = {}\r\n        if (this.modoVer())\r\n            estiloInputs = { color: \"black\" };\r\n\r\n        let controlProveedor =\r\n            <InputSearchableDataButton\r\n                loading={!this.state.hotelesCargaron}\r\n                disabled={this.modoVer()}\r\n                placeholder={this.modoVer() ? \"\" : 'Sheraton'}\r\n                datalist={this.state.opcionesHoteles}\r\n                value={this.state.hospedajes[props.index].idProveedor}\r\n                sideButton={\r\n                    <Button style={{ padding: \"3px 11px\", backgroundColor: \"#00000000\" }} icon onClick={() => {\r\n                        let modal = { ...this.state.modalCrearEditarProveedor, abierto: true };\r\n                        this.setState({ modalCrearEditarProveedor: modal });\r\n                    }}>\r\n                        <Icon name='plus' />\r\n                    </Button>\r\n                }\r\n                onChange={(event, data) => {\r\n                    var servs = this.state.hospedajes.slice();\r\n                    servs[props.index].idProveedor = data.value;\r\n                    this.setState({ hospedajes: servs });\r\n                }}\r\n            />\r\n\r\n        if (this.modoVer()) {\r\n            console.log(\"cuerpo: \", this.state.hospedajes[props.index]);\r\n            controlProveedor = <Input disabled transparent fluid value={this.state.hospedajes[props.index].proovedor ? this.state.hospedajes[props.index].proovedor : \"\"} />\r\n        }\r\n\r\n\r\n        return <Segment.Group key={props.key}>\r\n            <Segment.Group horizontal>\r\n                <Segment style={{ backgroundColor: \"#b5dec7\" }}>\r\n                    <Grid columns=\"equal\">\r\n                        <Grid.Row style={{ padding: \"4px 0px\" }}>\r\n                            <Grid.Column verticalAlign=\"middle\">\r\n                                <Header as=\"h3\">Hospedaje {props.index + 1}</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column style={{ padding: \"0px 8px\" }}>\r\n\r\n                                {this.modoVer() ? <div></div> :\r\n                                    <Button style={{ padding: \"8px 14px\", margin: \"4px 0px\" }} floated=\"right\" color=\"red\" onClick={() => {\r\n                                        var lista = this.state.hospedajes.slice();\r\n                                        lista.splice(props.index, 1);\r\n                                        this.setState({ hospedajes: lista });\r\n                                        //console.log(this.state.servicios)\r\n                                    }}>Borrar</Button>\r\n                                }\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Segment>\r\n            </Segment.Group>\r\n            <Segment.Group horizontal style={{ backgroundColor: \"#def0e6\" }}>\r\n                <CampoServicio titulo=\"Nombre *\" componente={\r\n                    <Input disabled={this.modoVer()} transparent fluid placeholder={this.modoVer() ? \"\" : \"In + city\"}\r\n                        value={this.state.hospedajes[props.index].nombre ? this.state.hospedajes[props.index].nombre : \"\"}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.hospedajes.slice();\r\n                            servs[props.index].nombre = event.target.value;\r\n                            this.setState({ hospedajes: servs });\r\n                        }} />\r\n                } />\r\n                \r\n                <CampoServicio titulo=\"Fecha In *\" componente={\r\n                    <DateInput\r\n                        disabled={this.modoVer()}\r\n                        transparent\r\n                        closable\r\n                        fluid\r\n                        dateFormat=\"YYYY-MM-DD\"\r\n                        name=\"fecha\"\r\n                        placeholder={this.modoVer() ? \"-\" : 'aaaa-mm-dd'}\r\n                        value={this.state.hospedajes[props.index].fecha ? this.state.hospedajes[props.index].fecha : \"\"}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"fecha\") {\r\n                                var servs = this.state.hospedajes.slice();\r\n                                servs[props.index].fecha = value;\r\n                                this.setState({ hospedajes: servs });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />} />\r\n                    \r\n\r\n                    \r\n                <CampoServicio titulo=\"Fecha Out *\" componente={\r\n                    <DateInput\r\n                        disabled={this.modoVer()}\r\n                        transparent\r\n                        closable\r\n                        fluid\r\n                        dateFormat=\"YYYY-MM-DD\"\r\n                        name=\"fecha\"\r\n                        placeholder={this.modoVer() ? \"-\" : 'aaaa-mm-dd'}\r\n                        value={this.state.hospedajes[props.index].fechaFinal ? this.state.hospedajes[props.index].fechaFinal : \"\"}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"fecha\") {\r\n                                var servs = this.state.hospedajes.slice();\r\n                                servs[props.index].fechaFinal = value;\r\n                                this.setState({ hospedajes: servs });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />} />\r\n                    \r\n                <CampoServicio titulo=\"Nombre pasajero\" componente={\r\n                    <Input transparent disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Lewis Hamilton'} fluid \r\n                        value={this.state.hospedajes[props.index].nombrePasajero ? this.state.hospedajes[props.index].nombrePasajero : \"\"}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.hospedajes.slice();\r\n                            servs[props.index].nombrePasajero = event.target.value;\r\n                            this.setState({ hospedajes: servs });\r\n                        }}></Input>} />\r\n                <CampoServicio titulo=\"Cant. pasajeros *\" componente={\r\n                    <Input type=\"number\" transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : '4'} \r\n                        value={this.state.hospedajes[props.index].pasajeros ? this.state.hospedajes[props.index].pasajeros : 0}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.hospedajes.slice();\r\n                            servs[props.index].pasajeros = event.target.value;\r\n                            this.setState({ hospedajes: servs });\r\n                        }}></Input>} />\r\n            </Segment.Group>\r\n            <Segment.Group horizontal style={{ backgroundColor: \"#def0e6\" }}>\r\n\r\n                <CampoServicio titulo=\"Hotel\" componente={controlProveedor} />\r\n                \r\n                <CampoServicio titulo=\"Hora entrada\" componente={\r\n                    <TimeInput\r\n                        transparent\r\n                        fluid\r\n                        name=\"horaInicio\"\r\n                        disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : '0:00'}\r\n                        value={this.state.hospedajes[props.index].horaInicio?this.state.hospedajes[props.index].horaInicio:\"\"}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"horaInicio\") {\r\n                                var servss = this.state.hospedajes.slice();\r\n                                servss[props.index].horaInicio = value;\r\n                                this.setState({ hospedajes: servss });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />\r\n                } />\r\n\r\n                \r\n                <CampoServicio titulo=\"Hora salida\" componente={\r\n                    <TimeInput\r\n                        transparent\r\n                        fluid\r\n                        name=\"horaFin\"\r\n                        disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : '0:00'}\r\n                        value={this.state.hospedajes[props.index].horaFin?this.state.hospedajes[props.index].horaFin:\"\"}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"horaFin\") {\r\n                                var servss = this.state.hospedajes.slice();\r\n                                servss[props.index].horaFin = value;\r\n                                this.setState({ hospedajes: servss });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />\r\n                } />\r\n                    \r\n                <CampoServicio titulo=\"Obs\" componente={\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'OBS'} \r\n                        value={this.state.hospedajes[props.index].observaciones ? this.state.hospedajes[props.index].observaciones : \"\"}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.hospedajes.slice();\r\n                            servs[props.index].observaciones = event.target.value;\r\n                            this.setState({ hospedajes: servs });\r\n                        }}></Input>\r\n                } />\r\n            </Segment.Group>\r\n        </Segment.Group>\r\n    }\r\n\r\n\r\n\r\n    CuerpoTransporte = (props) => {\r\n\r\n        let controlProveedorTransporte =\r\n            <InputSearchableDataButton\r\n                //loading={!this.state.hotelesCargaron}\r\n                disabled={this.modoVer()}\r\n                placeholder={this.modoVer() ? \"\" : 'Transp. Manuel'}\r\n                datalist={this.state.opcionesTransportes}\r\n                value={this.state.transportes[props.index].idProveedor}\r\n                sideButton={\r\n                    <Button style={{ padding: \"3px 11px\", backgroundColor: \"#00000000\" }} icon onClick={() => {\r\n                        let modal = { ...this.state.modalCrearProveedorTransporte, abierto: true };\r\n                        this.setState({ modalCrearProveedorTransporte: modal });\r\n                    }}>\r\n                        <Icon name='plus' />\r\n                    </Button>\r\n                }\r\n                onChange={(event, data) => {\r\n                    var transps = this.state.transportes.slice();\r\n                    transps[props.index].idProveedor = data.value;\r\n                    this.setState({ transportes: transps });\r\n                }}\r\n            />\r\n        if (this.modoVer()) {\r\n            controlProveedorTransporte = <Input disabled transparent fluid value={this.state.transportes[props.index].proovedor ? this.state.transportes[props.index].proovedor : \"\"} />\r\n        }\r\n\r\n\r\n        return <Segment.Group key={props.key}>\r\n            <Segment.Group horizontal>\r\n                <Segment style={{ backgroundColor: \"#ccebff\" }}>\r\n                    <Grid columns=\"equal\">\r\n                        <Grid.Row style={{ padding: \"4px 0px\" }}>\r\n                            <Grid.Column verticalAlign=\"middle\">\r\n                                <Header as=\"h3\">Transporte {props.index + 1}</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column style={{ padding: \"0px 8px\" }}>\r\n                                {this.modoVer() ? <div></div> :\r\n                                    <Button style={{ padding: \"8px 14px\", margin: \"4px 0px\" }} floated=\"right\" color=\"red\" onClick={() => {\r\n                                        var lista = this.state.transportes.slice();\r\n                                        lista.splice(props.index, 1);\r\n                                        this.setState({ transportes: lista });\r\n                                    }}>Borrar</Button>\r\n                                }\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Segment>\r\n            </Segment.Group>\r\n            <Segment.Group horizontal style={{ backgroundColor: \"#e6f5ff\" }}>\r\n                <CampoServicio titulo=\"Nombre *\" componente={\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'APTO / Four points'}\r\n                        value={this.state.transportes[props.index].nombre ? this.state.transportes[props.index].nombre : \"\"}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].nombre = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n                <CampoServicio titulo=\"Ciudad de destino\" componente={\r\n                    <div>\r\n                        <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Ciudad'}\r\n                            value={this.state.transportes[props.index].ciudad ? this.state.transportes[props.index].ciudad : \"\"}\r\n                            onChange={(event) => {\r\n                                var trans = this.state.transportes.slice();\r\n                                trans[props.index].ciudad = event.target.value;\r\n                                this.setState({ transportes: trans });\r\n                            }}></Input>\r\n                    </div>\r\n                } />\r\n                <CampoServicio titulo=\"Fecha ejecucion *\" componente={\r\n                    <DateInput\r\n                        transparent\r\n                        fluid\r\n                        closable\r\n                        name=\"fecha\"\r\n                        dateFormat=\"YYYY-MM-DD\"\r\n                        disabled={this.modoVer()}\r\n                        placeholder={this.modoVer() ? \"\" : 'aaaa-mm-dd'}\r\n                        value={this.state.transportes[props.index].fecha ? this.state.transportes[props.index].fecha : \"\"}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"fecha\") {\r\n                                var transs = this.state.transportes.slice();\r\n                                transs[props.index].fecha = value;\r\n                                this.setState({ transportes: transs });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />} />\r\n\r\n                <CampoServicio titulo=\"Nombre pasajero\" componente={\r\n\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Steven Gerard'}\r\n                        value={this.state.transportes[props.index].nombrePasajero ? this.state.transportes[props.index].nombrePasajero : \"\"}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].nombrePasajero = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n                <CampoServicio titulo=\"Cant. pasajeros *\" componente={\r\n                    <Input type=\"number\" transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : '4'}\r\n                        value={this.state.transportes[props.index].pasajeros ? this.state.transportes[props.index].pasajeros : 0}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].pasajeros = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>} />\r\n            </Segment.Group>\r\n            <Segment.Group horizontal style={{ backgroundColor: \"#e6f5ff\" }}>\r\n                <CampoServicio titulo=\"Proveedor de Transporte\" componente={controlProveedorTransporte\r\n\r\n                    /*\r\n                    <div>\r\n                        <Input icon=\"lightning\" iconPosition=\"left\" list={'transportes' + props.index} transparent fluid\r\n                            disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Transportista'}\r\n                            value={this.state.transportes[props.index].proveedor}\r\n                            onChange={(event) => {\r\n                                var trans = this.state.transportes.slice();\r\n                                trans[props.index].proveedor = event.target.value;\r\n                                this.setState({ transportes: trans });\r\n                            }}></Input>\r\n                        <datalist id={'transportes' + props.index}>\r\n                            {this.state.opcionesTransportes.map(e => <option value={e.text} />)}\r\n                        </datalist>\r\n                    </div>\r\n\r\n\r\n\r\n                        */} />\r\n                <CampoServicio titulo=\"Hora recojo\" componente={\r\n                    <TimeInput\r\n                        transparent\r\n                        fluid\r\n                        name=\"hora\"\r\n                        disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : '0:00'}\r\n                        value={this.state.transportes[props.index].horaInicio?this.state.transportes[props.index].horaInicio:\"\"}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"hora\") {\r\n                                var transs = this.state.transportes.slice();\r\n                                transs[props.index].horaInicio = value;\r\n                                this.setState({ transportes: transs });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />\r\n                } />\r\n                <CampoServicio titulo=\"Hora salida\" componente={\r\n                    <TimeInput\r\n                        transparent\r\n                        fluid\r\n                        name=\"hora\"\r\n                        disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : '0:00'}\r\n                        value={this.state.transportes[props.index].horaFin?this.state.transportes[props.index].horaFin:\"\"}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"hora\") {\r\n                                var transs = this.state.transportes.slice();\r\n                                transs[props.index].horaFin = value;\r\n                                this.setState({ transportes: transs });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />\r\n                } />\r\n                <CampoServicio titulo=\"Vuelo\" componente={\r\n                    <Input transparent fluid\r\n                        value={this.state.transportes[props.index].vuelo ? this.state.transportes[props.index].vuelo:\"\"}\r\n                        disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Vuelo'}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].vuelo = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n                <CampoServicio titulo=\"V/R\" componente={\r\n\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'V/R'}\r\n                        value={this.state.transportes[props.index].vr ? this.state.transportes[props.index].vr : \"\"}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].vr = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n                <CampoServicio titulo=\"TC\" componente={\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'TC'}\r\n                        value={this.state.transportes[props.index].tc ? this.state.transportes[props.index].tc : \"\"}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].tc = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n                <CampoServicio titulo=\"Obs\" componente={\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'OBS'}\r\n                        value={this.state.transportes[props.index].observaciones ? this.state.transportes[props.index].observaciones : \"\"}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].observaciones = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n            </Segment.Group>\r\n        </Segment.Group>\r\n    }\r\n\r\n    EnviarPostFile = () => {\r\n\r\n        let listaTotal = [];\r\n        listaTotal.push(...this.state.servicios);\r\n        listaTotal.push(...this.state.transportes);\r\n        listaTotal.push(...this.state.hospedajes);\r\n\r\n        let obj = {\r\n            id: this.state.idFile,\r\n            idBiblia: this.state.idBiblia,\r\n            idCliente: this.state.idCliente,\r\n            codigo: this.state.codigo,\r\n            descripcion: this.state.descripcion,\r\n            servicios : listaTotal\r\n            //servicios: this.state.servicios,\r\n            //transportes: this.state.transportes\r\n        };\r\n\r\n        this.setState({ transaccionEnviadaCrearFile: true , responseRecibidaCrearFile: false});\r\n        console.log(\"file a enviar: \", obj)\r\n        //console.log(\"TRANSPORTESSS: \", obj.transportes)\r\n        let func = Requester.postFile;\r\n\r\n        if (this.modoEditar())\r\n            func = Requester.postEditarFile;\r\n\r\n        func(\r\n            obj,\r\n            (rpta) => {\r\n                //console.log(\"exitooo\")\r\n                this.setState({\r\n                    responseRecibidaCrearFile: true,\r\n                    rptaTransaccionCrearFile: rpta,\r\n                    transaccionEnviadaCrearFile: false\r\n                });\r\n            },\r\n            (rpta) => {\r\n                console.log(\"RPTA de error!\", rpta);\r\n                this.setState({\r\n                    responseRecibidaCrearFile: true,\r\n                    rptaTransaccionCrearFile: rpta,\r\n                    transaccionEnviadaCrearFile: false\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    EnviarPostCliente = (camposModalCliente) => {\r\n\r\n        var newState = { ...this.state.modalCliente };\r\n        newState.transaccionEnviada = true;\r\n        this.setState({ modalCliente: newState });\r\n\r\n        Requester.postCliente(this.state.camposModalCliente, (rpta) => {\r\n            var newState = { ...this.state.modalCliente };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rpta;\r\n            this.cargarClientes();\r\n            this.setState({ modalCliente: newState });\r\n        }, (rptaError) => {\r\n            var newState = { ...this.state.modalCliente };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rptaError;\r\n            this.setState({ modalCliente: newState });\r\n        });\r\n\r\n    }\r\n\r\n    // ------------------------------------------------------------------------- Modal clientes\r\n    /*\r\n        EnviarPostBiblia = () => {\r\n    \r\n            var newStateModalBiblia = { ...this.state.modalBiblia };\r\n            newStateModalBiblia.transaccionEnviada = true;\r\n            this.setState({ modalBiblias: newStateModalBiblia });\r\n            console.log(this.state.camposModalBiblia);\r\n    \r\n            Requester.postBiblia(this.state.camposModalBiblia, (rpta) => {\r\n                var newState = { ...this.state.modalBiblia };\r\n                newState.responseRecibida = true;\r\n                newState.rptaTransaccion = rpta;\r\n                this.cargarBiblias();\r\n                this.setState({ modalBiblia: newState });\r\n            }, (rptaError) => {\r\n                console.log(\"error!\")\r\n                console.log(rptaError)\r\n                console.log(this.state.modalBiblia);\r\n                var newState = { ...this.state.modalBiblia };\r\n                newState.responseRecibida = true;\r\n                newState.rptaTransaccion = rptaError;\r\n                console.log(this.state.modalBiblia);\r\n                this.setState({ modalBiblia: newState });\r\n            });\r\n        }\r\n    */\r\n\r\n\r\n    EnviarPostBiblia = () => {\r\n\r\n        var newStateModalBiblia = { ...this.state.modalBiblia };\r\n        newStateModalBiblia.transaccionEnviada = true;\r\n        this.setState({ modalBiblia: newStateModalBiblia });\r\n\r\n        Requester.postBiblia(this.state.modalBiblia.campos, (rpta) => {\r\n            var newState = { ...this.state.modalBiblia };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rpta;\r\n            this.cargarBiblias();\r\n            this.setState({ modalBiblia: newState });\r\n        }, (rptaError) => {\r\n            var newState = { ...this.state.modalBiblia };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rptaError;\r\n            //console.log(this.state.modalBiblia);\r\n            this.setState({ modalBiblia: newState });\r\n        });\r\n    }\r\n\r\n    // ------------------------------------------------------------------------- Modal proveedores todos\r\n\r\n\r\n    abrirModalProveedor = () => {\r\n        var obj = { ...this.state.modalCrearEditarProveedor };\r\n        obj.modo = \"creacion\";\r\n        obj.abierto = true;\r\n        this.setState({ modalCrearEditarProveedor: obj });\r\n    }\r\n\r\n\r\n    enEnviarProovedor = () => {\r\n        var obj = { ...this.state.modalCrearEditarProveedor };\r\n        obj.mensaje.enviado = true;\r\n        obj.mensaje.recibido=false;\r\n        this.setState({ modalCrearEditarProveedor: obj });\r\n\r\n        Requester.postProveedor(\r\n            this.state.modalCrearEditarProveedor.campos.tipo,\r\n            this.state.modalCrearEditarProveedor.campos.nombre,\r\n            this.state.modalCrearEditarProveedor.campos.correo,\r\n            this.state.modalCrearEditarProveedor.campos.num,\r\n            this.state.modalCrearEditarProveedor.campos.numAdic,\r\n            this.state.modalCrearEditarProveedor.campos.correoAdic,\r\n            this.state.modalCrearEditarProveedor.campos.ciudad,\r\n            (rpta) => {\r\n                var obj = { ...this.state.modalCrearEditarProveedor };\r\n                obj.mensaje.recibido = true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({ modalCrearEditarProveedor: obj });\r\n                this.cargarProveedoresNoTransp();\r\n                //this.cargarProovs();\r\n            },\r\n            (rptaError) => {\r\n                console.log(\"err!\");\r\n                var obj = { ...this.state.modalCrearEditarProveedor };\r\n                obj.mensaje.recibido = true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({ modalCrearEditarProveedor: obj });\r\n            })\r\n    }\r\n\r\n\r\n    enCerrarModalProveedor = () => {\r\n        var obj = { ...this.state.modalCrearEditarProveedor };\r\n        obj.abierto = false;\r\n        obj.mensaje.recibido = false;\r\n        obj.mensaje.enviado = false;\r\n        obj.mensaje.respuesta = null;\r\n\r\n        obj.campos.id = '';\r\n        obj.campos.nombre = '';\r\n        obj.campos.correo = '';\r\n        obj.campos.correoAdic = '';\r\n        obj.campos.num = '';\r\n        obj.campos.numAdic = '';\r\n        obj.campos.ciudad = '';\r\n        obj.campos.tipo ='';\r\n        \r\n        this.setState({modalCrearEditarProveedor:obj});\r\n\r\n/*\r\n        if (this.state.modalCrearEditarProveedor.modo === \"edicion\") {\r\n            var obj = { ...this.state.modalCrearEditarProveedor };\r\n            obj.campos.tipo = '';\r\n            obj.campos.id = '';\r\n            obj.campos.nombre = '';\r\n            obj.campos.correo = '';\r\n            obj.campos.correoAdic = '';\r\n            obj.campos.num = '';\r\n            obj.campos.numAdic = '';\r\n            obj.campos.ciudad = '';\r\n            this.setState({ modalCrearEditar: obj });\r\n        }*/\r\n        //this.resetearCamposModalProveedor();\r\n    }\r\n    /*\r\n    resetearCamposModalProveedor =() => {\r\n        var obj = { ...this.state.modalCrearEditarProveedor };\r\n        obj.campos.id = '';\r\n        obj.campos.nombre = '';\r\n        obj.campos.correo = '';\r\n        obj.campos.correoAdic = '';\r\n        obj.campos.num = '';\r\n        obj.campos.numAdic = '';\r\n        obj.campos.ciudad = '';\r\n        obj.campos.tipo ='';\r\n        this.setState({ modalCrearEditarProveedor: obj });\r\n    }*/\r\n\r\n    // ------------------------------------------------------------------------- Modal proveedores transportes\r\n\r\n    abrirModalProveedorTransporte = () => {\r\n        var obj = { ...this.state.modalCrearProveedorTransporte };\r\n        obj.modo = \"creacion\";\r\n        obj.abierto = true;\r\n        this.setState({ modalCrearProveedorTransporte: obj });\r\n    }\r\n\r\n    enEnviarProveedorTransporte = () => {\r\n\r\n        var obj = { ...this.state.modalCrearProveedorTransporte };\r\n        obj.mensaje.enviado = true;\r\n        obj.mensaje.recibido=false;\r\n        this.setState({ modalCrearProveedorTransporte: obj });\r\n\r\n        Requester.postProvTransporte(\r\n            this.state.modalCrearProveedorTransporte.campos.nombre,\r\n            this.state.modalCrearProveedorTransporte.campos.correo,\r\n            this.state.modalCrearProveedorTransporte.campos.num,\r\n            this.state.modalCrearProveedorTransporte.campos.numAdic,\r\n            this.state.modalCrearProveedorTransporte.campos.correoAdic,\r\n            this.state.modalCrearProveedorTransporte.campos.ciudad,\r\n            (rpta) => {\r\n                console.log(this.state.modalCrearProveedorTransporte.campos);\r\n                console.log(\"success!\");\r\n                console.log(rpta);\r\n                var obj = { ...this.state.modalCrearProveedorTransporte };\r\n                obj.mensaje.recibido = true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({ modalCrearProveedorTransporte: obj });\r\n                //this.resetearCamposModalProveedorTransportes();\r\n                this.cargarTransportes();\r\n            },\r\n            (rptaError) => {\r\n                console.log(\"err!\");\r\n                var obj = { ...this.state.modalCrearProveedorTransporte };\r\n                obj.mensaje.recibido = true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({ modalCrearProveedorTransporte: obj });\r\n            })\r\n    }\r\n\r\n\r\n    resetearCamposModalProveedorTransportes =() => {\r\n        var obj = { ...this.state.modalCrearProveedorTransporte };\r\n        obj.campos.id = '';\r\n        obj.campos.nombre = '';\r\n        obj.campos.correo = '';\r\n        obj.campos.correoAdic = '';\r\n        obj.campos.num = '';\r\n        obj.campos.numAdic = '';\r\n        obj.campos.ciudad = '';\r\n        this.setState({ modalCrearProveedorTransporte: obj });\r\n    }\r\n\r\n    enCerrarModalProveedorTransportes = () => {\r\n        var obj = { ...this.state.modalCrearProveedorTransporte };\r\n        obj.mensaje.recibido = false;\r\n        obj.abierto=false;\r\n        obj.mensaje.enviado = false;\r\n        obj.mensaje.respuesta = null;\r\n\r\n        obj.campos.id = '';\r\n        obj.campos.nombre = '';\r\n        obj.campos.correo = '';\r\n        obj.campos.correoAdic = '';\r\n        obj.campos.num = '';\r\n        obj.campos.numAdic = '';\r\n        obj.campos.ciudad = '';\r\n\r\n        this.setState({ modalCrearProveedorTransporte: obj });\r\n        //if (this.state.modalCrearProveedorTransporte.modo === \"edicion\") {\r\n            //this.resetearCamposModalProveedorTransportes();\r\n            /*\r\n            var obj = { ...this.state.modalCrearProveedorTransporte };\r\n            obj.campos.id = '';\r\n            obj.campos.nombre = '';\r\n            obj.campos.correo = '';\r\n            obj.campos.correoAdic = '';\r\n            obj.campos.num = '';\r\n            obj.campos.numAdic = '';\r\n            obj.campos.ciudad = '';\r\n            this.setState({ modalCrearProveedorTransporte: obj });*/\r\n        //}\r\n    }\r\n\r\n}\r\n\r\nexport default CrearFile;","import React from 'react';\r\nimport {Component} from 'react';\r\nimport LogoYllari from '../../assets/logo_yllari.png'\r\n\r\nimport Huascaran from '../../assets/vistas/huascaran.png'\r\nimport Machupichu from '../../assets/vistas/machupichu.png'\r\nimport Costaverde from '../../assets/vistas/costaverdehd.png'\r\n\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nclass Inicio extends Component{\r\n\r\n    componentDidMount(){\r\n        \r\n        console.log(this.props)\r\n    }\r\n    \r\n    render(){\r\n        //return <div><h3>Pagina web en desarrollo :3</h3></div>\r\n        \r\n        return <div>\r\n            <br/>\r\n            <br/>\r\n            <Carousel showThumbs={false} showArrows={true} \r\n            autoPlay\r\n            stopOnHover\r\n            infiniteLoop\r\n            interval={8000}\r\n            emulateTouch={true}>\r\n            <div>\r\n                <img src={Huascaran} />\r\n            </div>\r\n            <div>\r\n                <img src={Machupichu} />\r\n            </div>\r\n            <div>\r\n                <img src={Costaverde} />\r\n            </div>\r\n        </Carousel><br/><br/>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Inicio;","import React from 'react';\r\nimport {Component} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { Label, Button, Container, Header, Segment} from 'semantic-ui-react';\r\nimport ReactTable from \"react-table\";\r\nimport 'react-table/react-table.css'\r\nimport TablaBuscador from '../TablaBuscador/TablaBuscador';\r\nimport ModalCrearServicio from './ModalCrearServicio';\r\nimport CONSTANTES_GLOBALES from '../../common/Constantes';\r\nimport Requester from '../../common/Services/Requester';\r\nimport moment from 'moment'\r\nimport momentTz from 'moment-timezone'\r\n\r\nclass VerServicios extends Component{\r\n\r\n    state={\r\n        modalServicio:{\r\n            abierto:false,\r\n            transaccionEnviada:false,\r\n            responseRecibida:false,\r\n            rptaTransaccion:null,\r\n            tipo:CONSTANTES_GLOBALES.TiposServicios[0].value,\r\n\r\n            campos:{\r\n                fecha:\"\",\r\n                ciudad:\"\",\r\n                nombre:'',\r\n                file:\"\",\r\n                hotel:\"\",\r\n                pasajeros:\"\",\r\n                nombrePasajero:\"\",\r\n                alm:\"\",\r\n                observaciones:\"\",\r\n                proveedor:\"\",\r\n                tren:\"\",\r\n                horaRecojo:\"\",\r\n                horaSalida:\"\",\r\n                transporte:\"\",\r\n\r\n            }\r\n        },\r\n\r\n        serviciosServ:[\r\n            /*\r\n            {\r\n                idServicio=1,\r\n                nombre: \"City tour\",\r\n                file: \"02-495\",\r\n                fecha:\"02-04-2017\", \r\n                ciudad:\"lima\",\r\n                hotel:\"melia\" ,\r\n                cantPasajeros: \"2\", \r\n                pasajero: \"Ctm\",\r\n            }*/\r\n        ] ,\r\n        \r\n        serviciosTransp:[\r\n            /*\r\n            {\r\n                nombre: \"City tour\",\r\n                file: \"02-495\",\r\n                fecha:\"02-04-2017\", \r\n                ciudad:\"lima\", \r\n                horaRecojo:\"11:40\", \r\n                horaSalida:\"11:40:01\", \r\n                cantPasajeros: \"3\", \r\n                pasajero: \"Ctm\",\r\n                transportista: \"Javi\" \r\n            }*/\r\n        ],\r\n        serviciosHospedajes:[\r\n        ],\r\n         queryForzadoServs:\"\",\r\n         queryForzadoTransps:\"\",\r\n         queryForzadoHospedajes:\"\"\r\n     }\r\n\r\n\r\n    render(){\r\n       \r\n        \r\n        const cols = [\r\n        {\r\n            Header: 'Nombre', accessor: 'nombre' , Cell: props => props.value ? props.value:\"-\" \r\n        },\r\n        {\r\n            Header: 'File', accessor: 'file', Cell: props => props.value ? props.value:\"-\" \r\n        },\r\n        {\r\n            Header: 'Fecha', accessor: 'fecha', Cell: props => props.value ? props.value:\"-\" \r\n        }, \r\n        {\r\n            Header: 'Ciudad', accessor: 'ciudad', Cell: props => props.value ? props.value:\"-\" \r\n        }, \r\n        {\r\n            Header: 'Hora recojo', accessor: 'horaRecojo', Cell: props => props.value ? props.value:\"-\" \r\n        },\r\n        {\r\n            Header: 'Cant. pasajeros', accessor: 'cantPasajeros', Cell: props => props.value ? props.value:\"-\" \r\n        }, \r\n        {\r\n            Header: 'Pasajero', accessor: 'pasajero', Cell: props => props.value ? props.value:\"-\" \r\n        }, \r\n        {\r\n            Header: 'Transportista', accessor: 'transportista', Cell: props => props.value ? props.value:\"-\" \r\n        }, \r\n        {\r\n            Header: 'Accion',\r\n            Cell: props => <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"/>\r\n                {/*<Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>*/}\r\n            </Container>\r\n        }, \r\n    ]\r\n    \r\n        return(<div>\r\n                <Header size=\"large\">Lista de servicios</Header> \r\n                {/*\r\n                <Button primary onClick={ ()=>{\r\n                    var obj = {...this.state.modalServicio};\r\n                    obj.abierto=true;\r\n                    this.setState({modalServicio:obj});\r\n                } }>Nuevo Servicio</Button>\r\n            */}\r\n            <Header size=\"small\">Servicios al día de...</Header>\r\n            <Button onClick={()=>{\r\n                    let fecha = moment().tz('America/Lima').format('Y-MM-DD')\r\n                    this.setState({queryForzadoServs:fecha,queryForzadoTransps:fecha,queryForzadoHospedajes:fecha})\r\n                }}>Hoy</Button>\r\n            <Button onClick={()=>{\r\n                    let fecha = moment().tz('America/Lima').add(1,'days').format('Y-MM-DD')\r\n                    this.setState({queryForzadoServs:fecha,queryForzadoTransps:fecha,queryForzadoHospedajes:fecha})\r\n                }}>Mañana</Button>\r\n            <Button onClick={()=>{\r\n                    this.setState({queryForzadoServs:\"\",queryForzadoTransps:\"\",queryForzadoHospedajes:\"\"})\r\n                }}   secondary>Todos</Button>\r\n                <Header size=\"medium\">Servicios generales programados</Header> \r\n                <Segment>\r\n                    <TablaBuscador \r\n                        queryForzado={this.state.queryForzadoServs} \r\n                        vaciarQueryForzado={this.vaciarQueryForzadoServs}\r\n                        data={this.state.serviciosServ} \r\n                        columns={cols} />\r\n                </Segment>\r\n                <Header size=\"medium\">Servicios de transporte programados</Header> \r\n                <Segment>\r\n                    <TablaBuscador \r\n                        queryForzado={this.state.queryForzadoTransps} \r\n                        vaciarQueryForzado={this.vaciarQueryForzadoTransps}\r\n                        data={this.state.serviciosTransp} columns={cols} />\r\n                </Segment>\r\n                \r\n                <Header size=\"medium\">Hospedajes programados</Header> \r\n                <Segment>\r\n                    <TablaBuscador \r\n                        queryForzado={this.state.queryForzadoHospedajes} \r\n                        vaciarQueryForzado={this.vaciarQueryForzadoHospedajes}\r\n                        data={this.state.serviciosHospedajes} columns={cols} />\r\n                </Segment>\r\n                {/*<ModalCrearServicio parentComp={this}/>*/}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    vaciarQueryForzadoServs = () =>{\r\n        this.setState({queryForzadoServs:''})\r\n    }\r\n    vaciarQueryForzadoTransps = () =>{\r\n        this.setState({queryForzadoTransps:''})\r\n    }\r\n    vaciarQueryForzadoHospedajes = () =>{\r\n        this.setState({queryForzadoHospedajes:''})\r\n    }\r\n\r\n    enviarServicio = () => {\r\n        /*\r\n        Requester.postServicio(\r\n            //this.state.modalServicio.campos.proveedor\r\n        )*/\r\n    }\r\n\r\n    componentDidMount= () =>{\r\n/*\r\n       \r\n                idServicio=1,\r\n                nombre: \"City tour\",\r\n                file: \"02-495\",\r\n                fecha:\"02-04-2017\", \r\n                ciudad:\"lima\",\r\n                hotel:\"melia\" ,\r\n                cantPasajeros: \"2\", \r\n                pasajero: \"Ctm\",\r\n                */\r\n               this.cargarServsGenerales();\r\n        this.cargarServsTransportes();\r\n        this.cargarHospedajes();\r\n    }\r\n\r\n    cargarServsGenerales = () => {\r\n        Requester.getServiciosGeneralesDetalle((rpta)=>{\r\n            var servs = rpta.cont.map((e,i)=>{\r\n                return {\r\n                    idServicio : e.idServicio,\r\n                    nombre : e.nombre,\r\n                    file: e.codigoFile,\r\n                    fecha : e.fecha,\r\n                    ciudad : e.ciudad,\r\n                    hotel : e.hotel,\r\n                    cantPasajeros : e.pasajeros,\r\n                    pasajero : e.nombrePasajero\r\n                };\r\n            });\r\n            this.setState({serviciosServ:servs});\r\n        },(rptaError)=>{\r\n            console.log(\"error!\");\r\n        });\r\n    }\r\n\r\n    cargarServsTransportes = () => {\r\n        \r\n        /*\r\n\r\n                nombre: \"City tour\",\r\n                file: \"02-495\",\r\n                fecha:\"02-04-2017\", \r\n                ciudad:\"lima\", \r\n                horaRecojo:\"11:40\", \r\n                horaSalida:\"11:40:01\", \r\n                cantPasajeros: \"3\", \r\n                pasajero: \"Ctm\",\r\n                transportista: \"Javi\" \r\n        */\r\n        Requester.getServiciosTransporteDetalle((rpta)=>{\r\n            console.log(\"rpta! transportes: \",rpta)\r\n            var servs = rpta.cont.map((e,i)=>{\r\n                return {\r\n                    idServicio : e.idServicio,\r\n                    nombre : e.nombre,\r\n                    file: e.codigoFile,\r\n                    fecha : e.fecha,\r\n                    ciudad : e.ciudad,\r\n                    horaRecojo : e.horaRecojo,\r\n                    cantPasajeros : e.pasajeros,\r\n                    pasajero : e.nombrePasajero,\r\n                    transportista : e.transporte\r\n                };\r\n            });\r\n            this.setState({serviciosTransp:servs});\r\n        },(rptaError)=>{\r\n            console.log(\"error!\");\r\n        });\r\n    }\r\n\r\n    \r\n    cargarHospedajes = () => {\r\n        Requester.getServiciosHospedaje((rpta)=>{\r\n            console.log(\"rpta! hospedajes: \",rpta)\r\n            var servs = rpta.cont.map((e,i)=>{\r\n                return {\r\n                    idServicio : e.idServicio,\r\n                    nombre : e.nombre,\r\n                    file: e.codigoFile,\r\n                    fecha : e.fecha,\r\n                    ciudad : e.ciudad,\r\n                    horaRecojo : e.horaRecojo,\r\n                    cantPasajeros : e.pasajeros,\r\n                    pasajero : e.nombrePasajero,\r\n                    transportista : e.transporte\r\n                };\r\n            });\r\n            this.setState({serviciosHospedajes:servs});\r\n        },(rptaError)=>{\r\n            console.log(\"error!\");\r\n        });\r\n    }\r\n }\r\n\r\nexport default VerServicios;","import React from 'react';\r\nimport {Component} from 'react';\r\nimport { Form, Dropdown, Grid, Input } from 'semantic-ui-react';\r\nimport Constantes, { RptaTrx } from '../../../common/Constantes';\r\nimport ElementoForm from '../../../components/ElementoForm/ElementoForm';\r\nimport { DateInput, TimeInput } from 'semantic-ui-calendar-react';\r\n\r\nclass CrearServicio extends Component{\r\n    state={\r\n        tipo: Constantes.TiposServicios[0].value,\r\n        fecha:\"\",\r\n        ciudad:\"\",\r\n        nombre:null,\r\n        file:null,\r\n        hotel:null,\r\n        pasajeros:null,\r\n        nombrePasajero:null,\r\n        alm:null,\r\n        observaciones:null,\r\n        proveedor:null,\r\n        tren:null,\r\n        horaRecojo:null,\r\n        horaSalida:null,\r\n        transporte:null\r\n    }\r\n\r\n    render(){\r\n        if(this.state.tipo==Constantes.TiposServicios[0].value)\r\n            return this.camposServ();\r\n        else \r\n            return this.camposTransp();\r\n    }\r\n\r\n    camposTransp=()=>{\r\n        return <div>\r\n            <Form>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Tipo de servicio\">\r\n                                <Dropdown\r\n                                    placeholder='Tipo'\r\n                                    fluid\r\n                                    search\r\n                                    selection\r\n                                    value={this.state.tipo}\r\n                                    options={Constantes.TiposServicios}\r\n                                    onChange = {(event,data)=>{\r\n                                        this.setState({tipo:data.value});\r\n                                        }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"File\">\r\n                                <Dropdown\r\n                                    placeholder='File'\r\n                                    fluid\r\n                                    search\r\n                                    selection\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Fecha\">\r\n                                <DateInput\r\n                                    fluid\r\n                                    name=\"fecha\"\r\n                                    placeholder=\"10-02-2019\"\r\n                                    value={this.state.fecha}\r\n                                    iconPosition=\"left\"\r\n                                    onChange = { (event, {name, value} )=>{\r\n                                            if(name===\"fecha\"){\r\n                                                this.setState({fecha:value});\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Ciudad\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"Ciudad\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Nombre\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"City tour\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Observaciones\">\r\n                                <Input \r\n                                    fluid\r\n                                    value={this.state.ciudad} \r\n                                    placeholder=\"Observaciones y detalles sobre el servicio\"\r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Hora recojo\">\r\n                            <TimeInput\r\n                                    fluid\r\n                                    name=\"horaRecojo\"\r\n                                    placeholder=\"16:30\"\r\n                                    value={this.state.horaRecojo}\r\n                                    iconPosition=\"left\"\r\n                                    onChange = { (event, {name, value} )=>{\r\n                                            if(name===\"horaRecojo\"){\r\n                                                this.setState({horaRecojo:value});\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Hora salida\">\r\n                                <TimeInput\r\n                                    fluid\r\n                                    name=\"horaSalida\"\r\n                                    placeholder=\"17:30\"\r\n                                    value={this.state.horaSalida}\r\n                                    iconPosition=\"left\"\r\n                                    onChange = { (event, {name, value} )=>{\r\n                                            if(name===\"horaSalida\"){\r\n                                                this.setState({horaSalida:value});\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"6\">\r\n                            <ElementoForm titulo=\"Nombre pasajero\">\r\n                                <Input \r\n                                    fluid\r\n                                    value={this.state.nombrePasajero} \r\n                                    placeholder=\"Christian Cueva\"\r\n                                    onChange={(event)=>{this.setState({nombrePasajero:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Vuelo\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"Vuelo\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>  \r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Cantidad pasajeros\">\r\n                                <Input\r\n                                    fluid\r\n                                    placeholder={0}\r\n                                    type=\"number\"\r\n                                    value={this.state.pasajeros} \r\n                                    onChange={(event)=>{this.setState({pasajeros:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"6\">\r\n                            <ElementoForm titulo=\"V/R\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"V/R\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"TC\">\r\n                                <Input \r\n                                    placeholder=\"Tc\"\r\n                                    fluid\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Transporte\">\r\n                                <Input \r\n                                    icon='lightning'    \r\n                                    iconPosition='left'\r\n                                    fluid\r\n                                    placeholder=\"Carlos\"\r\n                                    list=\"transportes\"\r\n                                    value={this.state.transporte} \r\n                                    onChange={(event)=>{this.setState({transporte:event.target.value})}}/>\r\n                                <datalist id='transportes'>\r\n                                    <option value='Transportes Juan' />\r\n                                    <option value='Matias' />\r\n                                </datalist>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        {/*\r\n                        <Grid.Column width=\"6\">\r\n                            <ElementoForm titulo=\"Proveedor\">\r\n                                <Input \r\n                                    fluid\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>*/}\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Form>\r\n        </div>\r\n    }\r\n\r\n    camposServ = () => {\r\n        return <div>\r\n            <Form>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Tipo de servicio\">\r\n                                <Dropdown\r\n                                    placeholder='Tipo'\r\n                                    fluid\r\n                                    search\r\n                                    selection\r\n                                    options={Constantes.TiposServicios}\r\n                                    onChange = {(event,data)=>{\r\n                                        this.setState({tipo:data.value});\r\n                                        }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"File\">\r\n                                <Dropdown\r\n                                    placeholder='File'\r\n                                    fluid\r\n                                    search\r\n                                    selection\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Fecha\">\r\n                                <DateInput\r\n                                    fluid\r\n                                    name=\"fecha\"\r\n                                    placeholder=\"10-02-2019\"\r\n                                    value={this.state.fecha}\r\n                                    iconPosition=\"left\"\r\n                                    onChange = { (event, {name, value} )=>{\r\n                                            if(name===\"fecha\"){\r\n                                                this.setState({fecha:value});\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Ciudad\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"Ciudad\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Nombre\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"City tour\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Observaciones\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"Observaciones y detalles sobre el servicio\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Hotel\">\r\n                                <Input \r\n                                    icon='lightning'    \r\n                                    iconPosition='left'\r\n                                    list=\"hoteles\"\r\n                                    fluid\r\n                                    placeholder=\"Hotel Sheraton\"\r\n                                    value={this.state.hotel} \r\n                                    onChange={(event)=>{this.setState({hotel:event.target.value})}}/>\r\n                                <datalist id='hoteles'>\r\n                                    <option value='Sheraton' />\r\n                                    <option value='Hotel melia' />\r\n                                    <option value='Swissotel' />\r\n                                </datalist>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Cantidad pasajeros\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder={0}\r\n                                    type=\"number\"\r\n                                    value={this.state.pasajeros} \r\n                                    onChange={(event)=>{this.setState({pasajeros:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"6\">\r\n                            <ElementoForm titulo=\"Nombre pasajero\">\r\n                                <Input \r\n                                    fluid\r\n                                    value={this.state.nombrePasajero} \r\n                                    placeholder=\"Christian Cueva\"\r\n                                    onChange={(event)=>{this.setState({nombrePasajero:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Tren\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"Tren\"\r\n                                    value={this.state.tren} \r\n                                    onChange={(event)=>{this.setState({tren:event.target.value})}}/>  \r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"ALM\">\r\n                                <Input \r\n                                    fluid\r\n                                    value={this.state.alm} \r\n                                    placeholder=\"ALM\"\r\n                                    onChange={(event)=>{this.setState({alm:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"6\">\r\n                            <ElementoForm titulo=\"Proveedor\">\r\n                                <Input \r\n                                    icon='lightning'    \r\n                                    iconPosition='left'\r\n                                    fluid\r\n                                    placeholder=\"Umbro\"\r\n                                    list=\"proveedores\"\r\n                                    value={this.state.proveedor} \r\n                                    onChange={(event)=>{this.setState({proveedor:event.target.value})}}/>\r\n                                <datalist id='proveedores'>\r\n                                    <option value='Transportes Juan' />\r\n                                    <option value='Matias' />\r\n                                </datalist>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Form>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default CrearServicio;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport VerServicios from '../VerServicios/VerServicios';\r\nimport CrearFile from '../ViewFiles/CrearFile/CrearFile';\r\nimport { Segment, Header, Icon, Card, Grid, Message, Dropdown, Modal, Button, Input } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom'\r\nimport Requester from '../../common/Services/Requester';\r\nimport CONSTANTES_GLOBALES, { CodigoMesATexto } from '../../common/Constantes';\r\nimport ElementoForm from '../../components/ElementoForm/ElementoForm';\r\nimport ModalCrearBiblia from '../../components/ModalCrearBiblia/ModalCrearBiblia';\r\n\r\n\r\nclass ListaBiblias extends Component {\r\n\r\n    state = {\r\n\r\n        modalBiblia: {\r\n            abierto: false,\r\n            transaccionEnviada: false,\r\n            responseRecibida: false,\r\n            rptaTransaccion: null,\r\n\r\n            campos: {\r\n                mes: null,\r\n                anho: null\r\n            }\r\n        },\r\n\r\n        biblias: [\r\n            /*\r\n            {\r\n                anho:\"2018\",\r\n                meses:[\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Marzo\" , files:4},\r\n                    {mes:\"Mayo\" , files:2}\r\n                ]\r\n            },\r\n            {\r\n                anho:\"2019\",\r\n                meses:[\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Marzo\" , files:4},\r\n                    {mes:\"Mayo\" , files:2}\r\n                ]\r\n            }*/\r\n        ]\r\n    }\r\n\r\n    onlyUnique(value, index, self) {\r\n        return self.indexOf(value) === index;\r\n    }\r\n\r\n    navegar = (direccion) => {\r\n        this.props.history.push(direccion);\r\n    }\r\n\r\n    cargarBiblias = () => {\r\n\r\n\r\n        Requester.getBibliasDetalle((rpta) => {\r\n            var anhos = rpta.cont.map((e) => { return e.anho });\r\n            var anhosUnique = anhos.filter(this.onlyUnique);\r\n            //console.log(anhosUnique);\r\n            var biblias = anhosUnique.map((e, i) => {\r\n                var meses = rpta.cont.filter((biblia) => {\r\n                    return biblia.anho == e;\r\n                });\r\n                meses = meses.map((e) => {\r\n                    return {\r\n                        mes: CodigoMesATexto(e.mes),\r\n                        files: e.cantidadFiles,\r\n                        codigoMes:e.mes\r\n                    }\r\n                })\r\n                meses = meses.sort((a, b) => {\r\n                    return a.mes - b.mes;\r\n                })\r\n                //console.log(meses)\r\n                return { anho: e, meses: meses };\r\n            })\r\n            biblias.sort((a, b) => {\r\n                return b.anho - a.anho;\r\n            })\r\n            console.log(biblias);\r\n            this.setState({ biblias: biblias });\r\n        });\r\n    }\r\n    componentDidMount = () => {\r\n        this.cargarBiblias();\r\n    }\r\n\r\n    render = () => {\r\n        return <div>\r\n\r\n            <Header size=\"large\">Biblias</Header>\r\n            <Button primary onClick={() => {\r\n                var obj = { ...this.state.modalBiblia };\r\n                obj.abierto = true;\r\n                this.setState({ modalBiblia: obj });\r\n            }}>Nueva Biblia</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            {this.state.biblias.map(e => {\r\n                var cuadro = (\r\n                    <Segment tertiary>\r\n                        <Header size=\"large\">{e.anho}</Header>\r\n                        <Grid columns=\"6\">\r\n                            <Grid.Row>\r\n                                {e.meses.map((mes, i) => {\r\n                                    if (i < 6)\r\n                                        return <Grid.Column>\r\n                                            <Card>\r\n                                                <Card.Content header={mes.mes} />\r\n                                                <Card.Content extra style={{ backgroundColor: \"#00000000\", padding: \"5px 7px\" }}>\r\n                                                    <Icon style={{  padding: \"3px\" }} name='folder' />\r\n                                                    {mes.files}\r\n                                                    <Button style={{ backgroundColor: \"#00000000\", padding: \"5px\" }} icon floated=\"right\"\r\n                                                        onClick={() => {\r\n                                                            //console.log(\"state: \",this.props.location.pathname)\r\n                                                            this.navegar(\"/calendario/\"+e.anho+\"/\"+mes.codigoMes);\r\n                                                        }}>\r\n                                                        <Icon fitted size=\"large\" name=\"angle right\" />\r\n                                                    </Button>\r\n                                                </Card.Content>\r\n                                            </Card>\r\n                                        </Grid.Column>\r\n                                })}\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                {e.meses.map((mes, i) => {\r\n                                    if (i > 5)\r\n                                        return <Grid.Column>\r\n                                            <Card>\r\n                                                <Card.Content header={mes.mes} />\r\n                                                <Card.Content extra style={{ backgroundColor: \"#00000000\", padding: \"5px 7px\" }}>\r\n                                                    <Icon name='folder' />\r\n                                                    {mes.files}\r\n                                                    <Button style={{ backgroundColor: \"#00000000\", padding: \"5px\" }} icon floated=\"right\"\r\n                                                        onClick={() => {\r\n                                                            this.navegar(\"/calendario/\"+e.anho+\"/\"+mes.codigoMes);\r\n                                                        }}>\r\n                                                        <Icon fitted size=\"large\" name=\"angle right\" />\r\n                                                    </Button>\r\n                                                </Card.Content>\r\n                                            </Card>\r\n                                        </Grid.Column>\r\n                                })}\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Segment>\r\n                )\r\n                return cuadro;\r\n            })}{/*\r\n                \r\n            <hr/>\r\n            <Link onClick={()=>{\r\n                var obj = {...this.state.modalBiblia};\r\n                obj.abierto=true;\r\n                this.setState({modalBiblia:obj});\r\n                }}>\r\n                Crear biblia</Link>\r\n                */\r\n            }\r\n            <ModalCrearBiblia parentComponent={this} />\r\n        </div>\r\n    }\r\n\r\n    EnviarPostBiblia = () => {\r\n\r\n        var newStateModalBiblia = { ...this.state.modalBiblia };\r\n        newStateModalBiblia.transaccionEnviada = true;\r\n        this.setState({ modalBiblia: newStateModalBiblia });\r\n\r\n        Requester.postBiblia(this.state.modalBiblia.campos, (rpta) => {\r\n            var newState = { ...this.state.modalBiblia };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rpta;\r\n            this.cargarBiblias();\r\n            this.setState({ modalBiblia: newState });\r\n        }, (rptaError) => {\r\n            var newState = { ...this.state.modalBiblia };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rptaError;\r\n            //console.log(this.state.modalBiblia);\r\n            this.setState({ modalBiblia: newState });\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default ListaBiblias;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport ModalCrearEditarProveedor from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabTodos extends Component{\r\n\r\n    state = {\r\n        proveedores:[\r\n        ]\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Tipo', accessor: 'tipo'  }\r\n    ]\r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Todos los proveedores</Header> \r\n            {/*<Header size=\"small\">Lista</Header>*/}\r\n            <TablaBuscador data={this.state.proveedores} columns={this.columnasTabla} />\r\n        </div>\r\n    }\r\n\r\n    cargarTodos = () =>{\r\n        Requester.getProveedores( \"\" , (rpta)=>{\r\n            var proovs=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\",\r\n                    tipo: e.tipoProveedor?Constantes.aliasATextoProovedores(e.tipoProveedor):'-'\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({proveedores:proovs});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarTodos();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabTodos","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header, Confirm, Modal } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport lul from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabHoteles extends Component{\r\n\r\n    state = {\r\n        hoteles:[\r\n            //{idProveedor:\"-1\",nombre:\"Melia\", correo:\"asd@asd.com\", correoAdic:\"asljkdq@as.com\", numeroContacto:\"(51)65465\",numeroContactoAdicional:\"123312\", ciudad:\"city\"}\r\n        ],\r\n        \r\n        confirmacionEliminarAbierta:false,\r\n        idEliminar:null,\r\n        \r\n        modalCrearEditar:{\r\n            //creacion o edicion\r\n            modo:\"creacion\",\r\n            abierto:false,\r\n\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                id:null,\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo', accessor: 'correo', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Ciudad', accessor: 'ciudad', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Accion', Cell: props => {\r\n            //console.log(props);\r\n            return <Container textAlign=\"center\">\r\n                <Button circular color=\"yellow\" icon=\"pencil\" onClick={()=>{this.abrirModalEdicion(this.state.hoteles.find(element=>element.idProveedor==props.original.idProveedor))}}></Button>\r\n                <Button circular color=\"red\" icon=\"trash\" onClick={()=>{this.intentarEliminar(this.state.hoteles.find(element=>element.idProveedor==props.original.idProveedor))}}></Button>\r\n            </Container>\r\n        }} \r\n    ]\r\n    \r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Hoteles</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo Hotel</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.hoteles} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <lul parent={this} sustantivoTitulo=\"Hotel\" \r\n                placeholderNombre=\"Arawi\" \r\n                placeholderCorreo=\"correo@arawi.com\" \r\n                placeholderCorreoAdic=\"arawi.ventas@gmail.com\"\r\n                enEnviar={this.enviarHotel}\r\n                enEditar={this.editarHotel}\r\n                enCerrar={this.enCerrarModal}/>\r\n            <Confirm\r\n                open={this.state.confirmacionEliminarAbierta}\r\n                cancelButton=\"Cancelar\"\r\n                confirmButton=\"Eliminar\"\r\n                content={'Seguro que deseas eliminar el hotel ' + (this.state.idEliminar ? this.state.hoteles.find(element => element.idProveedor == this.state.idEliminar).nombre\r\n                    :\"<NULO>\") + '?'}\r\n                onCancel={this.cerrarConfirmacionEliminar}\r\n                onConfirm={()=>{this.confirmarEliminar(this.state.hoteles.find(element => element.idProveedor == this.state.idEliminar))}}\r\n            />\r\n            <Modal></Modal>\r\n        </div>\r\n    }\r\n\r\n    intentarEliminar=(proveedor)=>{\r\n        console.log(proveedor);\r\n        \r\n        if(proveedor){\r\n            this.setState({\r\n                idEliminar:proveedor.idProveedor,\r\n                confirmacionEliminarAbierta:true\r\n            })\r\n        }\r\n    }\r\n\r\n    confirmarEliminar = (proveedor) =>{\r\n        console.log(\"eliminando proveedor \" + proveedor.nombre)\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n\r\n        if(proveedor){\r\n            Requester.postElimnarProv(proveedor.idProveedor,\r\n                (rpta)=>{\r\n                    this.cargarHoteles();\r\n                },\r\n                (rptaError)=>{\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    cerrarConfirmacionEliminar = () =>{\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n    }\r\n\r\n    abrirModalEdicion= (proveedor)=>{\r\n        console.log(proveedor);\r\n        if(proveedor){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.modo=\"edicion\";\r\n            obj.abierto=true;\r\n            obj.campos.id = proveedor.idProveedor;\r\n            obj.campos.nombre = proveedor.nombre;\r\n            obj.campos.correo = proveedor.correo;\r\n            obj.campos.correoAdic = proveedor.correoAdic;\r\n            obj.campos.num = proveedor.numeroContacto;\r\n            obj.campos.numAdic = proveedor.numeroContactoAdicional;\r\n            obj.campos.ciudad = proveedor.ciudad;\r\n            console.log(obj);\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.modo=\"creacion\";\r\n        obj.abierto = true;\r\n        this.setState({modalCrearEditar:obj});\r\n    }\r\n\r\n    enviarHotel = () => { \r\n        console.log(\"enviando!\");\r\n        \r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrearEditar:obj});\r\n\r\n        Requester.postProvHotel( \r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.num,\r\n            this.state.modalCrearEditar.campos.numAdic,\r\n            this.state.modalCrearEditar.campos.correoAdic,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            (rpta)=>{\r\n                console.log(this.state.modalCrearEditar.campos);\r\n                console.log(\"success!\");\r\n                console.log(rpta);\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarHoteles();\r\n            },\r\n            (rptaError)=>{\r\n                console.log(\"err!\");\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n    \r\n    editarHotel = () => { \r\n        console.log(\"editando!\");\r\n        \r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrearEditar:obj});\r\n        console.log(\": \"+this.state.modalCrearEditar.campos.id);\r\n        Requester.postEditarProvHotel( \r\n            this.state.modalCrearEditar.campos.id,\r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.num,\r\n            this.state.modalCrearEditar.campos.numAdic,\r\n            this.state.modalCrearEditar.campos.correoAdic,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            (rpta)=>{\r\n                console.log(this.state.modalCrearEditar.campos);\r\n                console.log(\"edicion success!\");\r\n                console.log(rpta);\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarHoteles();\r\n            },\r\n            (rptaError)=>{\r\n                console.log(\"edicion error!\");\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n\r\n    cargarHoteles= () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.HOTEL, (rpta)=>{\r\n            var hoteles=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo,//?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional,//?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto,//?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroContactoAdicional,//?e.numeroContactoAdicional:\"-\",\r\n                    ciudad:e.ciudad//?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({hoteles:hoteles});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarHoteles();\r\n    }\r\n\r\n    enCerrarModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.recibido=false;\r\n        obj.mensaje.enviado=false;\r\n        obj.mensaje.respuesta=null;\r\n\r\n        if(this.state.modalCrearEditar.modo===\"edicion\"){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.campos.id=null;\r\n            obj.campos.nombre=null;\r\n            obj.campos.correo=null;\r\n            obj.campos.correoAdic=null;\r\n            obj.campos.num=null;\r\n            obj.campos.numAdic=null;\r\n            obj.campos.ciudad=null;\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default TabHoteles","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header, Confirm, Modal } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport ModalCrearEditarProveedor from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabProovs extends Component{\r\n\r\n    state = {\r\n        proovs:[\r\n            //{idProveedor:\"-1\",nombre:\"Melia\", correo:\"asd@asd.com\", correoAdic:\"asljkdq@as.com\", numeroContacto:\"(51)65465\",numeroContactoAdicional:\"123312\", ciudad:\"city\"}\r\n        ],\r\n        \r\n        confirmacionEliminarAbierta:false,\r\n        idEliminar:null,\r\n        \r\n        modalCrearEditar:{\r\n            //creacion o edicion\r\n            modo:\"creacion\",\r\n            abierto:false,\r\n\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                id:'',\r\n                nombre:'',\r\n                correo:'',\r\n                correoAdic:'',\r\n                num:'',\r\n                numAdic:'',\r\n                ciudad:''\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo', accessor: 'correo', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Ciudad', accessor: 'ciudad', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Accion', Cell: props => {\r\n            //console.log(props);\r\n            return <Container textAlign=\"center\">\r\n                <Button circular color=\"yellow\" icon=\"pencil\" onClick={()=>{this.abrirModalEdicion(this.state.proovs.find(element=>element.idProveedor==props.original.idProveedor))}}></Button>\r\n                <Button circular color=\"red\" icon=\"trash\" onClick={()=>{this.intentarEliminar(this.state.proovs.find(element=>element.idProveedor==props.original.idProveedor))}}></Button>\r\n            </Container>\r\n        }} \r\n    ]\r\n    \r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">{this.props.sustPlural}</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo {this.props.sust}</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.proovs} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <ModalCrearEditarProveedor pack=\"modalCrearEditar\" parent={this} sustantivoTitulo={this.props.sust}\r\n                placeholderNombre={this.props.placeholderNombre}\r\n                placeholderCorreo={this.props.placeholderCorreo}\r\n                placeholderCorreoAdic={this.props.placeholderCorreoAdic}\r\n                enEnviar={this.enviarProov}\r\n                enEditar={this.editarProov}\r\n                enCerrar={this.enCerrarModal}/>\r\n            <Confirm\r\n                open={this.state.confirmacionEliminarAbierta}\r\n                cancelButton=\"Cancelar\"\r\n                confirmButton=\"Eliminar\"\r\n                content={'Seguro que deseas eliminar el '+this.props.sust+' ' + (this.state.idEliminar ? this.state.proovs.find(element => element.idProveedor == this.state.idEliminar).nombre\r\n                    :\"<NULO>\") + '?'}\r\n                onCancel={this.cerrarConfirmacionEliminar}\r\n                onConfirm={()=>{this.confirmarEliminar(this.state.proovs.find(element => element.idProveedor == this.state.idEliminar))}}\r\n            />\r\n            <Modal></Modal>\r\n        </div>\r\n    }\r\n\r\n    intentarEliminar=(proveedor)=>{\r\n        console.log(proveedor);\r\n        \r\n        if(proveedor){\r\n            this.setState({\r\n                idEliminar:proveedor.idProveedor,\r\n                confirmacionEliminarAbierta:true\r\n            })\r\n        }\r\n    }\r\n\r\n    confirmarEliminar = (proveedor) =>{\r\n        console.log(\"eliminando proveedor \" + proveedor.nombre)\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n\r\n        if(proveedor){\r\n            Requester.postEliminarProv(proveedor.idProveedor,\r\n                (rpta)=>{\r\n                    this.cargarProovs();\r\n                },\r\n                (rptaError)=>{\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    cerrarConfirmacionEliminar = () =>{\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n    }\r\n\r\n    abrirModalEdicion= (proveedor)=>{\r\n        console.log(proveedor);\r\n        if(proveedor){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.modo=\"edicion\";\r\n            obj.abierto=true;\r\n            obj.campos.id = proveedor.idProveedor;\r\n            obj.campos.nombre = proveedor.nombre;\r\n            obj.campos.correo = proveedor.correo;\r\n            obj.campos.correoAdic = proveedor.correoAdic;\r\n            obj.campos.num = proveedor.numeroContacto;\r\n            obj.campos.numAdic = proveedor.numeroContactoAdicional;\r\n            obj.campos.ciudad = proveedor.ciudad;\r\n            console.log(obj);\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.modo=\"creacion\";\r\n        obj.abierto = true;\r\n        this.setState({modalCrearEditar:obj});\r\n    }\r\n\r\n    enviarProov = () => { \r\n        console.log(\"enviando!\");\r\n        \r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrearEditar:obj});\r\n\r\n        this.props.funcEnviar( \r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.num,\r\n            this.state.modalCrearEditar.campos.numAdic,\r\n            this.state.modalCrearEditar.campos.correoAdic,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            (rpta)=>{\r\n                console.log(this.state.modalCrearEditar.campos);\r\n                console.log(\"success!\");\r\n                console.log(rpta);\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarProovs();\r\n            },\r\n            (rptaError)=>{\r\n                console.log(\"err!\");\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n    \r\n    editarProov = () => { \r\n        console.log(\"editando!\");\r\n        \r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrearEditar:obj});\r\n        console.log(\": \"+this.state.modalCrearEditar.campos.id);\r\n        Requester.postEditarProv(\r\n            this.props.alias,\r\n            this.state.modalCrearEditar.campos.id,\r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.num,\r\n            this.state.modalCrearEditar.campos.numAdic,\r\n            this.state.modalCrearEditar.campos.correoAdic,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            (rpta)=>{\r\n                console.log(this.state.modalCrearEditar.campos);\r\n                console.log(\"edicion success!\");\r\n                console.log(rpta);\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarProovs();\r\n            },\r\n            (rptaError)=>{\r\n                console.log(\"edicion error!\");\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n\r\n    cargarProovs= () =>{\r\n        console.log(this.props.alias);\r\n        Requester.getProveedores(this.props.alias, (rpta)=>{\r\n            var proovs=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor?e.idProveedor:0,\r\n                    nombre:e.nombre?e.nombre:'',\r\n                    correo:e.correo?e.correo:\"\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:'',\r\n                    numeroContactoAdicional:e.numeroContactoAdicional?e.numeroContactoAdicional:\"\",\r\n                    ciudad:e.ciudad?e.ciudad:\"\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({proovs:proovs});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log(\"weeeee\");\r\n        this.cargarProovs();\r\n    }\r\n\r\n    enCerrarModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.recibido=false;\r\n        obj.mensaje.enviado=false;\r\n        obj.mensaje.respuesta=null;\r\n\r\n        if(this.state.modalCrearEditar.modo===\"edicion\"){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.campos.id='';\r\n            obj.campos.nombre='';\r\n            obj.campos.correo='';\r\n            obj.campos.correoAdic='';\r\n            obj.campos.num='';\r\n            obj.campos.numAdic='';\r\n            obj.campos.ciudad='';\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default TabProovs","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport ModalCrearEditarProveedor from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabRestaurantes extends Component{\r\n\r\n    state = {\r\n        restaurantes:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n    \r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Restaurantes</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo Restaurante</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.restaurantes} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <ModalCrearEditarProveedor parent={this} titulo=\"Crear Restaurantes\" \r\n                placeholderNombre=\"Punto Azul\" \r\n                placeholderCorreo=\"ventas@puntoazul.com\" \r\n                placeholderCorreoAdic=\"correo.ventas@puntoazul.com\"\r\n                enEnviar={this.enviarTransporte}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarTransporte = () => { \r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvRestaurante( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarRestaurantes();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarRestaurantes= () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.RESTAURANTE, (rpta)=>{\r\n            var rests=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({restaurantes:rests});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarRestaurantes();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabRestaurantes","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport ModalCrearEditarProveedor from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabTransportes extends Component{\r\n\r\n    state = {\r\n        transportes:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n     \r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Transportes</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo Transporte</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.transportes} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <ModalCrearEditarProveedor parent={this} titulo=\"Crear Transportes\" \r\n                placeholderNombre=\"Javier\" \r\n                placeholderCorreo=\"javier.asd@gmail.com\" \r\n                placeholderCorreoAdic=\"javier.asdasd@hotmail.com\"\r\n                enEnviar={this.enviarTransporte}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarTransporte = () => { \r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvTransporte( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarTransportes();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarTransportes= () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.TRANSPORTE, (rpta)=>{\r\n            var transps=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({transportes:transps});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarTransportes();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabTransportes","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport lul from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabGuias extends Component{\r\n\r\n    state = {\r\n        guias:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Guías</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nueva Guia</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.guias} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <lul parent={this} titulo=\"Crear Guias\" \r\n                placeholderNombre=\"Guia\" \r\n                placeholderCorreo=\"guia@gmail.com\" \r\n                placeholderCorreoAdic=\"ventas.guia@hotmail.com\"\r\n                enEnviar={this.enviarGuia}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarGuia = () => { \r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvGuia( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarGuias();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarGuias = () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.GUIA, (rpta)=>{\r\n            var guias=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({guias:guias});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarGuias();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabGuias","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport lul from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabOperadores extends Component{\r\n\r\n    state = {\r\n        operadores:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n    \r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Operadores</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo Operador</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.operadores} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <lul parent={this} titulo=\"Crear Operador\" \r\n                placeholderNombre=\"Operador\" \r\n                placeholderCorreo=\"correo@gmail.com\" \r\n                placeholderCorreoAdic=\"correo.ventas@gmail.com\"\r\n                enEnviar={this.enviarOperador}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarOperador = () => { \r\n        console.log(\"enviando!\");\r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvOperador( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarOperadores();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarOperadores= () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.OPERADOR, (rpta)=>{\r\n            var opers=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({operadores:opers});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarOperadores();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabOperadores","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport lul from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabEmpresas extends Component{\r\n\r\n    state = {\r\n        empresas:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Empresas</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nueva Empresa</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.empresas} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <lul parent={this} titulo=\"Crear Empresa\" \r\n                placeholderNombre=\"Empresa\" \r\n                placeholderCorreo=\"empresa@gmail.com\" \r\n                placeholderCorreoAdic=\"ventas.empresa@hotmail.com\"\r\n                enEnviar={this.enviarEmpresa}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarEmpresa = () => { \r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvEmpresa( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarEmpresas();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarEmpresas = () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.EMPRESA, (rpta)=>{\r\n            var empresas=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({empresas:empresas});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarEmpresas();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabEmpresas","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport lul from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabPersonas extends Component{\r\n\r\n    state = {\r\n        personas:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Personas</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nueva Persona</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.personas} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <lul parent={this} titulo=\"Crear Persona\" \r\n                placeholderNombre=\"Christian cueva\" \r\n                placeholderCorreo=\"cuevita@gmail.com\" \r\n                placeholderCorreoAdic=\"cuevita.1@hotmail.com\"\r\n                enEnviar={this.enviarEmpresa}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarEmpresa = () => { \r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvPersona( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarPersonas();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarPersonas = () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.PERSONA, (rpta)=>{\r\n            var personas=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({personas:personas});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarPersonas();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabPersonas","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Tab, Menu, Label, Icon} from 'semantic-ui-react';\r\nimport TabHoteles from './TabHoteles/TabHoteles';\r\nimport TabTodos from './TabTodos/TabTodos';\r\nimport TabRestaurantes from './TabRestaurantes/TabRestaurantes';\r\nimport TabTransportes from './TabTransportes/TabTransportes';\r\nimport TabGuias from './TabGuias/TabGuias';\r\nimport TabOperadores from './TabOperadores/TabOperadores';\r\nimport TabEmpresas from './TabEmpresas/TabEmpresas';\r\nimport TabPersonas from './TabPersonas/TabPersonas';\r\nimport TabProovs from './TabHoteles/TabProovs';\r\nimport Constantes from '../../common/Constantes';\r\nimport Requester from '../../common/Services/Requester';\r\n\r\n\r\n\r\nclass MostradorProveedores extends Component{\r\n\r\n    state={\r\n        activeIndex:0\r\n    }\r\n\r\n    \r\n\r\n    panes = [ \r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Todos'>\r\n                    Todos \r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane>\r\n                    <TabTodos/>\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Hoteles'>\r\n                    <Icon name=\"hotel\"/>Hoteles \r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane>\r\n                    <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                    <TabProovs sust=\"Hotel\" \r\n                        sustPlural=\"Hoteles\"\r\n                        placeholderNombre=\"Arawi\" \r\n                        placeholderCorreo=\"correo@arawi.com\" \r\n                        placeholderCorreoAdic=\"arawi.ventas@gmail.com\"\r\n                        alias = {Constantes.AliasProovedores.HOTEL}\r\n                        funcEnviar = {Requester.postProvHotel}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Restaurantes'>\r\n                    <Icon name=\"food\"/>Restaurantes\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane>\r\n                    <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                    <TabProovs sust=\"Restaurant\" \r\n                        sustPlural=\"Restaurantes\"\r\n                        placeholderNombre=\"Punto Azul\" \r\n                        placeholderCorreo=\"ventas@puntoazul.com\" \r\n                        placeholderCorreoAdic=\"contacto@puntoazul.com\"\r\n                        alias = {Constantes.AliasProovedores.RESTAURANTE}\r\n                        funcEnviar = {Requester.postProvRestaurante}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Transportes'>\r\n                    <Icon name=\"truck\"/>Transportes\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane><div ></div><div></div><div></div><div></div><div></div>\r\n                    <TabProovs sust=\"Transporte\" \r\n                        sustPlural=\"Transportes\"\r\n                        placeholderNombre=\"Javier\" \r\n                        placeholderCorreo=\"javier.tran@gmail.com\" \r\n                        placeholderCorreoAdic=\"javier.tran@hotmail.com\"\r\n                        alias = {Constantes.AliasProovedores.TRANSPORTE}\r\n                        funcEnviar = {Requester.postProvTransporte}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Guias'>\r\n                    <Icon name=\"user\"/>Guias\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane><div></div><div></div><div></div><div></div>\r\n                    <TabProovs sust=\"Guia\" \r\n                        sustPlural=\"Guias\"\r\n                        placeholderNombre=\"Guia\" \r\n                        placeholderCorreo=\"carlos.guia@gmail.com\" \r\n                        placeholderCorreoAdic=\"carlos.guia@hotmail.com\"\r\n                        alias = {Constantes.AliasProovedores.GUIA}\r\n                        funcEnviar = {Requester.postProvGuia}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Operadores'>\r\n                    <Icon name=\"cog\"/>Operadores\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane>\r\n                    <div></div><div></div><div></div>\r\n                    <TabProovs sust=\"Operador\" \r\n                        sustPlural=\"Operadores\"\r\n                        placeholderNombre=\"Matias\" \r\n                        placeholderCorreo=\"correo@gmail.com\" \r\n                        placeholderCorreoAdic=\"correo.ventas@gmail.com\"\r\n                        alias = {Constantes.AliasProovedores.OPERADOR}\r\n                        funcEnviar = {Requester.postProvOperador}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Empresas'>\r\n                    <Icon name=\"building\"/>Empresas\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane>\r\n                    <div></div><div></div>\r\n                    <TabProovs sust=\"Empresa\" \r\n                        sustPlural=\"Empresas\"\r\n                        placeholderNombre=\"asda\" \r\n                        placeholderCorreo=\"empresa@gmail.com\" \r\n                        placeholderCorreoAdic=\"correo.ventas@gmail.com\"\r\n                        alias = {Constantes.AliasProovedores.EMPRESA}\r\n                        funcEnviar = {Requester.postProvEmpresa}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Personas'>\r\n                    <Icon name=\"id card\"/>Personas\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane >\r\n                    <div></div>\r\n                    <TabProovs\r\n                        i={this.state.activeIndex}\r\n                        sust=\"Persona\" \r\n                        sustPlural=\"Personas\"\r\n                        placeholderNombre=\"Christian cueva\" \r\n                        placeholderCorreo=\"christian@gmail.com\" \r\n                        placeholderCorreoAdic=\"cuevita@gmail.com\"\r\n                        alias = {Constantes.AliasProovedores.PERSONA}\r\n                        funcEnviar = {Requester.postProvPersona}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n    ]\r\n\r\n    render(){\r\n        return <Tab renderActiveOnly activeIndex={this.state.activeIndex} panes={this.panes} onTabChange={(event,data)=>{\r\n            this.setState({activeIndex:data.activeIndex})\r\n            console.log(this.state.activeIndex)\r\n        }}/>\r\n    }\r\n}\r\n\r\nexport default MostradorProveedores;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Message, Icon, Input, Modal, Grid } from 'semantic-ui-react';\r\nimport ElementoForm from '../../components/ElementoForm/ElementoForm';\r\nimport MensajeTransaccion from '../../components/MensajeTransaccion/MensajeTransaccion';\r\n\r\nclass ModalCrearEditarCliente extends Component{\r\n\r\n    render(){\r\n\r\n        var msjSuccess=\"Objeto creado\";\r\n        if(this.props.parent.state.modalCrearEditar.modo === \"edicion\")\r\n            msjSuccess =\"Objeto editado exitosamente\";\r\n\r\n        var msjComp = <div></div>\r\n\r\n\r\n        return  <Modal size=\"tiny\"  open ={ this.props.parent.state.modalCrearEditar.abierto} centered={true}  onClose={() => {\r\n            var obj= {...this.props.parent.state.modalCrearEditar};\r\n            obj.abierto=false;\r\n            this.props.enCerrar();\r\n            this.props.parent.setState({modalCrearEditar:obj});\r\n        }}>\r\n\r\n            <Modal.Header>{this.props.parent.state.modalCrearEditar.modo==='creacion'?'Crear '+ this.props.sustantivoTitulo:'Modificar ' + this.props.sustantivoTitulo}</Modal.Header>\r\n            \r\n            <Modal.Content>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Nombre *\">\r\n                                <Input fluid placeholder={this.props.placeholderNombre} value={this.props.parent.state.modalCrearEditar.campos.nombre} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.nombre = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}\r\n                                        />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n                    <Grid.Row columns={2}>\r\n                        <Grid.Column>\r\n                        <ElementoForm grid titulo=\"Correo electrónico\">\r\n                                <Input \r\n                                    fluid\r\n                                    iconPosition=\"left\" placeholder={this.props.placeholderCorreo} value={this.props.parent.state.modalCrearEditar.campos.correo} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.correo = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}\r\n                                    >\r\n                                    <Icon name=\"at\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Correo electrónico adicional\">\r\n                                <Input \r\n                                    fluid\r\n                                    iconPosition=\"left\" placeholder={this.props.placeholderCorreoAdic} value={this.props.parent.state.modalCrearEditar.campos.correoAdic} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.correoAdicional = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}>\r\n                                    <Icon name=\"at\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    \r\n\r\n                    <Grid.Row columns={2}>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Numero contacto\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"+57 98 957 0845\"\r\n                                    iconPosition=\"left\"\r\n                                    value={this.props.parent.state.modalCrearEditar.campos.num} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.numero = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}>\r\n                                    <Icon name=\"phone\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Numero contacto adicional\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"564-8790\"\r\n                                    iconPosition=\"left\"\r\n                                    value={this.props.parent.state.modalCrearEditar.campos.numAdic} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.numeroAdicional = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}>\r\n                                    <Icon name=\"phone\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n\r\n                    <Grid.Row columns={2}>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Ciudad\">\r\n                                <Input fluid placeholder=\"Medellin\" \r\n                                    value={this.props.parent.state.modalCrearEditar.campos.ciudad} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.ciudad = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Pais\">\r\n                                <Input fluid placeholder=\"Colombia\" \r\n                                    value={this.props.parent.state.modalCrearEditar.campos.pais} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.pais = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n                </Grid>\r\n                <MensajeTransaccion\r\n                    transaccionEnviada = {this.props.parent.state.modalCrearEditar.transaccionEnviada} \r\n                    responseRecibida = {this.props.parent.state.modalCrearEditar.responseRecibida}\r\n                    rptaTransaccion = {this.props.parent.state.modalCrearEditar.rptaTransaccion}\r\n                    //textoExito = \"Puede usar la nueva biblia\"\r\n                />\r\n            </Modal.Content>\r\n\r\n            <Modal.Actions>\r\n                <Button negative onClick={() => {\r\n                    var obj= {...this.props.parent.state.modalCrearEditar};\r\n                    obj.abierto=false;\r\n                    this.props.enCerrar();\r\n                    this.props.parent.setState({modalCrearEditar:obj});\r\n                    }}>\r\n                    Cancelar\r\n                </Button>\r\n                {\r\n                    this.props.parent.state.modalCrearEditar.modo==='creacion'?\r\n                    <Button positive icon='checkmark' labelPosition='right' content='Crear' onClick={ this.props.enEnviar } /> :\r\n                    <Button color=\"yellow\" icon='checkmark' labelPosition='right' content='Modificar' onClick={ this.props.enEditar}/>\r\n                }\r\n            </Modal.Actions>\r\n\r\n        </Modal>\r\n\r\n    }\r\n}\r\nexport default ModalCrearEditarCliente;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header, Menu, Modal, Confirm, Segment } from 'semantic-ui-react';\r\nimport Requester from '../../common/Services/Requester';\r\n\r\n\r\n\r\nimport TablaBuscador from '../TablaBuscador/TablaBuscador';\r\nimport ModalCrearEditarCliente from './ModalCrearEditarCliente';\r\nimport Constantes from '../../common/Constantes';\r\n\r\n\r\nclass TabClientes extends Component{\r\n\r\n    \r\n    state = {\r\n        clientesDirs:[\r\n        ],\r\n        \r\n        confirmacionEliminarAbierta:false,\r\n        idEliminar:null,\r\n        \r\n        modalCrearEditar:{\r\n            //creacion o edicion\r\n            modo:\"creacion\",\r\n            abierto:false,\r\n            transaccionEnviada:false,\r\n            responseRecibida:false,\r\n            rptaTransaccion:null,\r\n\r\n            campos:{\r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n    \r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo', accessor: 'correo', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdicional', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroAdicional', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Ciudad', accessor: 'ciudad', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Pais', accessor: 'pais', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Accion', Cell: props => {\r\n            //console.log(props);\r\n            return <Container textAlign=\"center\">\r\n                <Button circular color=\"yellow\" icon=\"pencil\" \r\n                onClick={()=>{\r\n                    this.abrirModalEdicion(this.state.clientesDirs.find(element=>element.idCliente==props.original.idCliente))\r\n                    }}></Button>\r\n                <Button circular color=\"red\" icon=\"trash\" \r\n                onClick={()=>{\r\n                    this.intentarEliminar(this.state.clientesDirs.find(element=>element.idCliente==props.original.idCliente))\r\n                    }}></Button>\r\n            </Container>\r\n        }} \r\n    ]\r\n\r\n    render(){\r\n        \r\n        return <div /*style={{backgroundColor:\"#f9f9f9\"}}*/>\r\n            <Header size=\"medium\">{this.props.sustPlural}</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo {this.props.sust}</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.clientesDirs} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n\r\n            <ModalCrearEditarCliente parent={this} sustantivoTitulo={this.props.sust}\r\n                placeholderNombre={this.props.placeholderNombre}\r\n                placeholderCorreo={this.props.placeholderCorreo}\r\n                placeholderCorreoAdic={this.props.placeholderCorreoAdic}\r\n                enEnviar={this.enviarCliente}\r\n                enEditar={this.editarCliente}\r\n                enCerrar={this.enCerrarModal}/>\r\n            <Confirm\r\n                open={this.state.confirmacionEliminarAbierta}\r\n                cancelButton=\"Cancelar\"\r\n                confirmButton=\"Eliminar\"\r\n                content={'Seguro que deseas eliminar el '+this.props.sust+' ' + (this.state.idEliminar ? this.state.clientesDirs.find(element => element.idCliente == this.state.idEliminar).nombre\r\n                    :\"<NULO>\") + '?'}\r\n                onCancel={this.cerrarConfirmacionEliminar}\r\n                onConfirm={()=>{this.confirmarEliminar(this.state.clientesDirs.find(element => element.idCliente == this.state.idEliminar))}}\r\n            />\r\n            <Modal></Modal>\r\n        </div>\r\n    }\r\n    \r\n    intentarEliminar=(cliente)=>{\r\n        console.log(cliente);\r\n        \r\n        if(cliente){\r\n            this.setState({\r\n                idEliminar:cliente.idCliente,\r\n                confirmacionEliminarAbierta:true\r\n            })\r\n        }\r\n    }\r\n\r\n    confirmarEliminar = (cliente) =>{\r\n        console.log(\"eliminando cliente \", cliente)\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n\r\n        if(cliente){\r\n            Requester.postEliminarCliente(cliente.idCliente,\r\n                (rpta)=>{\r\n                    this.cargarClientes();\r\n                },\r\n                (rptaError)=>{\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    cerrarConfirmacionEliminar = () =>{\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n    }\r\n\r\n    abrirModalEdicion= (cliente)=>{\r\n        console.log(cliente);\r\n        if(cliente){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.modo=\"edicion\";\r\n            obj.abierto=true;\r\n            obj.campos.idCliente = cliente.idCliente;\r\n            obj.campos.nombre = cliente.nombre;\r\n            obj.campos.correo = cliente.correo;\r\n            obj.campos.correoAdicional = cliente.correoAdicional;\r\n            obj.campos.nummeroContacto = cliente.numeroContacto;\r\n            obj.campos.numeroAdicional = cliente.numeroAdicional;\r\n            obj.campos.ciudad = cliente.ciudad;\r\n            obj.campos.pais = cliente.pais;\r\n            console.log(obj);\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.modo=\"creacion\";\r\n        obj.abierto = true;\r\n        this.setState({modalCrearEditar:obj});\r\n    }\r\n\r\n    enviarCliente = () => { \r\n        //console.log(\"enviando!\");\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.transaccionEnviada=true;\r\n        this.setState({modalCrearEditar:obj});\r\n\r\n        //Requester.postCliente(\r\n        this.props.funcEnviar(\r\n            this.props.alias,\r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.numero,\r\n            this.state.modalCrearEditar.campos.numeroAdicional,\r\n            this.state.modalCrearEditar.campos.correoAdicional,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            this.state.modalCrearEditar.campos.pais,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.responseRecibida=true;\r\n                obj.rptaTransaccion = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarClientes();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.responseRecibida=true;\r\n                obj.rptaTransaccion = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n    \r\n    editarCliente = () => { \r\n        console.log(\"editando!\");\r\n        \r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.transaccionEnviada=true;\r\n        this.setState({modalCrearEditar:obj});\r\n        //console.log(\"::::::::: \",this.state.modalCrearEditar.campos);\r\n        Requester.postEditarCliente( \r\n            this.props.alias,\r\n            this.state.modalCrearEditar.campos.idCliente,\r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.numero,\r\n            this.state.modalCrearEditar.campos.numeroAdicional,\r\n            this.state.modalCrearEditar.campos.correoAdicional,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            this.state.modalCrearEditar.campos.pais,\r\n            (rpta)=>{\r\n                console.log(this.state.modalCrearEditar.campos);\r\n                console.log(\"edicion success!\");\r\n                console.log(rpta);\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.responseRecibida = true;\r\n                obj.rptaTransaccion = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarClientes();\r\n            },\r\n            (rptaError)=>{\r\n                //console.log(\"edicion error!\");\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.responseRecibida = true;\r\n                obj.rptaTransaccion = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n\r\n    cargarClientes= () =>{\r\n        //console.log(\"aweeeee\");\r\n        Requester.getClientesFullDetallado(this.props.alias, (rpta)=>{\r\n            var clientesDirs=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idCliente:e.idCliente,\r\n                    nombre:e.nombre,\r\n                    correo:e.correoContacto,\r\n                    correoAdicional:e.correoAdicional,\r\n                    numeroContacto:e.numeroContacto,\r\n                    numeroAdicional:e.numeroAdicional,\r\n                    ciudad:e.ciudad,\r\n                    pais:e.pais,\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({clientesDirs:clientesDirs});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarClientes();\r\n    }\r\n\r\n    enCerrarModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.responseRecibida=false;\r\n        obj.transaccionEnviada=false;\r\n        obj.rptaTransaccion=null;\r\n\r\n        if(this.state.modalCrearEditar.modo === \"edicion\"){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.campos.id=null;\r\n            obj.campos.nombre=null;\r\n            obj.campos.correo=null;\r\n            obj.campos.correoAdic=null;\r\n            obj.campos.num=null;\r\n            obj.campos.numAdic=null;\r\n            obj.campos.ciudad=null;\r\n            obj.campos.pais=null;\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n}\r\n\r\nexport default TabClientes","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header, Menu } from 'semantic-ui-react';\r\nimport ReactTable from \"react-table\";\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\n\r\n\r\nclass TabTodosClientes extends Component{\r\n\r\n    state = {\r\n        clientes:[\r\n        ]\r\n    }\r\n    \r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correoContacto' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdicional' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Tipo', accessor: 'tipo'  }\r\n    ]\r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Todos los clientes</Header> \r\n            {/*<Header size=\"small\">Lista</Header>*/}\r\n            <TablaBuscador data={this.state.clientes} columns={this.columnasTabla} />\r\n        </div>\r\n    }\r\n\r\n    cargarTodos = () =>{ \r\n        Requester.getClientesFullDetallado( \"\" , (rpta)=>{\r\n            var clientes=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idCliente:e.idCliente,\r\n                    nombre:e.nombre,\r\n                    correo:e.correoContacto?e.correoContacto:\"-\",\r\n                    correoAdicional:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroAdicional:e.numeroAdicional?e.numeroAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\",\r\n                    pais:e.pais?e.pais:\"-\",\r\n                    tipo: e.tipo?Constantes.aliasATextoClientes(e.tipo):'-'\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({clientes:clientes});\r\n        });\r\n        console.log(\"clientes\",this.state.clientes)\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarTodos();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabTodosClientes","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Tab, Menu, Label, Icon} from 'semantic-ui-react';\r\nimport TabClientes from './TabClientes';\r\nimport Requester from '../../common/Services/Requester';\r\nimport Constantes from '../../common/Constantes';\r\nimport TabTodosClientes from './TabTodos/TabTodosClientes';\r\n\r\nconst panes = [ \r\n    {\r\n        menuItem: (\r\n            <Menu.Item key='Todos'>\r\n                Todos \r\n            </Menu.Item>\r\n        ),\r\n        render: () => {\r\n            return <Tab.Pane>\r\n                <TabTodosClientes/>\r\n            </Tab.Pane>},\r\n    },\r\n    {\r\n        menuItem: (\r\n            <Menu.Item key='clienteDirecto'>\r\n                <Icon name=\"user\"/>Cliente Directo\r\n            </Menu.Item>\r\n        ),\r\n        render: () => {\r\n            return <Tab.Pane>\r\n                \r\n                <TabClientes sust=\"Cliente directo\" \r\n                    sustPlural=\"Clientes directos\"\r\n                    placeholderNombre=\"Juan\" \r\n                    placeholderCorreo=\"Juan@gmail.com\" \r\n                    placeholderCorreoAdic=\"juan.agencia@gmail.com\"\r\n                    alias = {Constantes.AliasClientes.CLIENTE_DIRECTO}\r\n                    funcEnviar = {Requester.postCliente}\r\n                    />\r\n            </Tab.Pane>},\r\n    },\r\n    {\r\n        menuItem: (\r\n            <Menu.Item key='OpMinorista'>\r\n                <Icon name=\"box\"/>Operador minorista\r\n            </Menu.Item>\r\n        ),\r\n        render: () => {\r\n            return <Tab.Pane>\r\n                <div></div>\r\n                <TabClientes sust=\"Operador minorista\" \r\n                    sustPlural=\"Minoristas\"\r\n                    placeholderNombre=\"NTS\" \r\n                    placeholderCorreo=\"mariana@nts.com.gt\" \r\n                    placeholderCorreoAdic=\"-\"\r\n                    alias = {Constantes.AliasClientes.OPERADOR_MINORISTA}\r\n                    funcEnviar = {Requester.postCliente}\r\n                    />\r\n            </Tab.Pane>},\r\n    },\r\n    {\r\n        menuItem: (\r\n            <Menu.Item key='opMayorista'>\r\n                <Icon name=\"boxes\"/>Operador mayorista \r\n            </Menu.Item>\r\n        ),\r\n        render: () => {\r\n            return <Tab.Pane>\r\n                <div></div><div></div>\r\n                <TabClientes sust=\"Operador mayorista\" \r\n                    sustPlural=\"Mayoristas\"\r\n                    placeholderNombre=\"Eurolatina\" \r\n                    placeholderCorreo=\"acaiminagua@eurolatina.com.ec\" \r\n                    placeholderCorreoAdic=\"achala@eurolatina.com.ec\"\r\n                    alias = {Constantes.AliasClientes.OPERADOR_MAYORISTA}\r\n                    funcEnviar = {Requester.postCliente}\r\n                    />\r\n            </Tab.Pane>},\r\n    }\r\n  ]\r\n\r\nclass VerClientes extends Component{\r\n\r\n    render(){\r\n        return <Tab panes={panes} />\r\n    }\r\n}\r\nexport default VerClientes","import React from 'react';\r\nimport { Component } from 'react';\r\nimport moment from 'moment'\r\nimport BigCalendar from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { Segment, Header } from 'semantic-ui-react';\r\n\r\nimport 'moment/locale/es'\r\nimport Requester from '../../common/Services/Requester';\r\nimport CONSTANTES_GLOBALES from '../../common/Constantes';\r\n\r\n\r\nconst localizer = BigCalendar.momentLocalizer(moment)\r\n\r\nclass VerCalendario extends Component {\r\n\r\n\r\n    state = {\r\n        fecha:this.props.fechaDefault?this.props.fechaDefault : new Date(),\r\n        events: [\r\n        ],\r\n        //culture: moment.locale(\"es\")\r\n\r\n    }\r\n\r\n    componentDidMount=()=>{\r\n        //console.log(\"fecha: \",this.state.fecha.getMonth())\r\n        this.cargarServicios(this.state.fecha.getMonth()+1);\r\n\r\n    }\r\n \r\n    v = (event, start, end, isSelected) => {\r\n        let newStyle = {\r\n          backgroundColor: event.color,\r\n          color: 'black',\r\n          borderRadius: \"0px\",\r\n          border: \"none\"\r\n        };\r\n  \r\n        if (event.isMine){\r\n          newStyle.backgroundColor = \"lightgreen\"\r\n        }\r\n  \r\n        return {\r\n          className: \"\",\r\n          style: newStyle\r\n        };\r\n      }\r\n\r\n    cargarServicios= (mes)=>{\r\n\r\n        let eventosServ = [];\r\n        Requester.getServiciosTodos( (rpta) =>{\r\n            rpta.cont.map((s,i)=>{\r\n                //let lista = eventosServ ;\r\n                if(s.tipoServicio===CONSTANTES_GLOBALES.AliasServicios.SERVICIO){\r\n                    /*console.log(\"FECHA\"+s.fecha.split(\"-\")[0]+ \" => \" + moment(s.fecha).format(\"YYYY MM DD\") + \" =>>< \" \r\n                    +new Date(s.fecha.split(\"-\")[0],s.fecha.split(\"-\")[1],s.fecha.split(\"-\")[2]) );*/\r\n                eventosServ.push({\r\n                    title:s.nombre,\r\n                    \r\n                    start: moment(s.fecha),\r\n                    end: moment(s.fecha),\r\n                    allDay:true,\r\n                    color:'yellow'\r\n                })\r\n            }else{\r\n                eventosServ.push({\r\n                    title:s.nombre,\r\n                    start:moment(s.fecha),\r\n                    end:moment(s.fecha),\r\n                    allDay:true,\r\n                    color:'lightblue'\r\n                })\r\n                }\r\n            });\r\n            this.setState({events:eventosServ});\r\n        }, (rpta) => {\r\n            \r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return <div>\r\n            {/*<Header size=\"large\">Calendario</Header>*/}\r\n            <Segment style={{ height: \"800px\" }}>\r\n                <BigCalendar\r\n                    localizer={localizer}\r\n                    events={this.state.events}\r\n                    culture={this.state.culture}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    defaultDate={this.state.fecha }\r\n                    defaultView=\"month\"\r\n                    eventPropGetter={this.v}\r\n                />\r\n            </Segment>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default VerCalendario;","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Button } from 'semantic-ui-react';\r\nimport ContainedComponent from '../../components/ContainedComponent';\r\n\r\nclass ModalPrueba1 extends ContainedComponent {\r\n    \r\n    render = () => {\r\n\r\n        return <div>\r\n            <p>1:</p>\r\n            <Button onClick={() => {\r\n                console.log(\"obj:\", this.props.parent.state[this.props.pack]);\r\n\r\n\r\n                var c = this.getParentContainer();\r\n                c.valor1+=\"3\";\r\n                this.UpdateParentContainer({...this.getParentContainer(),valor1:\"ctmre!\"});\r\n/*\r\n                var obj = { ...this.props.parent.state[this.props.pack] };\r\n                obj.valor1 += \"2\";\r\n                obj.valor2 += \"b2\";\r\n\r\n                console.log(\"OBJ: \", obj);\r\n                this.props.parent.setState({ [this.props.pack]: obj })*/\r\n\r\n                console.log(\"obj cambiado:\", this.props.parent.state);\r\n                console.log(\"obj cambiado:\", this.props.parent);\r\n            }}>\r\n                Cambiar estado!\r\n            </Button>\r\n        </div>\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ModalPrueba1;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport ModalPrueba1 from './ModalPrueba1';\r\n\r\nclass Pruebas extends Component{\r\n\r\n    state={\r\n        modal:{\r\n            //parent:this,\r\n            valor1:\"a\",\r\n            valor2:\"b\"\r\n        }\r\n    }\r\n\r\n    render = () =>{\r\n        return <div> \r\n            <ModalPrueba1 parent={this} pack=\"modal\"/>\r\n        </div>\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Pruebas;","import React from 'react'\r\nimport { Component } from 'react';\r\nimport './NavBar.css';\r\nimport { Link } from 'react-router-dom'\r\nimport { Grid, Button, Menu, Image, Header, Container, Segment, Flag, Icon } from 'semantic-ui-react'\r\nimport { Configuracion } from '../../common/Constantes'\r\n\r\nimport LogoYllari from '../../assets/logo_yllari.png'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport momentTz from 'moment-timezone'\r\nimport 'moment/locale/es-us'\r\n\r\nclass NavBar extends Component {\r\n\r\n    capitalize = (string) => {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n    state = {\r\n        enlace: '',\r\n        usuarioNombre: '',\r\n        fecha:this.capitalize(moment().tz('America/Lima').format('dddd D')) + ' de ' + moment().tz('America/Lima').format('MMMM'),\r\n        hora:moment().tz('America/Lima').format('LT')\r\n    }\r\n\r\n    componentDidMount() {\r\n        moment().locale(\"es\");\r\n        this.timerID = setInterval(() => this.tick(), 5000);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            fecha:this.capitalize(moment().tz('America/Lima').format('dddd D')) + ' de ' + moment().tz('America/Lima').format('MMMM'),\r\n            hora:moment().tz('America/Lima').format('LT')\r\n        });\r\n    }\r\n\r\n    navegar(direccion) {\r\n        this.props.history.push(direccion);\r\n    }\r\n    render() {\r\n        let nombre = \"\";\r\n        let genero = 0;\r\n        if (this.props.usuario) {\r\n            nombre = this.props.usuario.nombre;\r\n            genero = this.props.usuario.genero;\r\n        }\r\n        return (\r\n            <div>\r\n                <Menu /*style={{backgroundColor:\"#ffb366\"}}*/ size=\"huge\" stackable >\r\n                    <Menu.Item >\r\n                        <img src={LogoYllari} />\r\n                    </Menu.Item>\r\n                    {Configuracion.EnlacesNavBar.map((element,index) => {\r\n                        return <Menu.Item key={index} as='a' active={this.state.enlace === element.nombre}\r\n                            onClick={() => { this.setState({ enlace: element.nombre }); this.navegar(element.valor) }}>\r\n                            {element.nombre}\r\n                            {/*<Link to={element.valor} style={{color:\"black\"}}>{element.nombre}</Link>*/}\r\n                        </Menu.Item>\r\n                    })}\r\n\r\n                    <Menu.Menu position='right'>\r\n                        <Menu.Item style={{ padding: \"4px 16px\" }}>\r\n                            <div style={{ lineHeight: \"1.4\" }}>\r\n                                <div style={{ fontSize: \"11px\" }}>{this.state.fecha}{/*Martes, 21 de Mayo*/}</div>\r\n                                <Flag name='pe' />{' '}<b>{this.state.hora}</b>\r\n                            </div>\r\n                        </Menu.Item>\r\n                        <Menu.Item style={{ padding: \"4px 16px\" }}>\r\n                            {genero == 0 ? \"Bienvenido\" : \"Bienvenida\"},{' '}<br /><b>{nombre ? nombre : \"usuario\"}</b>\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                            <Button size=\"massive\" style={{ backgroundColor: \"#00000000\", padding: \"13.3px 5px\" }} icon onClick={() => {\r\n                                this.props.cerrarSesionHandler();\r\n                            }}>\r\n                                <Icon size=\"large\" name='power off' />\r\n                            </Button>\r\n                            {/*\r\n                            <Button as='a' onClick={() => {\r\n                                this.props.cerrarSesionHandler();\r\n                            }}>\r\n                                Cerrar sesión\r\n                                </Button>\r\n                                */}\r\n                        </Menu.Item>\r\n                    </Menu.Menu>\r\n                </Menu>\r\n\r\n                {/*\r\n                <Grid>\r\n                    <Grid.Row className=\"Spaced\">\r\n\r\n                        <Grid.Column width={4} verticalAlign=\"middle\" textAlign=\"left\">\r\n                            <Image src ={LogoYllari} size=\"tiny\"></Image>\r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column width={8} textAlign=\"center\"  verticalAlign=\"middle\">\r\n                            <Grid columns=\"equal\">\r\n                                <Grid.Row >\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/inicio\"><h4>Inicio</h4></Link>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/files\"><h4>Files</h4></Link>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/servicios\"><h4>Servicios</h4></Link>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/transportes\"><h4>Transportes</h4></Link>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/clientes\"><h4>Clientes</h4></Link>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/calendario\"><h4>Calendario</h4></Link>\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                            </Grid>\r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column width ={4} textAlign=\"right\"  verticalAlign=\"middle\">\r\n                            <Link floated=\"right\" to=\"/inicio\">Cerrar sesión</Link>\r\n                        </Grid.Column>\r\n\r\n                    </Grid.Row>\r\n                </Grid>\r\n\r\n                */}\r\n\r\n\r\n                {/*\r\n                    <Link to=\"/inicio\">Inicio</Link>\r\n                    <Link to=\"/files\">Files</Link>\r\n                    <Link to=\"/servicios\">Servicios</Link>\r\n                <Link to=\"/transportes\">Transportes</Link>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport { Grid, Header, Image, Form, Button, Segment, Message, Divider, Input } from 'semantic-ui-react';\r\nimport './Auth.css'\r\n\r\nimport LogoYllari from '../../assets/logo_yllari.png'\r\nimport Requester from '../../common/Services/Requester';\r\nimport MensajeTransaccion from '../../components/MensajeTransaccion/MensajeTransaccion';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        usuario: \"\",\r\n        clave: \"\",\r\n\r\n        transaccionEnviada: false,\r\n        responseRecibida: false,\r\n        rptaTransaccion: null,\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Header as='h2' color='black' textAlign='center'>\r\n                            <Image src={LogoYllari} size=\"massive\" />\r\n                            <Divider hidden />\r\n                            Gestor de Recursos Yllari Travel\r\n                        </Header>\r\n                        <Form size='large'>\r\n                            <Segment >\r\n                                <Form.Input value={this.state.usuario}\r\n                                    onChange={(event) => { this.setState({ usuario: event.target.value }) }}\r\n                                    fluid icon='user' iconPosition='left' placeholder='Usuario' />\r\n                                <Form.Input value={this.state.clave}\r\n                                    onChange={(event) => {\r\n                                        this.setState({ clave: event.target.value })\r\n                                    }}\r\n                                    fluid\r\n                                    icon='lock'\r\n                                    iconPosition='left'\r\n                                    placeholder='Contraseña'\r\n                                    type='password'\r\n                                />\r\n                                <Button color='orange' fluid size='large'\r\n                                    onClick={() => {\r\n\r\n                                        this.setState({ transaccionEnviada: true,\r\n                                            responseRecibida: false });\r\n\r\n                                        console.log(\"asd!\", this.state);\r\n                                        Requester.postLogin(\r\n                                            {\r\n                                            username: this.state.usuario,\r\n                                            password: this.state.clave\r\n                                        },\r\n                                            (rpta) => {\r\n\r\n                                                var token = rpta.cont.token;\r\n                                                Requester.store.token = token;\r\n                                                console.log(\"Requester store: \",Requester.store)\r\n\r\n                                                localStorage.setItem(\"token\", token);\r\n                                                var pack = { token: token };\r\n\r\n                                                Requester.getInfo((rpta) => {\r\n                                                    //console.log(\"Infooooo:\",rpta.cont)\r\n                                                    pack.usuario = {\r\n                                                        usuario: rpta.cont.usr,\r\n                                                        rol: rpta.cont.rol,\r\n                                                        nombre:rpta.cont.nombrePersona,\r\n                                                        correo: rpta.cont.correoPersona,\r\n                                                        genero:rpta.cont.genero\r\n                                                    }\r\n                                                    pack.mostrarContenido = true;\r\n                                                    this.props.loggedInHandler(pack);\r\n                                                }, (error, errorCompleto) => {\r\n                                                    //error etc\r\n                                                }, null, token)\r\n\r\n\r\n                                            }, (rpta) => {\r\n                                                this.setState({\r\n                                                    responseRecibida: true,\r\n                                                    rptaTransaccion: rpta\r\n                                                });\r\n                                            }\r\n                                        );\r\n\r\n                                        /*\r\n                                        var token = //\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjEiLCJyb2xlIjoiQWRtaW4iLCJuYmYiOjE1NTgzNDkyNDAsImV4cCI6MTU1ODk1NDA0MCwiaWF0IjoxNTU4MzQ5MjQwfQ.H-jsWOpteqIrJo9rkT8Z8_xd3XKHs8aEE6YVwQMoXlw\";\r\n                                        \r\n                                        localStorage.setItem(\"token\",token);\r\n                                        var pack = {token:token};\r\n                                        \r\n                                        Requester.getInfo((rpta)=>{\r\n                                            //console.log(\"Infooooo:\",rpta.cont)\r\n                                            pack.usuario={\r\n                                                    usuario:rpta.cont.usr,\r\n                                                    rol:rpta.cont.rol\r\n                                                }\r\n                                            pack.mostrarContenido=true;\r\n                                            this.props.loggedInHandler(pack);\r\n                                        }, (error,errorCompleto)=>{\r\n                                            //error etc\r\n                                        }, null, token)\r\n                                        */\r\n                                    }\r\n                                    }>\r\n                                    Ingresar\r\n                                </Button>\r\n\r\n\r\n                                <MensajeTransaccion\r\n                                    transaccionEnviada={this.state.transaccionEnviada}\r\n                                    responseRecibida={this.state.responseRecibida}\r\n                                    rptaTransaccion={this.state.rptaTransaccion} />\r\n                                {/*\r\n                                <Button color='orange' fluid size='large' onClick={\r\n                                    ()=>{\r\n                                        localStorage.removeItem(\"token\")\r\n                                    }\r\n                                }>sacar token</Button>\r\n                            */}\r\n                            </Segment>\r\n                        </Form>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Auth;","import React from 'react'\r\nimport { Header, Icon, Dimmer, Segment } from 'semantic-ui-react';\r\n\r\nconst Mostrador404 = (props) => {\r\n    return (\r\n        <Segment textAlign=\"center\" style={{ height: \"400px\" }} >\r\n            <Header as='h1' icon style={{ height: \"400px\", margin: \"100px 0px\" }} >\r\n                <Icon name='question circle' />\r\n                404<Header.Subheader>La página que buscas no existe</Header.Subheader>\r\n            </Header>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default Mostrador404","import React from 'react'\r\nimport { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport ViewFiles from '../ViewFiles/ViewFiles'\r\n\r\nimport './MainContent.css';\r\nimport CrearFile from '../ViewFiles/CrearFile/CrearFile';\r\nimport { Grid, Segment, Loader, Dimmer } from 'semantic-ui-react'\r\nimport Inicio from '../Inicio/Inicio';\r\nimport VerServicios from '../VerServicios/VerServicios';\r\nimport CrearServicio from '../VerServicios/CrearServicio/CrearServicio';\r\nimport ListaBiblias from '../VerBiblias/VerBiblias';\r\nimport MostradorProveedores from '../MostradorProovedores/MostradorProveedores';\r\nimport VerClientes from '../VerClientes/VerClientes';\r\nimport VerCalendario from '../Calendario/VerCalendario';\r\nimport Pruebas from '../Test/Pruebas';\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport Auth from '../Auth/Auth';\r\nimport Requester from '../../common/Services/Requester';\r\nimport Mostrador404 from '../../components/Mostrador404/Mostrador404';\r\n\r\nclass MainContent extends Component {\r\n\r\n    state = {\r\n        mostrarContenido: false,\r\n        //logueado: false,\r\n        token: null,\r\n        usuario: null\r\n    }\r\n\r\n    cerrarSesion = () => {\r\n        localStorage.removeItem(\"token\");\r\n\r\n        this.setState({\r\n            token: null,\r\n            mostrarContenido: true,\r\n            usuario: null\r\n        });\r\n    }\r\n\r\n\r\n    loggedInHandler = (obj) => {\r\n        //console.log(\"aaaaaaaa: \"+obj);\r\n        Requester.store.token = obj.token;\r\n        Requester.store.usuario = obj.usuario;\r\n        this.setState({\r\n            token: obj.token,\r\n            mostrarContenido: true,\r\n            usuario: obj.usuario\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        //console.log(\"hah!\");\r\n        var token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            //console.log(\"HAY TOKEN!!!!!\")\r\n            Requester.store.token = token;\r\n            //si hay token guardado\r\n            Requester.getInfo((rpta) => {\r\n                //console.log(\"Info:\", rpta.cont)\r\n                this.setState({\r\n                    usuario:\r\n                    {\r\n                        usuario: rpta.cont.usr,\r\n                        rol: rpta.cont.rol,\r\n                        nombre: rpta.cont.nombrePersona,\r\n                        correo: rpta.cont.correoPersona,\r\n                        genero: rpta.cont.genero\r\n                    },\r\n\r\n                    mostrarContenido: true\r\n                });\r\n            }, (error, errorCompleto) => {\r\n\r\n                this.setState({ mostrarContenido: true, usuario: null });\r\n            }, null, token)\r\n        } else {\r\n            //console.log(\"NO HAY TOKEN!!!!!\")\r\n            //si no hay token guardado\r\n            this.setState({ mostrarContenido: true, usuario: null });\r\n        }\r\n\r\n        //localStorage.removeItem(\"token\");\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.mostrarContenido)\r\n            return (<div style={{height:\"100%\"}}>\r\n                <Dimmer inverted active>\r\n                <Loader size=\"massive\" content=\"\" />\r\n                </Dimmer>\r\n                </div> \r\n                );\r\n        let contenido = (\r\n            <div>\r\n                <Route component={(props) => { return <NavBar usuario={this.state.usuario} history={props.history} cerrarSesionHandler={this.cerrarSesion} /> }} />\r\n                <div className=\"MainContent\">\r\n                    <Grid>\r\n                        <Grid.Row>\r\n                            <Grid.Column width={1}></Grid.Column>\r\n                            <Grid.Column width={14}>\r\n                                {/*<br />*/}\r\n                                <Switch>\r\n                                    <Route path=\"/pruebas\" exact component={Pruebas} />\r\n                                    <Route path=\"/inicio\" exact component={Inicio} />\r\n                                    <Route path=\"/files\" exact component={ViewFiles} />\r\n                                    <Route path=\"/files/crear\" exact component={(a) => { return <CrearFile modo=\"crear\" /> }} />\r\n                                    <Route path=\"/file/ver/:idFile\" exact component={(obj) => {/*console.log(\"@@@@@@@@\",obj);*/return <CrearFile modo=\"ver\" idFile={obj.match.params.idFile} /> }} />\r\n                                    <Route path=\"/file/editar/:idFile\" exact component={(obj) => { return <CrearFile modo=\"editar\" idFile={obj.match.params.idFile} /> }} />\r\n                                    <Route path=\"/servicios\" exact component={VerServicios} />\r\n                                    <Route path=\"/servicios/crear\" exact component={CrearServicio} />\r\n                                    <Route path=\"/biblias\" exact component={ListaBiblias} />\r\n                                    <Route path=\"/proveedores\" exact component={MostradorProveedores} />\r\n                                    <Route path=\"/clientes\" exact component={VerClientes} />\r\n                                    <Route path=\"/calendario/\" exact component={(obj) => { return <VerCalendario/> }} />\r\n                                    <Route path=\"/calendario/:anho/:mes\" component={(obj) => { return <VerCalendario\r\n                                        fechaDefault={new Date(obj.match.params.anho,obj.match.params.mes-1,1)}/> }} />\r\n                                    <Route path=\"/\" exact component={Inicio} />\r\n                                    <Route component={Mostrador404 /*() => { return <div>404!</div> }*/} />\r\n                                </Switch>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={1}></Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </div>\r\n            </div>);\r\n\r\n        if (!this.state.usuario) {\r\n            contenido = (\r\n                <div className=\"LoginContent\">\r\n                    <Switch>\r\n                        {/*<Route path=\"/calendario\" exact component={VerCalendario} />*/}\r\n                        <Route component={() => { return <Auth loggedInHandler={this.loggedInHandler} /> }} />\r\n                    </Switch>\r\n                </div>);\r\n        }\r\n\r\n        return (contenido);\r\n    }\r\n\r\n}\r\n\r\nexport default MainContent;","import React, { Component } from 'react';\nimport './App.css';\nimport MainContent from './containers/MainContent/MainContent';\nimport {BrowserRouter, Route} from 'react-router-dom'; \n\nclass App extends Component {\n  render() {\n    \n    var sectionStyle = {\n      //backgroundImage: `url(${Background})`\n    };\n\n    return (\n      <BrowserRouter>\n          <MainContent/>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}