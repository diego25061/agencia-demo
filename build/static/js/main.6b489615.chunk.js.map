{"version":3,"sources":["assets/logo_yllari.png","components/FileCard/FileCard.js","common/Constantes.js","common/Services/Requester.js","containers/TablaBuscador/TablaBuscador.js","containers/ViewFiles/ViewFiles.js","components/ElementoForm/ElementoForm.js","containers/VerClientes/CamposCrearCliente/CamposCrearCliente.js","containers/ModalTrxSimple/ModalTrxSimple.js","components/ContainedComponent.jsx","containers/MostradorProovedores/ModalCrearEditarProveedor.js","components/MensajeTransaccion/MensajeTransaccion.js","components/InputSearchableData/InputSearchableData.jsx","components/ModalCrearBiblia/ModalCrearBiblia.js","containers/ViewFiles/CrearFile/CrearFile.js","containers/Inicio/Inicio.js","containers/VerServicios/VerServicios.js","containers/VerServicios/CrearServicio/CrearServicio.js","containers/VerBiblias/VerBiblias.js","containers/MostradorProovedores/TabTodos/TabTodos.js","containers/MostradorProovedores/TabHoteles/TabHoteles.js","containers/MostradorProovedores/TabHoteles/TabProovs.js","containers/MostradorProovedores/TabRestaurantes/TabRestaurantes.js","containers/MostradorProovedores/TabTransportes/TabTransportes.js","containers/MostradorProovedores/TabGuias/TabGuias.js","containers/MostradorProovedores/TabOperadores/TabOperadores.js","containers/MostradorProovedores/TabEmpresas/TabEmpresas.js","containers/MostradorProovedores/TabPersonas/TabPersonas.js","containers/MostradorProovedores/MostradorProveedores.js","containers/VerClientes/ModalCrearEditarCliente.js","containers/VerClientes/TabClientes.js","containers/VerClientes/TabTodos/TabTodosClientes.js","containers/VerClientes/VerClientes.js","containers/Calendario/VerCalendario.js","containers/Test/ModalPrueba1.jsx","containers/Test/Pruebas.jsx","components/NavBar/NavBar.js","containers/Auth/Auth.js","containers/MainContent/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Component","CONSTANTES_GLOBALES","ListaMeses","key","text","value","AliasClientes","CLIENTE_DIRECTO","OPERADOR_MAYORISTA","OPERADOR_MINORISTA","AliasProovedores","PERSONA","EMPRESA","HOTEL","RESTAURANTE","TRANSPORTE","GUIA","OPERADOR","TiposClientes","TiposServicios","TiposProveedores","aliasATextoProovedores","alias","console","log","aliasATextoClientes","AliasServicios","SERVICIO","Configuracion","ServerUrl","EnlacesNavBar","nombre","valor","CodigoMesATexto","codigoMes","obj","find","x","RptaTrx","response","_this","this","Object","classCallCheck","set","cont","msj","trace","cod","transaccionExitosa","Requester","direccion","funcSuccess","funcError","funcAlways","headers","axios","get","then","data","err","catch","error","r","objeto","post","resp","getPing","requestBasicoGet","getInfo","token","Authorization","postLogin","requestBasicoPost","postFile","file","postEditarFile","postBorrarFile","idFile","getListadoFiles","getFile","getHoteles","getBibliasDropdownCompleto","getBibliasDetalle","postBiblia","getServiciosGeneralesDetalle","getServiciosTransporteDetalle","postServicio","idProveedor","fecha","tipoServicio","horaRecojo","horaSalida","vuelo","pasajeros","vr","tc","observaciones","ciudad","nombrePasajero","tren","alm","transporte","hotel","getClientesFullDetallado","getClientesListaDropdown","postCliente","tipo","correo","numeroContacto","numeroContactoAdicional","correoAdicional","pais","body","CorreoContacto","numeroAdicional","postEditarCliente","idCliente","postEliminarCliente","id","getHotelesListaDropdown","getProveedores","tipoProveedor","getProveedoresMenosTransportes","getProveedoresTransportes","getProveedoresDropdown","postEliminarProv","postProveedor","postEditarProv","postProvHotel","postEditarProvHotel","postProvOperador","postProvRestaurante","postProvTransporte","postProvGuia","postProvEmpresa","postProvPersona","getCiudades","getPaises","TablaBuscador","state","queryBusqueda","columnasDefault","Header","accessor","Cell","props","react_default","a","createElement","className","_this2","dataFiltrada","query","queryForzado","filter","objetoFila","property","hasOwnProperty","val","String","toLowerCase","includes","Container","fluid","Input","style","padding","placeholder","onChange","e","vaciarQueryForzado","setState","target","es","columns","defaultPageSize","minRows","ViewFiles","open","idFileABorrar","codigoFileABorrar","files","cargarFiles","rpta","listaFiles","map","i","codigo","descripcion","biblia","nombreBiblia","cliente","nombreCliente","fechaCreacion","split","cantServicios","cantTransportes","render","cols","show","urlVer","row","urlEditar","textAlign","react_router_dom","to","Button","circular","icon","color","onClick","openConfirm","size","primary","Segment","containers_TablaBuscador_TablaBuscador","Confirm","content","onCancel","closeConfirm","onConfirm","rptaError","codFile","codigoFile","ElementoForm","titulo","black","children","ContainedComponent","getParentContainer","objectSpread","parent","pack","UpdateParentContainer","defineProperty","ModalCrearEditarProveedor","componentDidMount","CompElegir","elegirTipo","Grid","Row","Column","components_ElementoForm_ElementoForm","grid","Dropdown","search","selection","options","Constantes","event","campos","msjSuccess","modo","msjComp","mensaje","enviado","recibido","Message","Icon","name","loading","Content","respuesta","success","List","Item","negative","Modal","abierto","centered","onClose","enCerrar","sustantivoTitulo","placeholderNombre","iconPosition","placeholderCorreo","placeholderCorreoAdic","correoAdic","num","numAdic","Actions","positive","labelPosition","enEnviar","enEditar","MensajeTransaccion","transaccionEnviada","responseRecibida","headerCargando","textoCargando","rptaTransaccion","headerExito","textoExito","headerError","InputSearchableDataButton","_React$createElement","transparent","list","linkId","disabled","onBlur","foundVal","datalist","setValue","sideButton","React","ModalCrearBiblia","parentComponent","modalBiblia","newState","mes","anho","components_MensajeTransaccion_MensajeTransaccion","EnviarPostBiblia","CampoServicio","margin","as","componente","CrearFile","possibleConstructorReturn","getPrototypeOf","call","servicio","servicioDefault","transporteDefault","modalCliente","undefined","idBiblia","servicios","transportes","bibliasCargaron","clientesCargaron","hotelesCargaron","opcionesBiblia","opcionesCliente","opcionesProveedores","opcionesTransportes","opcionesCiudades","opcionesPaises","modalCrearEditarProveedor","modalCrearProveedorTransporte","transaccionEnviadaCrearFile","responseRecibidaCrearFile","rptaTransaccionCrearFile","mensajeCreacionFile","creacionFileExitosa","contenedorCamposModalCliente","modoVer","modoEditar","estiloTextArea","borderStyle","controlBiblia","InputSearchableData","controlCliente","controlDescripcion","TextArea","rows","width","Form","length","secondary","elem","index","CuerpoServicio","floated","servs","slice","push","CuerpoTransporte","transps","EnviarPostFile","components_ModalCrearBiblia_ModalCrearBiblia","assertThisInitialized","MostradorProovedores_ModalCrearEditarProveedor","enEnviarProovedor","enCerrarModalProveedor","enEnviarProveedorTransporte","enCerrarModalProveedorTransportes","cargarFileBase","cargarClientes","listaOpsCliente","element","clientesCargaronExito","cargarBiblias","listaBiblias","bibliasCargaronExito","cargarCiudades","cargarPaises","cargarProveedoresNoTransp","listaProovs","hotelesCargaronExito","cargarTransportes","controlProveedor","backgroundColor","modal","proovedor","Group","horizontal","verticalAlign","lista","splice","CrearFile_CampoServicio","commonjs","dateFormat","_ref","type","controlProveedorTransporte","trans","_ref2","transs","_ref3","_ref4","func","EnviarPostCliente","camposModalCliente","newStateModalBiblia","abrirModalProveedor","modalCrearEditar","abrirModalProveedorTransporte","Inicio","VerServicios","modalServicio","proveedor","serviciosServ","serviciosTransp","queryForzadoServs","queryForzadoTransps","vaciarQueryForzadoServs","vaciarQueryForzadoTransps","enviarServicio","cargarServsGenerales","cargarServsTransportes","idServicio","cantPasajeros","pasajero","transportista","moment","tz","format","add","CrearServicio","camposTransp","camposServ","ListaBiblias","biblias","navegar","history","onlyUnique","meses","cantidadFiles","sort","b","tertiary","Card","header","extra","fitted","self","indexOf","TabTodos","proveedores","columnasTabla","cargarTodos","proovs","numeroCntctAdicional","TabProovs","confirmacionEliminarAbierta","idEliminar","abrirModalEdicion","original","intentarEliminar","sustPlural","abrirModal","sust","enviarProov","editarProov","enCerrarModal","cancelButton","confirmButton","cerrarConfirmacionEliminar","confirmarEliminar","cargarProovs","funcEnviar","MostradorProveedores","activeIndex","panes","menuItem","Menu","Tab","Pane","MostradorProovedores_TabTodos_TabTodos","TabHoteles_TabProovs","renderActiveOnly","onTabChange","ModalCrearEditarCliente","TabClientes","clientesDirs","nummeroContacto","enviarCliente","numero","editarCliente","correoContacto","VerClientes_ModalCrearEditarCliente","TabTodosClientes","clientes","TabTodos_TabTodosClientes","VerClientes_TabClientes","VerClientes","localizer","BigCalendar","momentLocalizer","VerCalendario","events","height","react_big_calendar_esm","startAccessor","endAccessor","ModalPrueba1","valor1","Pruebas","valor2","Test_ModalPrueba1","NavBar","capitalize","string","charAt","toUpperCase","enlace","usuarioNombre","hora","locale","timerID","setInterval","tick","_this3","genero","usuario","stackable","src","LogoYllari","active","position","lineHeight","fontSize","Flag","cerrarSesionHandler","Auth","clave","maxWidth","Image","Divider","hidden","username","password","localStorage","setItem","usr","rol","nombrePersona","correoPersona","mostrarContenido","loggedInHandler","errorCompleto","MainContent","cerrarSesion","removeItem","getItem","contenido","react_router","component","components_NavBar_NavBar","path","exact","ViewFiles_CrearFile_CrearFile","match","params","containers_Auth_Auth","App","containers_MainContent_MainContent","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b489615.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_yllari.5229e823.png\";","import React from 'react';\r\nimport {Component} from 'react';\r\nimport './FileCard.css';\r\n\r\nclass FileCard extends Component{\r\n\r\n    render(){\r\n        console.log(this.props);\r\n        return (\r\n        <div className=\"FileCard\">\r\n            <b>{this.props.codigo}</b>\r\n            <hr/>\r\n            <p><em>{this.props.descripcion}</em></p>\r\n            <p>Agencia {this.props.agencia}</p>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileCard;","\r\nconst CONSTANTES_GLOBALES={\r\n    ListaMeses: [\r\n        { key: 1, text: 'Enero', value: 1 },\r\n        { key: 2, text: 'Febrero', value: 2 },\r\n        { key: 3, text: 'Marzo', value: 3 },\r\n        { key: 4, text: 'Abril', value: 4 },\r\n        { key: 5, text: 'Mayo', value: 5 },\r\n        { key: 6, text: 'Junio', value: 6 },\r\n        { key: 7, text: 'Julio', value: 7 },\r\n        { key: 8, text: 'Agosto', value: 8 },\r\n        { key: 9, text: 'Septiembre', value: 9 },\r\n        { key: 10, text: 'Octubre', value: 10 },\r\n        { key: 11, text: 'Noviembre', value: 11 },\r\n        { key: 12   , text: 'Diciembre', value: 12 },\r\n    ],\r\n    \r\n    \r\n    AliasClientes:{\r\n        CLIENTE_DIRECTO:\"CLDIR\",\r\n        OPERADOR_MAYORISTA:\"OPMAY\",\r\n        OPERADOR_MINORISTA:\"OPMIN\"\r\n    },\r\n\r\n    AliasProovedores:{\r\n        PERSONA:\"PERSO\",\r\n        EMPRESA:\"EMPRE\",\r\n        HOTEL:\"HOTEL\",\r\n        RESTAURANTE:\"RESTA\",\r\n        TRANSPORTE:\"TRANS\",\r\n        GUIA:\"GUIAA\",\r\n        OPERADOR:\"OPERA\"\r\n    },\r\n    \r\n    TiposClientes:[\r\n        { key: 1, text: 'Cliente directo', value: \"CLDIR\" },\r\n        { key: 2, text: 'Operador mayorista', value: \"OPMAY\" },\r\n        { key: 3, text: 'Operador minorista', value: \"OPMIN\" }\r\n    ],\r\n\r\n    TiposServicios:[\r\n        { key: 1, text: 'Servicio general', value: 1 },\r\n        { key: 2, text: 'Transporte', value: 2 }\r\n    ],\r\n    TiposProveedores:[\r\n        { key: 1, text: 'Persona', value: \"PERSO\"},\r\n        { key: 2, text: 'Empresa', value: \"EMPRE\"},\r\n        { key: 3, text: 'Hotel', value: \"HOTEL\"},\r\n        { key: 4, text: 'Restaurant', value: \"RESTA\"},\r\n        { key: 5, text: 'Transporte', value: \"TRANS\" },\r\n        { key: 6, text: 'Guia', value: \"GUIAA\"},\r\n        { key: 7, text: 'Operador', value: \"OPERA\" }\r\n    ],\r\n\r\n    aliasATextoProovedores : (alias) => {\r\n        console.log(\"a\");\r\n        if(alias){\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.PERSONA)\r\n                return \"Persona\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.EMPRESA)\r\n                return \"Empresa\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.HOTEL)\r\n                return \"Hotel\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.RESTAURANTE)\r\n                return \"Restaurante\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.GUIA)\r\n                return \"Guia\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasProovedores.OPERADOR)\r\n                return \"Operador\"\r\n        }else\r\n            return \"ERROR\";\r\n    },\r\n\r\n    aliasATextoClientes : (alias) => {\r\n        console.log(\"a\",alias);\r\n        if(alias){\r\n            if (alias===CONSTANTES_GLOBALES.AliasClientes.CLIENTE_DIRECTO)\r\n                return \"Cliente directo\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasClientes.OPERADOR_MAYORISTA)\r\n                return \"Operador mayorista\"\r\n            if (alias===CONSTANTES_GLOBALES.AliasClientes.OPERADOR_MINORISTA)\r\n                return \"Operador minorista\"\r\n        }else\r\n            return \"ERROR\";\r\n    },\r\n\r\n    AliasServicios:{\r\n        TRANSPORTE:\"TRANS\",\r\n        SERVICIO:\"SERVI\"\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nconst Rol_Admin=\"Admin\";\r\nconst Rol_Gerente=\"Gerente\";\r\nconst Rol_Operador=\"Operador\";\r\nconst Rol_Observador = \"Observador\";\r\n\r\nconst Configuracion={\r\n    ServerUrl:\"http://diego25061-001-site2.itempurl.com\",\r\n    EnlacesNavBar:[\r\n        {nombre:\"Inicio\", valor:\"/inicio\" },\r\n        {nombre:\"Files\", valor:\"/files\"},\r\n        {nombre:\"Servicios\", valor:\"/servicios\"},\r\n        {nombre:\"Biblias\", valor:\"/biblias\"},\r\n        {nombre:\"Proveedores\", valor:\"/proveedores\"},\r\n        {nombre:\"Clientes\", valor:\"/clientes\"},\r\n        {nombre:\"Calendario\", valor:\"/calendario\"},\r\n    ]\r\n}\r\n\r\nconst CodigoMesATexto = (codigoMes) => {\r\n    if(codigoMes){\r\n        var obj = CONSTANTES_GLOBALES.ListaMeses.find(x=> x.key === codigoMes );\r\n        console.log(obj);\r\n        if(obj){\r\n            return obj.text;\r\n        }else{\r\n            return \"error\";\r\n        }\r\n    }\r\n}\r\n\r\nclass RptaTrx{\r\n    cont;\r\n    msj;\r\n    trace;\r\n    cod;\r\n    constructor(response){\r\n        if(response){\r\n            this.cont = response.cont;\r\n            this.msj = response.msj;\r\n            this.trace = response.trace;\r\n            this.cod = response.cod;\r\n\r\n            if(!this.cont || !this.cod)\r\n                this.cod=0;\r\n\r\n        }\r\n    }\r\n\r\n    set=(cont,msj,trace,cod)=>{\r\n        this.cont = cont;\r\n        this.msj = msj;\r\n        this.trace = trace;\r\n        this.cod = cod;\r\n    };\r\n\r\n    transaccionExitosa=()=>{\r\n        return this.cod!=0\r\n    }\r\n}\r\n\r\nexport {Configuracion, RptaTrx, CodigoMesATexto};\r\nexport default CONSTANTES_GLOBALES;","import axios from 'axios';\r\nimport CONSTANTES_GLOBALES, {\r\n    RptaTrx,\r\n    Configuracion\r\n} from '../Constantes';\r\n\r\n\r\nclass Requester {\r\n\r\n    static requestBasicoGet(direccion, funcSuccess, funcError, funcAlways, headers) {\r\n        \r\n        axios.get(direccion,\r\n            headers? {headers:headers}: null)\r\n            .then(response => {\r\n                try {\r\n                    if (funcSuccess)\r\n                        funcSuccess(response.data)\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n            }).catch(error => {\r\n                if (funcError) {\r\n                    if (error.response) {\r\n                        if (error.response.data)\r\n                            funcError(new RptaTrx(error.response.data));\r\n                        else {\r\n                            var r = new RptaTrx();\r\n                            r.set(null, \"Servidor inaccesible\", null, 0);\r\n                            funcError(r);\r\n                        }\r\n                    } else {\r\n                        //si hay un error donde el server ni responde\r\n                        var r = new RptaTrx();\r\n                        r.set(null, \"Servidor inaccesible\", null, 0);\r\n                        funcError(r);\r\n                    }\r\n                }\r\n            }) //.finally(response=>{})\r\n    }\r\n\r\n\r\n    static requestBasicoPost(direccion, objeto, funcSuccess, funcError, funcAlways) {\r\n        //console.log({enviandoPost: direccion, contenido: objeto, funcS:funcSuccess, funcE:funcError});\r\n        axios.post(direccion, objeto)\r\n            .then(response => {\r\n                try {\r\n                    if (funcSuccess) {\r\n                        if (response.data) {\r\n                            var resp = new RptaTrx();\r\n                            resp.set(response.data.cont, response.data.msj, response.data.trace, response.data.cod);\r\n                            funcSuccess(resp);\r\n                        }\r\n                    }\r\n                } catch (err) {\r\n                    console.error(err);\r\n                }\r\n            }).catch(error => {\r\n                console.error(\"Error en POST!\",error);\r\n                if (funcError) {\r\n                    if (error.response) {\r\n                        if (error.response.data) {\r\n                            funcError(new RptaTrx(error.response.data, error));\r\n                        } else {\r\n                            var r = new RptaTrx();\r\n                            r.set(null, \"Servidor inaccesible\", null, 0);\r\n                            funcError(r);\r\n                        }\r\n                    } else {\r\n                        //si hay un error donde el server ni responde\r\n                        var r = new RptaTrx();\r\n                        r.set(null, \"Servidor inaccesible\", null, 0);\r\n                        funcError(r);\r\n                    }\r\n                }\r\n            })\r\n    }\r\n    //------------------------ MISC -----------------------------------\r\n\r\n    static getPing = (funcSuccess, funcError, funcAlways ) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/misc/ping\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getInfo = (funcSuccess, funcError, funcAlways, token) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/misc/info\", funcSuccess, funcError, funcAlways,{Authorization:\"Bearer \"+token});\r\n    }\r\n\r\n    //------------------------ AUTH -----------------------------------\r\n\r\n    static postLogin = (obj, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/usuarios/authenticate/\", obj, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //------------------------ FILES -----------------------------------\r\n\r\n    static postFile = (file, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/files\", file, funcSuccess, funcError, funcAlways);\r\n    }\r\n    \r\n    static postEditarFile = (file, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/files/editar/\", file, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postBorrarFile = (idFile, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/files/eliminar/\"+idFile, null, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getListadoFiles = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/files\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getFile = (idFile, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/files/\"+idFile, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getHoteles = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/files\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //------------------------ BIBLIAS -----------------------------------\r\n\r\n    ///lista de biblias para elegir\r\n    static getBibliasDropdownCompleto = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/biblias/dropdown\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getBibliasDetalle = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/biblias/\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    static postBiblia = (objeto, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/biblias/\", objeto, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //------------------------ SERVICIOS -----------------------------------\r\n\r\n    static getServiciosGeneralesDetalle = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/servicios/generales\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getServiciosTransporteDetalle = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/servicios/transportes\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postServicio = (\r\n        idFile,\r\n        idProveedor,\r\n        fecha,\r\n        tipoServicio,\r\n        nombre,\r\n        horaRecojo,\r\n        horaSalida,\r\n        vuelo,\r\n        pasajeros,\r\n        vr,\r\n        tc,\r\n        observaciones,\r\n        ciudad,\r\n        nombrePasajero,\r\n        tren,\r\n        alm,\r\n        transporte,\r\n        hotel,\r\n        funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/servicios/\", {\r\n            idFile,\r\n            idProveedor,\r\n            fecha,\r\n            tipoServicio,\r\n            nombre,\r\n            horaRecojo,\r\n            horaSalida,\r\n            vuelo,\r\n            pasajeros,\r\n            vr,\r\n            tc,\r\n            observaciones,\r\n            ciudad,\r\n            nombrePasajero,\r\n            tren,\r\n            alm,\r\n            transporte,\r\n            hotel\r\n        }, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //------------------------ CLIENTES -----------------------------------\r\n\r\n    static getClientesFullDetallado = (alias, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/clientes/\" + alias, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getClientesListaDropdown = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/clientes/dropdown\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postCliente = (tipo, nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, pais, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            CorreoContacto: correo,\r\n            numeroContacto,\r\n            numeroAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad,\r\n            pais\r\n        };\r\n        body.tipo = tipo;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/clientes/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    static postEditarCliente = (tipo, idCliente, nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, pais, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            idCliente,\r\n            nombre,\r\n            CorreoContacto: correo,\r\n            numeroContacto,\r\n            numeroAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad,\r\n            pais\r\n        };\r\n        body.tipo = tipo;\r\n        console.log(\"weeeeeeeee\", body);\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/clientes/editar\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postEliminarCliente = (id, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/clientes/eliminar/\" + id, null, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    //------------------------ HOTELES -----------------------------------\r\n\r\n    static getHotelesListaDropdown = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/proveedores/dropdown/hotel\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    //------------------------ PROVEEDORES -----------------------------------\r\n\r\n    static getProveedores = (tipoProveedor, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/proveedores/\" + tipoProveedor, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    static getProveedoresMenosTransportes = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/proveedores/tipos?incluir=GUIAA,EMPRE,RESTA,HOTEL,PERSO,OPERA\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static getProveedoresTransportes = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/proveedores/tipos?incluir=trans\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    static getProveedoresDropdown = (tipoProveedor, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/proveedores/dropdown/\" + tipoProveedor, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postEliminarProv = (id, funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/eliminar/\" + id, null, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postProveedor = (tipo, nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = tipo;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    static postEditarProv = (alias, idProveedor, nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            idProveedor,\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = alias;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/editar\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //hoteles\r\n\r\n    static postProvHotel = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.HOTEL;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n\r\n    static postEditarProvHotel = (idProveedor, nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            idProveedor,\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.HOTEL;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/editar\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //operadores\r\n\r\n    static postProvOperador = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.OPERADOR;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //restaurantes\r\n\r\n    static postProvRestaurante = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.RESTAURANTE;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //transportes\r\n\r\n    static postProvTransporte = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.TRANSPORTE;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //guias\r\n\r\n    static postProvGuia = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.GUIA;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    //empresas\r\n\r\n    static postProvEmpresa = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.EMPRESA;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //personas\r\n\r\n    static postProvPersona = (nombre, correo, numeroContacto, numeroContactoAdicional, correoAdicional, ciudad, funcSuccess, funcError, funcAlways) => {\r\n        let body = {\r\n            nombre,\r\n            correo,\r\n            numeroContacto,\r\n            numeroContactoAdicional: numeroContactoAdicional,\r\n            correoAdicional,\r\n            ciudad\r\n        };\r\n        body.tipoProveedor = CONSTANTES_GLOBALES.AliasProovedores.PERSONA;\r\n        this.requestBasicoPost(Configuracion.ServerUrl + \"/proveedores/\", body, funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n    //------------------------ CIUDADES -----------------------------------\r\n\r\n    static getCiudades = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/ciudades/\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n\r\n    //------------------------ PAISES -----------------------------------\r\n\r\n    static getPaises = (funcSuccess, funcError, funcAlways) => {\r\n        this.requestBasicoGet(Configuracion.ServerUrl + \"/paises/\", funcSuccess, funcError, funcAlways);\r\n    }\r\n\r\n}\r\n\r\nexport default Requester;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Container , Input} from 'semantic-ui-react';\r\nimport ReactTable from \"react-table\";\r\nimport 'react-table/react-table.css'\r\n\r\n\r\nclass TablaBuscador extends Component{\r\n\r\n    \r\n    state={\r\n        queryBusqueda:\"\"\r\n    }\r\n\r\n\r\n    columnasDefault=[\r\n        {\r\n            Header: 'Columna 1',\r\n            accessor: 'col1'\r\n        },\r\n        {\r\n            Header: 'Columna 2',\r\n            accessor: 'col2',\r\n            Cell: props => <span className='number'>{props.value}</span>\r\n        },\r\n        {\r\n            Header: 'Columna 3!',\r\n            accessor: 'col3',\r\n        }\r\n    ]\r\n\r\n    render(){\r\n\r\n        //filtrando data\r\n        console.log(\"reupdate!\")\r\n        let dataFiltrada = this.props.data;\r\n\r\n        let query = this.state.queryBusqueda;\r\n\r\n        if(this.props.queryForzado)\r\n            query=this.props.queryForzado;\r\n\r\n\t\tif (query) \r\n            if(dataFiltrada)\r\n                dataFiltrada = dataFiltrada.filter(objetoFila => {\r\n                    for (var property in objetoFila) {\r\n                        if (objetoFila.hasOwnProperty(property)) {\r\n                            let val = objetoFila[property];\r\n                            if(val){\r\n                                if(String(val).toLowerCase().includes(query.toLowerCase()))\r\n                                    return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                })\r\n        \r\n\r\n        //mostrando data\r\n        return <Container fluid>\r\n                Buscar registros:{\"      \"}\r\n                <Input style={{padding:\"0px 0px 12px 0px\"}}\r\n                    placeholder=\"Buscar...\"\r\n                    value={query}\r\n                    onChange={e => {\r\n                        if(this.props.queryForzado)\r\n                            this.props.vaciarQueryForzado(); \r\n                        this.setState({queryBusqueda: e.target.value})\r\n                    }}/>\r\n                <br/>\r\n                <ReactTable\r\n                    data={dataFiltrada}\r\n                    columns={this.props.columns ? this.props.columns : this.columnasDefault} \r\n                    defaultPageSize={5}\r\n                    minRows={5}\r\n                    className=\"-highlight\"\r\n                />\r\n            </Container>\r\n    }\r\n}\r\n\r\nexport default TablaBuscador;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport FileCard from '../../components/FileCard/FileCard';\r\nimport { Link } from 'react-router-dom'\r\nimport './ViewFiles.css';\r\nimport { Table, Menu, Icon, Label, Button, Container, Header, Input, Segment, Confirm } from 'semantic-ui-react';\r\nimport ReactTable from \"react-table\";\r\nimport 'react-table/react-table.css'\r\nimport Requester from '../../common/Services/Requester';\r\nimport TablaBuscador from '../TablaBuscador/TablaBuscador';\r\n\r\n//import { MDBDataTable } from 'mdbreact';\r\n\r\n\r\n\r\nclass ViewFiles extends Component {\r\n\tstate = {\r\n\t\t//search:'',\r\n\t\topen: false,\r\n\t\tidFileABorrar: 0,\r\n\t\tcodigoFileABorrar: '',\r\n\t\tfiles: [\r\n\t\t\t//{codigo: \"23123\", descripcion: \"descripcion del file\", biblia:\"2018, mayo\", cliente:\"nts\", fecha:\"2/05/2019\", estado:\"activo\", cantServicios: \"2\", cantTransportes: \"3\" },\r\n\t\t]\r\n\t}\r\n\r\n\tcargarFiles = () => {\r\n\t\tRequester.getListadoFiles(rpta => {\r\n\t\t\tlet listaFiles = rpta.cont.map((e, i) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tidFile: e.id,\r\n\t\t\t\t\tcodigo: e.codigo,\r\n\t\t\t\t\tdescripcion: e.descripcion,\r\n\t\t\t\t\tbiblia: e.nombreBiblia,\r\n\t\t\t\t\tcliente: e.nombreCliente,\r\n\t\t\t\t\tfecha: e.fechaCreacion.split(\" \")[0],\r\n\t\t\t\t\tcantServicios: e.cantServicios,\r\n\t\t\t\t\tcantTransportes: e.cantTransportes\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.setState({ files: listaFiles });\r\n\t\t});\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.cargarFiles();\r\n\t}\r\n\r\n\trender=()=> {\r\n\t\tconst cols = [\r\n\t\t\t{\r\n\t\t\t\tHeader: 'id',\r\n\t\t\t\taccessor: 'idFile',\r\n\t\t\t\tshow: false\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Codigo',\r\n\t\t\t\taccessor: 'codigo' // String-based value accessors!\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Descripcion',\r\n\t\t\t\taccessor: 'descripcion',\r\n\t\t\t\tCell: props => <span className='number'>{props.value}</span> // Custom cell components!\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Biblia',\r\n\t\t\t\taccessor: 'biblia',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Cliente',\r\n\t\t\t\taccessor: 'cliente',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Fecha registro',\r\n\t\t\t\taccessor: 'fecha',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Cant. servicios',\r\n\t\t\t\taccessor: 'cantServicios',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Cant. Transportes',\r\n\t\t\t\taccessor: 'cantTransportes',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Accion',\r\n\t\t\t\tCell: props => {\r\n\t\t\t\t\t//console.log(props);\r\n\t\t\t\t\tlet urlVer = \"/file/ver/\" + props.row.idFile;\r\n\t\t\t\t\tlet urlEditar = \"/file/editar/\" + props.row.idFile;\r\n\t\t\t\t\treturn <Container textAlign=\"center\">\r\n\t\t\t\t\t\t<Link to={urlVer}>\r\n\t\t\t\t\t\t\t<Button circular icon=\"eye\"></Button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link to={urlEditar}>\r\n\t\t\t\t\t\t\t<Button circular icon=\"pencil\"></Button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Button circular color=\"red\" icon=\"trash\" onClick={() => { console.log(\"propss\", props); this.openConfirm(props.row.idFile, props.row.codigo) }}>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]\r\n\r\n\t\treturn (<div>\r\n\r\n\t\t\t<Header size=\"large\">Files</Header>\r\n\t\t\t<Container fluid textAlign=\"left\">\r\n\t\t\t\t<Link to=\"/files/crear\">\r\n\t\t\t\t\t<Button primary>Nuevo file</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</Container>\r\n\t\t\t<Header size=\"medium\">Lista de files</Header>\r\n\r\n\t\t\t<Segment>\r\n\t\t\t\t<TablaBuscador data={this.state.files} columns={cols} />\r\n\t\t\t</Segment>\r\n\r\n\t\t\t<Confirm content={\"Seguro que deseas eliminar el file '\" + this.state.codigoFileABorrar + \"' ?\"}\r\n\t\t\t\topen={this.state.open}\r\n\t\t\t\tonCancel={this.closeConfirm}\r\n\t\t\t\tonConfirm={() => {\r\n\t\t\t\t\tRequester.postBorrarFile(this.state.idFileABorrar,\r\n\t\t\t\t\t\t(rpta)=>{this.cargarFiles();},\r\n\t\t\t\t\t\t(rptaError)=>{this.cargarFiles();});\r\n\t\t\t\t\tthis.closeConfirm();\r\n\t\t\t\t}} />\r\n\r\n\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\r\n\topenConfirm = (idFile, codFile) => this.setState({ open: true, idFileABorrar: idFile, codigoFileABorrar: codFile })\r\n\tcloseConfirm = () => {\r\n\t\tthis.setState({ open: false, idFileABorrar: 0, codigoFile: '' });\r\n\t}\r\n}\r\nexport default ViewFiles;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Header, Container,Grid } from 'semantic-ui-react';\r\n\r\nclass ElementoForm extends Component{\r\n    render(){\r\n        let e = this.props.titulo;\r\n        if(this.props.black)\r\n            e = <b>{e}</b>;\r\n\r\n        let obj = \r\n        <Container fluid>\r\n            <p>{e}</p>\r\n            {this.props.children}\r\n        </Container>\r\n/*\r\n        if(this.props.grid)\r\n            obj = <Grid.Row>\r\n                <Grid.Column>\r\n                    {obj}\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n\r\n*/\r\n        return obj;\r\n    }\r\n\r\n}\r\n\r\nexport default ElementoForm;","import React from 'react'\r\nimport {Component} from 'react';\r\nimport ElementoForm from '../../../components/ElementoForm/ElementoForm';\r\nimport { Dropdown, Input, Icon, Grid} from 'semantic-ui-react';\r\nimport Constantes from '../../../common/Constantes';\r\n\r\nclass CamposCrearCliente extends Component{\r\n    \r\n    componentDidMount(){\r\n        //this.props.contCliente.campos = {};\r\n    }\r\n\r\n    render(){\r\n        return <Grid>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <ElementoForm titulo=\"Nombre *\">\r\n                        <Input fluid placeholder=\"Universal\" \r\n                            onChange={(event)=>{ this.props.contenedor.nombre=event.target.value; /*this.props.contenedor.ff();*/ }}>\r\n                        </Input>\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n\r\n                <ElementoForm titulo=\"Tipo *\">\r\n                    <Dropdown placeholder=\"Operador\" selection fluid search options={Constantes.TiposClientes}\r\n                        onChange = {(event,data)=>{this.props.contenedor.tipo=data.value}}\r\n                    ></Dropdown>\r\n                </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n                \r\n            <Grid.Row columns={2}>\r\n                <Grid.Column>\r\n\r\n                <ElementoForm titulo=\"Correo de contacto\">\r\n                    <Input placeholder=\"correo@gmail.com\" iconPosition=\"left\" fluid \r\n                        onChange={(event)=>{this.props.contenedor.correo=event.target.value}}>\r\n                        <Icon name=\"at\"></Icon>\r\n                        <input />\r\n                    </Input>\r\n                </ElementoForm>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <ElementoForm titulo=\"Correo adicional\">\r\n                    <Input placeholder=\"correo@gmail.com\" iconPosition=\"left\" fluid \r\n                        onChange={(event)=>{this.props.contenedor.correoAdicional=event.target.value}}>\r\n                        <Icon name=\"at\"></Icon>\r\n                        <input />\r\n                    </Input>\r\n                </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n                \r\n            <Grid.Row columns={2}>\r\n                <Grid.Column>\r\n                    <ElementoForm titulo=\"Numero contacto\">\r\n                        <Input placeholder=\"(511)97985020\" fluid onChange={(event)=>{this.props.contenedor.numContacto=event.target.value}}></Input>\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                    <ElementoForm titulo=\"Numero contacto adicional\">\r\n                        <Input placeholder=\"(511)97985020\" fluid onChange={(event)=>{this.props.contenedor.numContactoAdic=event.target.value}}></Input>\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row columns={2}>\r\n                <Grid.Column>\r\n                    <ElementoForm titulo=\"Pais\">\r\n                        <Input placeholder=\"Colombia\" fluid onChange={(event)=>{this.props.contenedor.pais=event.target.value}}></Input>\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                    <ElementoForm titulo=\"Ciudad\">\r\n                        <Input placeholder=\"Bogotá\" fluid onChange={(event)=>{this.props.contenedor.ciudad=event.target.value}}></Input>\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    }\r\n}\r\n\r\nexport default CamposCrearCliente;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button,Modal } from 'semantic-ui-react';\r\n\r\n\r\nclass ModalTrxSimple extends Component{\r\n    state={\r\n        abierto:false\r\n    }\r\n\r\n    abrir(){\r\n        this.setState({abierto:true});\r\n    }\r\n\r\n    render(){\r\n        return <Modal size={this.props.size?this.props.size:\"small\"}\r\n        open ={this.state.abierto} \r\n        centered={false} \r\n        onClose={() => {this.setState({abierto:false})}}>\r\n                <Modal.Header>{this.props.titulo}</Modal.Header>\r\n                <Modal.Content>{this.props.children}</Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button positive icon='checkmark' labelPosition='right' content={this.props.textoAceptar} onClick={this.props.enAceptar}/>\r\n                    <Button negative onClick={()=>{if(this.props.enCancelar) this.props.enCancelar(); this.setState({abierto:false})}}>{this.props.textoCancelar}</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n    }\r\n}\r\n\r\n\r\nexport default ModalTrxSimple;","import React from 'react'\r\nimport {Component} from 'react'\r\n\r\nclass ContainedComponent extends Component{\r\n    \r\n    getParentContainer = () => {\r\n        return { ...this.props.parent.state[this.props.pack] };\r\n    }\r\n\r\n    UpdateParentContainer = (cont) => {\r\n        this.props.parent.setState({ [this.props.pack]: cont })\r\n    }\r\n}\r\n\r\nexport default ContainedComponent;","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Button, Container, Message, Icon, Input, Modal, Grid, Dropdown } from 'semantic-ui-react';\r\nimport ElementoForm from '../../components/ElementoForm/ElementoForm';\r\nimport Constantes from '../../common/Constantes';\r\nimport ContainedComponent from '../../components/ContainedComponent';\r\n\r\nclass ModalCrearEditarProveedor extends ContainedComponent {\r\n\r\n    componentDidMount=()=>{\r\n        console.log(\"Contenedor: \",this.getParentContainer());\r\n    }\r\n    render() {\r\n        var CompElegir = ''\r\n        if (this.props.elegirTipo) {\r\n            CompElegir = <Grid.Row>\r\n                <Grid.Column>\r\n                    <ElementoForm grid titulo=\"Tipo de proveedor\">\r\n\r\n                        <Dropdown fluid placeholder='Elegir Tipo'\r\n                            search\r\n                            selection\r\n                            options={Constantes.TiposProveedores}\r\n                            onChange={(event, data) => {\r\n                                let obj = this.getParentContainer();\r\n                                obj.campos.tipo = data.value;\r\n                                this.UpdateParentContainer(obj);\r\n                                /*\r\n                                var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                obj.campos.tipo = data.value;\r\n                                this.props.parent.setState({modalCrearEditar:obj});*/\r\n                            }} />\r\n                    </ElementoForm>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        }\r\n\r\n        var msjSuccess = \"Objeto creado\";\r\n        if (/*this.props.parent.state.modalCrearEditar.modo === \"edicion\"*/this.getParentContainer().modo===\"edicion\")\r\n            msjSuccess = \"Objeto editado exitosamente\";\r\n\r\n        var msjComp = <div></div>\r\n        //console.log(\"weee\");\r\n        //console.log(this.props.parent.state.modalCrearEditar);\r\n        if (this.getParentContainer() /* this.props.parent.state.modalCrearEditar */ && this.getParentContainer().mensaje /* this.props.parent.state.modalCrearEditar.mensaje */) {\r\n            var mensaje = /*this.props.parent.state.modalCrearEditar.mensaje;*/this.getParentContainer().mensaje;\r\n            if (mensaje.enviado && !mensaje.recibido) {\r\n                msjComp = <Message icon>\r\n                    <Icon name='circle notched' loading />\r\n                    <Message.Content>\r\n                        <Message.Header>Espere un momento...</Message.Header>\r\n                        Completando la transacción\r\n                    </Message.Content>\r\n                </Message>\r\n            } else\r\n                if (mensaje.recibido) {\r\n                    if (mensaje.respuesta.transaccionExitosa()) {\r\n                        msjComp = <Message success >\r\n                            <Message.Header>Transaccion exitosa</Message.Header>\r\n                            <Message.List>\r\n                                <Message.Item>{msjSuccess}</Message.Item>\r\n                                {mensaje.respuesta.msj ? <Message.Item> {mensaje.respuesta.msj} </Message.Item> : null}\r\n                            </Message.List>\r\n                        </Message>\r\n                    } else {\r\n                        msjComp = <Message negative>\r\n                            <Message.Header>Error en transaccion</Message.Header>\r\n                            <Message.List>\r\n                                <Message.Item>{mensaje.respuesta.msj}</Message.Item>\r\n                                {mensaje.respuesta.trace ? <Message.Item>{mensaje.respuesta.trace}</Message.Item> : null}\r\n                            </Message.List>\r\n                        </Message>\r\n                    }\r\n                }\r\n        }\r\n\r\n        return <Modal size=\"tiny\" open={this.getParentContainer().abierto /* this.props.parent.state.modalCrearEditar.abierto*/} centered={true} onClose={() => {\r\n            this.UpdateParentContainer({ ...this.getParentContainer(), abierto:false });\r\n            this.props.enCerrar();\r\n\r\n            /*var obj= {...this.props.parent.state.modalCrearEditar};\r\n            obj.abierto=false;\r\n            this.props.enCerrar();\r\n            this.props.parent.setState({modalCrearEditar:obj});\r\n            */\r\n        }}>\r\n\r\n            <Modal.Header>{/*this.props.parent.state.modalCrearEditar.modo==='creacion'*/ this.getParentContainer().modo ? 'Crear ' + this.props.sustantivoTitulo : 'Modificar ' + this.props.sustantivoTitulo}</Modal.Header>\r\n\r\n            <Modal.Content>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Nombre\">\r\n                                <Input fluid placeholder={this.props.placeholderNombre} value={this.getParentContainer().campos.nombre/*this.props.parent.state.modalCrearEditar.campos.nombre*/} onChange={(event) => {\r\n                                    /*var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                    obj.campos.nombre = event.target.value;\r\n                                    this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                    let obj = this.getParentContainer();\r\n                                    obj.campos.nombre = event.target.value;\r\n                                    this.UpdateParentContainer(obj);\r\n                                }} />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n                    <Grid.Row columns={2}>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Correo electrónico\">\r\n                                <Input\r\n                                    fluid\r\n                                    iconPosition=\"left\" placeholder={this.props.placeholderCorreo} value={this.getParentContainer().campos.correo/*this.props.parent.state.modalCrearEditar.campos.correo*/} onChange={(event) => {\r\n                                        /*var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.correo = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                        let obj = this.getParentContainer();\r\n                                        obj.campos.correo = event.target.value;\r\n                                        this.UpdateParentContainer(obj);\r\n                                    }}>\r\n                                    <Icon name=\"at\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Correo electrónico adicional\">\r\n                                <Input\r\n                                    fluid\r\n                                    iconPosition=\"left\" placeholder={this.props.placeholderCorreoAdic} value={this.getParentContainer().campos.correoAdic/*this.props.parent.state.modalCrearEditar.campos.correoAdic*/} onChange={(event) => {\r\n                                        /*var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.correoAdic = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                        let obj = this.getParentContainer();\r\n                                        obj.campos.correoAdic = event.target.value;\r\n                                        this.UpdateParentContainer(obj);\r\n                                    }}>\r\n                                    <Icon name=\"at\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n\r\n                    <Grid.Row columns={2}>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Numero contacto\">\r\n                                <Input\r\n                                    fluid\r\n                                    placeholder=\"98957845\"\r\n                                    iconPosition=\"left\"\r\n                                    value={this.getParentContainer().campos.num/*this.props.parent.state.modalCrearEditar.campos.num*/} onChange={(event) => {\r\n                                        /*var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.num = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                        let obj = this.getParentContainer();\r\n                                        obj.campos.num = event.target.value;\r\n                                        this.UpdateParentContainer(obj);\r\n                                    }}>\r\n                                    <Icon name=\"phone\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Numero contacto adicional\">\r\n                                <Input\r\n                                    fluid\r\n                                    placeholder=\"564-8790\"\r\n                                    iconPosition=\"left\"\r\n                                    value={this.getParentContainer().campos.numAdic/*this.props.parent.state.modalCrearEditar.campos.numAdic*/} onChange={(event) => {\r\n                                        /*\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.numAdic = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                        let obj = this.getParentContainer();\r\n                                        obj.campos.numAdic = event.target.value;\r\n                                        this.UpdateParentContainer(obj);\r\n                                    }}>\r\n                                    <Icon name=\"phone\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Ciudad\">\r\n                                <Input fluid placeholder=\"Cusco\"\r\n                                    value={this.getParentContainer().campos.ciudad/*this.props.parent.state.modalCrearEditar.campos.ciudad*/} onChange={(event) => {\r\n                                        /*\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.ciudad = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});*/\r\n                                        let obj = this.getParentContainer();\r\n                                        obj.campos.ciudad = event.target.value;\r\n                                        this.UpdateParentContainer(obj);\r\n                                    }} />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    {CompElegir}\r\n                </Grid>\r\n                {msjComp}\r\n            </Modal.Content>\r\n\r\n            <Modal.Actions>\r\n                <Button negative onClick={() => {\r\n                    /*\r\n                    var obj= {...this.props.parent.state.modalCrearEditar};\r\n                    obj.abierto=false;\r\n                    this.props.enCerrar();\r\n                    this.props.parent.setState({modalCrearEditar:obj});*/\r\n                    let obj = this.getParentContainer();\r\n                    obj.abierto = false;\r\n                    this.UpdateParentContainer(obj);\r\n                    this.props.enCerrar();\r\n                }}>\r\n                    Cancelar\r\n                </Button>\r\n                {\r\n                    this.getParentContainer().modo /*this.props.parent.state.modalCrearEditar.modo*/ === 'creacion' ?\r\n                        <Button positive icon='checkmark' labelPosition='right' content='Crear' onClick={this.props.enEnviar} /> :\r\n                        <Button color=\"yellow\" icon='checkmark' labelPosition='right' content='Modificar' onClick={this.props.enEditar} />\r\n                }\r\n            </Modal.Actions>\r\n\r\n        </Modal>\r\n\r\n    }\r\n}\r\nexport default ModalCrearEditarProveedor;","import React from 'react';\r\nimport { Message, Icon} from 'semantic-ui-react';\r\n\r\n/**\r\n * \r\n * @param {*} props \r\n */\r\n\r\nconst MensajeTransaccion = ( props ) => {\r\n\r\n    let msj = <div></div>\r\n    \r\n    console.log(props)\r\n\r\n    //let contenedor = props.contenedor;\r\n    /*\r\n    transaccionEnviada:false,\r\n    responseRecibida:false,\r\n    rptaTransaccion:null,*/\r\n    if(props){\r\n        if (props.transaccionEnviada && !props.responseRecibida){\r\n            msj = <Message icon>\r\n                <Icon name='circle notched' loading />\r\n                <Message.Content>\r\n                    <Message.Header>{props.headerCargando ? props.headerCargando : \"Espere un momento...\"}</Message.Header>\r\n                    {props.textoCargando ? props.textoCargando : \"Enviando petición\"}\r\n                </Message.Content>\r\n            </Message>\r\n        }else\r\n        if (props.responseRecibida){\r\n            //console.log(props.parentComponent.state.modalBiblia)\r\n            if(props.rptaTransaccion.transaccionExitosa()){\r\n                msj = <Message success >\r\n                    <Message.Header>{props.headerExito ? props.headerExito : \"Transaccion exitosa\"}</Message.Header>\r\n                    <Message.List>\r\n                        {props.textoExito/*<Message.Item>Puede usar la biblia nueva.</Message.Item>*/}\r\n                        {props.rptaTransaccion.msj?<Message.Item>{props.rptaTransaccion.msj}</Message.Item>:null}\r\n                    </Message.List>\r\n                </Message>\r\n            }else {\r\n                msj = <Message negative>\r\n                    <Message.Header>{props.headerError?props.headerError:\"Error en transaccion\"}</Message.Header>\r\n                    <Message.List>\r\n                        {props.rptaTransaccion.msj?<Message.Item>{props.rptaTransaccion.msj}</Message.Item>:null}\r\n                        {props.rptaTransaccion.trace?<Message.Item>{props.rptaTransaccion.trace}</Message.Item>:null}\r\n                    </Message.List>\r\n                </Message>\r\n            }\r\n        }\r\n\r\n        return msj;\r\n    }\r\n\r\n}\r\n/*\r\nclass MensajeTransaccion extends Component{\r\n\r\n    state={\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n    }\r\n\r\n}*/\r\n\r\nexport default MensajeTransaccion;","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Input , Dropdown,Button} from 'semantic-ui-react';\r\n\r\n//class InputSearchableData extends Component {\r\n\r\n/**\r\n * Input que se comporta como un searchable dropdown y fuerza que haya un valor igual a alguno de la lista.\r\n * Se le puede poner un boton al lado para facilitar el enlazado de objetos en forms complejos\r\n * @param {*} datalist\r\n *La datalist es una lista de objetos {text:\"texto\",value:\"0\"}.\r\n * \r\n */\r\nclass InputSearchableDataButton extends React.Component {\r\n\r\n    render = () => {\r\n        let control = <div>\r\n            <Input /* iconPosition='left'*/ transparent={this.props.transparent} list={this.props.linkId} loading={this.props.loading}\r\n                disabled={this.props.disabled} placeholder={this.props.placeholder}\r\n                fluid={this.props.fluid}\r\n                value={this.props.value}\r\n                onBlur={(event, data) => {/*\r\n                console.log(\"proovs! \",this.state.opcionesProveedores);\r\n                console.log(\"event! \",event.target.value);\r\n                console.log(\"data! \",data);*/\r\n                    if (event.target.value) {\r\n                        let foundVal = this.props.datalist.find((obj) => {\r\n                            /*\r\n                            console.log(\"vallllllllllllll\",obj.text);\r\n                            if(obj.text.includes(event.target.value))\r\n                                console.log(obj.text);*/\r\n                            return obj.text.includes(event.target.value)\r\n                        });\r\n                        if (foundVal) {\r\n\r\n                            this.props.setValue(foundVal);\r\n                            /*\r\n                            //console.log(\"VAL!\",foundVal)\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[this.props.index].proveedor = foundVal.text;\r\n                            this.setState({ servicios: servs });*/\r\n                        } else {\r\n                            this.props.setValue({});\r\n                            /*\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[this.props.index].proveedor = \"\";\r\n                            this.setState({ servicios: servs });*/\r\n                        }\r\n                    } else {\r\n                        this.props.setValue({});\r\n                        /*\r\n                        var servs = this.state.servicios.slice();\r\n                        servs[this.props.index].proveedor = \"\";\r\n                        this.setState({ servicios: servs });*/\r\n                    }\r\n                }}\r\n                onChange={(event) => {\r\n\r\n                    this.props.setValue(event.target.value);\r\n                    /*\r\n                    var servs = this.state.servicios.slice();\r\n                    servs[this.props.index].proveedor = event.target.value;\r\n                    this.setState({ servicios: servs });*/\r\n                }}>\r\n                {/*\r\n            <Icon name='lightning' />*/}\r\n                <input />\r\n                {this.props.sideButton}\r\n            </Input>\r\n            <datalist id={this.props.linkId}>\r\n                {this.props.datalist.map(e => <option value={e.text} />)}\r\n            </datalist>\r\n        </div>\r\n\r\n        let control2 = <div>\r\n            <Dropdown\r\n                placeholder={this.placeholder}\r\n                search\r\n                selection\r\n                options={this.props.datalist}\r\n                loading={this.props.loading}\r\n                disabled={this.props.disabled}\r\n                placeholder={this.props.placeholder}\r\n                value={this.props.value}\r\n                onChange={this.props.onChange}\r\n            />\r\n            {this.props.sideButton}\r\n        </div>\r\n        return control2;\r\n    }\r\n\r\n}\r\n\r\nexport default InputSearchableDataButton;","import React from 'react';\r\nimport {  Icon,  Message, Dropdown, Modal, Button, Input, Grid} from 'semantic-ui-react';\r\nimport ElementoForm from '../ElementoForm/ElementoForm';\r\nimport CONSTANTES_GLOBALES from '../../common/Constantes';\r\nimport MensajeTransaccion from '../MensajeTransaccion/MensajeTransaccion';\r\n\r\n/**\r\n * \r\n * @param {*} props Requiere un state parent con la siguiente estructura.\r\n * ```jsx\r\n * \r\n    state = { ...\r\n        modalBiblia:{\r\n            abierto:false,\r\n            transaccionEnviada:false,\r\n            responseRecibida:false,\r\n            rptaTransaccion:null,\r\n            campos:{\r\n                mes:null,\r\n                anho:null\r\n            }\r\n        }\r\n        ...\r\n    } ```\r\n\r\n */\r\nconst ModalCrearBiblia = (props) => {\r\n           \r\n    console.log(\"props:\",props);\r\n    return (\r\n    <Modal size=\"tiny\" open ={props.parentComponent.state.modalBiblia.abierto} centered={true} onClose={() => {var obj = {...props.parentComponent.state.modalBiblia};\r\n        obj.abierto=false;\r\n        props.parentComponent.setState({modalBiblia:obj});}}>\r\n        <Modal.Header>Nueva biblia</Modal.Header>\r\n        <Modal.Content>\r\n            <Grid>\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <ElementoForm titulo=\"Mes\">\r\n                            <Dropdown placeholder=\"Junio\" fluid search selection options={CONSTANTES_GLOBALES.ListaMeses} \r\n                                onChange = {(event,data)=>{\r\n                                    var newState = {...props.parentComponent.state};\r\n                                    newState.modalBiblia.campos.mes= data.value;\r\n                                    props.parentComponent.setState(newState);\r\n                                    }}/>\r\n                        </ElementoForm>    \r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <ElementoForm titulo=\"Año\">\r\n                            <Input fluid placeholder=\"Año\" onChange={(event)=>{\r\n                                    var newState = {...props.parentComponent.state};\r\n                                    newState.modalBiblia.campos.anho=event.target.value;\r\n                                    props.parentComponent.setState(newState);\r\n                                }}></Input>\r\n                        </ElementoForm>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            <MensajeTransaccion \r\n                transaccionEnviada = {props.parentComponent.state.modalBiblia.transaccionEnviada} \r\n                responseRecibida = {props.parentComponent.state.modalBiblia.responseRecibida}\r\n                rptaTransaccion = {props.parentComponent.state.modalBiblia.rptaTransaccion}\r\n                textoExito = \"Puede usar la nueva biblia\"\r\n            />\r\n            {/*msj*/}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n            <Button negative onClick={() => {var obj = {...props.parentComponent.state.modalBiblia};\r\n                obj.abierto=false;\r\n                props.parentComponent.setState({modalBiblia:obj});}}>\r\n                Cancelar\r\n            </Button>\r\n            <Button positive icon='checkmark' labelPosition='right' content='Crear' onClick={props.parentComponent.EnviarPostBiblia} />\r\n        </Modal.Actions>\r\n    </Modal>)    \r\n}\r\n\r\nexport default ModalCrearBiblia;","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Dropdown, Input, TextArea, Form, Grid, Segment, Button, Icon, Label, Table, Message, Popup, Header, Modal, Container } from 'semantic-ui-react'\r\n\r\nimport ElementoForm from '../../../components/ElementoForm/ElementoForm';\r\nimport Constantes, { RptaTrx } from '../../../common/Constantes';\r\nimport { Configuracion } from '../../../common/Constantes';\r\nimport CamposCrearCliente from '../../VerClientes/CamposCrearCliente/CamposCrearCliente';\r\n\r\n//date pickers\r\nimport { DateInput, TimeInput, DateTimeInput, DatesRangeInput } from 'semantic-ui-calendar-react';\r\nimport axios from 'axios';\r\nimport ModalTrxSimple from '../../ModalTrxSimple/ModalTrxSimple';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport ModalCrearEditarProveedor from '../../MostradorProovedores/ModalCrearEditarProveedor';\r\nimport MensajeTransaccion from '../../../components/MensajeTransaccion/MensajeTransaccion';\r\n\r\nimport '../CrearFile/CrearFile.css'\r\nimport InputSearchableDataButton from '../../../components/InputSearchableData/InputSearchableData';\r\nimport ModalCrearBiblia from '../../../components/ModalCrearBiblia/ModalCrearBiblia';\r\n\r\nconst CampoServicio = (props) => {\r\n    return <Segment style={{ padding: \"7px\" }}><Header style={{ margin: \"-2px 0px 4px 0px\" }} as=\"h4\">{props.titulo}</Header>{props.componente}</Segment>\r\n}\r\n\r\n\r\nclass CrearFile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //this.modalClientesRef = React.createRef();\r\n    }\r\n\r\n    servicio = (fecha, ciudad, nombre, pasajeros, nombrePasajero, tren, alm, observaciones, idProveedor) => {\r\n        return { fecha, ciudad, nombre, pasajeros, nombrePasajero, tren, alm, observaciones, idProveedor };\r\n    }\r\n    transporte = (fecha, ciudad, horaRecojo, horaSalida, vuelo, nombre, pasajeros, nombrePasajero, vr, tc, idProveedor, observaciones) => {\r\n        return { fecha, ciudad, horaRecojo, horaSalida, vuelo, nombre, pasajeros, nombrePasajero, vr, tc, idProveedor, observaciones };\r\n    }\r\n\r\n    servicioDefault = () => {\r\n        return this.servicio('', '', '', 0, '', '', '', '')\r\n    }\r\n    transporteDefault = () => {\r\n        return this.transporte('', '', '', '', '', '', 0, '', '', '', '', '')\r\n    }\r\n\r\n    state = {\r\n        //datos de modal biblia\r\n        modalCliente: {\r\n            //abierto:false,\r\n            transaccionEnviada: false,\r\n            responseRecibida: false,\r\n            rptaTransaccion: null\r\n        },\r\n\r\n        modalBiblia: {\r\n            abierto: false,\r\n            transaccionEnviada: false,\r\n            responseRecibida: false,\r\n            rptaTransaccion: null,\r\n\r\n            campos: {\r\n                mes: null,\r\n                anho: null\r\n            }\r\n        },\r\n\r\n        //datos de file\r\n        idFile: undefined,\r\n        codigo: '',\r\n        descripcion: '',\r\n        idBiblia: undefined,\r\n        idCliente: undefined,\r\n\r\n        servicios: [\r\n            //this.servicioDefault()\r\n        ],\r\n        transportes: [],\r\n\r\n        //opciones a elegir\r\n        bibliasCargaron: false,\r\n        //bibliasCargaronExito: true,\r\n\r\n        clientesCargaron: false,\r\n        //clientesCargaronExito: true,\r\n\r\n        hotelesCargaron: false,\r\n        //hotelesCargaronExito: true,\r\n\r\n        opcionesBiblia: [/*{value:1, text:'mayo, 2019'}*/],\r\n        opcionesCliente: [/*{value:1, text:''}*/],\r\n        opcionesProveedores: [/*{value:1, text:'juancito'}*/],\r\n        opcionesTransportes: [/*{value:1, text:'juancito'}*/],\r\n        opcionesCiudades: [],\r\n        opcionesPaises: [],\r\n\r\n\r\n        modalCrearEditarProveedor: {\r\n            //creacion o edicion\r\n            modo: \"creacion\",\r\n            abierto: false,\r\n\r\n            mensaje: {\r\n                enviado: false,\r\n                recibido: false,\r\n                respuesta: null\r\n            },\r\n\r\n            campos: {\r\n                id: '',\r\n                nombre: '',\r\n                correo: '',\r\n                correoAdic: '',\r\n                num: '',\r\n                numAdic: '',\r\n                ciudad: '',\r\n                tipo: ''\r\n            }\r\n        },\r\n\r\n        modalCrearProveedorTransporte: {\r\n            modo: \"creacion\",\r\n            abierto: false,\r\n\r\n            mensaje: {\r\n                enviado: false,\r\n                recibido: false,\r\n                respuesta: null\r\n            },\r\n\r\n            campos: {\r\n                id: '',\r\n                nombre: '',\r\n                correo: '',\r\n                correoAdic: '',\r\n                num: '',\r\n                numAdic: '',\r\n                ciudad: '',\r\n                tipo: ''\r\n            }\r\n        },\r\n\r\n        transaccionEnviadaCrearFile: false,\r\n        responseRecibidaCrearFile: false,\r\n        rptaTransaccionCrearFile: null,\r\n\r\n        mensajeCreacionFile: \"\",\r\n        creacionFileExitosa: false\r\n    }\r\n\r\n\r\n    contenedorCamposModalCliente = {\r\n        //ff:()=>{console.log(this.contCliente)},\r\n        //funcCrearCliente:()=>{}\r\n    }\r\n\r\n\r\n    modoVer = () => {\r\n        return this.props.modo === \"ver\";\r\n    }\r\n\r\n    modoEditar = () => {\r\n        return this.props.modo === \"editar\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"PROPS\", this.props);\r\n        //Requester.getListadoFiles(this.filesRecibidos,this.filesError);\r\n\r\n\r\n        if (this.props.modo === \"ver\" || this.props.modo === \"editar\") {\r\n            this.cargarFileBase();\r\n        }\r\n        if (this.props.modo === \"crear\" || this.props.modo === \"editar\") {\r\n            this.cargarClientes();\r\n            this.cargarBiblias();\r\n            this.cargarProveedoresNoTransp();\r\n            this.cargarTransportes();\r\n            this.cargarCiudades();\r\n            //this.cargarPaises();\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n\r\n        let fieldStyle = { margin: \"6px 0 4px 0\" };\r\n        let titulo = \"Nuevo File\";\r\n        if (this.props.modo === \"ver\")\r\n            titulo = \"Ver File\";\r\n        else if (this.props.modo === \"editar\")\r\n            titulo = \"Modificar File\";\r\n\r\n        let estiloTextArea = {};\r\n        if (this.modoVer()) {\r\n            estiloTextArea = { borderStyle: \"none\", color: \"gray\" };\r\n        }\r\n\r\n        let eleccionBiblia = {};\r\n\r\n        let controlBiblia = <InputSearchableDataButton\r\n            loading={!this.state.hotelesCargaron}\r\n            disabled={this.modoVer()}\r\n            placeholder={this.modoVer() ? \"\" : 'Elegir Biblia'}\r\n            datalist={this.state.opcionesBiblia}\r\n            value={this.state.idBiblia}\r\n            sideButton={\r\n                <Button icon primary onClick={() => {\r\n                    var obj = { ...this.state.modalBiblia };\r\n                    obj.abierto = true;\r\n                    this.setState({ modalBiblia: obj });\r\n                }}>\r\n                    <Icon name='plus' />\r\n                </Button>\r\n            }\r\n            onChange={(event, data) => {\r\n                console.log(\"event\", event);\r\n                console.log(\"data\", data);\r\n                this.setState({ idBiblia: data.value })\r\n            }}\r\n        />\r\n\r\n        if (this.modoVer()) {\r\n            controlBiblia = <Input disabled transparent fluid value={this.state.nombreBiblia} ></Input>\r\n        }\r\n\r\n        let controlCliente = <Dropdown fluid\r\n            placeholder='Christian'\r\n            search\r\n            loading={!this.state.bibliasCargaron}\r\n            selection\r\n            value={this.state.idCliente}\r\n            options={this.state.opcionesCliente}\r\n            onChange={(event, data) => {\r\n                this.setState({ idCliente: data.value });\r\n            }}\r\n        />\r\n\r\n        if (this.modoVer()) {\r\n            controlCliente = <Input disabled transparent fluid value={this.state.nombreCliente} ></Input>\r\n        }\r\n\r\n\r\n        let controlDescripcion = <TextArea disabled={this.modoVer()} style={estiloTextArea} placeholder='Descripcion del file' rows={1} value={this.state.descripcion} onChange={(event) => {\r\n            this.setState({ descripcion: event.target.value });\r\n        }} />\r\n\r\n        if (this.modoVer()) {\r\n            controlDescripcion = <Input disabled transparent fluid value={this.state.descripcion} />\r\n        }\r\n\r\n\r\n\r\n        return <div>\r\n            {/*<Button onClick={() => { console.log(\"state\", this.state) }} wee></Button>*/}\r\n            <Header size=\"large\">{titulo}</Header>\r\n            <Segment>\r\n                <Grid columns={2} >\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Header >Datos</Header>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={8}>\r\n                            <ElementoForm titulo=\"Codigo\">\r\n                                <Input disabled={this.modoVer()} transparent={this.modoVer()} fluid placeholder=\"08-020\" value={this.state.codigo} onChange={(event) => {\r\n                                    this.setState({ codigo: event.target.value });\r\n                                }} ></Input>\r\n                            </ElementoForm>\r\n\r\n                        </Grid.Column>\r\n                        <Grid.Column width={8}>\r\n                            <ElementoForm titulo=\"Descripcion\">\r\n                                <Form>\r\n                                    {/*style={{ minHeight: 100 }}*/}\r\n                                    {controlDescripcion}\r\n\r\n                                </Form>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={8}>\r\n                            <ElementoForm titulo=\"Biblia\">\r\n                                <Grid>\r\n                                    <Grid.Row columns='equal'>\r\n\r\n                                        <Grid.Column width={16}>\r\n                                            {controlBiblia}\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column width={8}>\r\n                            <ElementoForm titulo=\"Cliente\">\r\n                                {controlCliente}\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    {/*<Button positive onClick={() => { console.log(this.state) }}>weeee</Button>*/}\r\n                    <Grid.Row>\r\n                        <Grid.Column width={16}>\r\n                            <Header >Servicios</Header> \r\n                            {this.state.servicios.length==0?<Segment secondary textAlign=\"center\" fluid>No hay servicios en este file</Segment>:''}\r\n                            {this.state.servicios.map((elem, index) => {\r\n                                //return this.filaServicio(index);\r\n                                return this.CuerpoServicio({ index: index });\r\n                            })}\r\n                            {this.modoVer() ? <div></div> :\r\n                                <Button content='Agregar servicio' icon='plus' floated=\"left\" labelPosition='right' onClick={() => {\r\n                                    var servs = this.state.servicios.slice();\r\n                                    servs.push(this.servicioDefault());\r\n                                    this.setState({ servicios: servs });\r\n                                }} />\r\n                            }\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={16}>\r\n                            <Header >Transportes</Header>\r\n\r\n                            {this.state.transportes.length==0?<Segment secondary textAlign=\"center\" fluid>No hay transportes en este file</Segment>:''}\r\n                            {this.state.transportes.map((elem, index) => {\r\n                                return this.CuerpoTransporte({ index: index });\r\n                            })}\r\n                            {this.modoVer() ? <div></div> :\r\n                                <Button content='Agregar transporte' icon='plus' labelPosition='right' onClick={() => {\r\n                                    var transps = this.state.transportes.slice();\r\n                                    transps.push(this.transporteDefault());\r\n                                    this.setState({ transportes: transps });\r\n                                }} />\r\n                            }\r\n                            <MensajeTransaccion\r\n                                transaccionEnviada={this.state.transaccionEnviadaCrearFile}\r\n                                responseRecibida={this.state.responseRecibidaCrearFile}\r\n                                rptaTransaccion={this.state.rptaTransaccionCrearFile}\r\n                            //textoExito = \"Puede usar la nueva biblia\"\r\n                            />\r\n\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n                </Grid>\r\n                {this.modoVer() ? <div></div> :\r\n                    <Grid>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Button positive onClick={() => { this.EnviarPostFile() }}>Guardar file</Button>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                }\r\n\r\n            </Segment>\r\n            {/*\r\n            {!this.state.bibliasCargaronExito ? <Message error>Error de conexion: Las biblias no se pueden cargar.</Message> : null}\r\n            {!this.state.clientesCargaronExito ? <Message error>Error de conexion: Los clientes no se pueden cargar.</Message> : null}\r\n            {!this.state.hotelesCargaronExito ? <Message error>Error de conexion: Los hoteles no se pueden cargar.</Message> : null}\r\n            */}\r\n\r\n\r\n            <Container fluid textAlign=\"right\">\r\n            </Container>\r\n\r\n\r\n            <ModalCrearBiblia parentComponent={this} />\r\n\r\n            <ModalCrearEditarProveedor\r\n                parent={this}\r\n                pack=\"modalCrearEditarProveedor\"\r\n                sustantivoTitulo=\"Proveedor Nuevo\"\r\n                elegirTipo\r\n                placeholderNombre=\"Melia\"\r\n                placeholderCorreo=\"ventas@hotelmelia.com\"\r\n                placeholderCorreoAdic=\"contacto.melia@gmail.com\"\r\n                enEnviar={this.enEnviarProovedor}\r\n                enCerrar={this.enCerrarModalProveedor} />\r\n\r\n\r\n            <ModalCrearEditarProveedor parent={this} pack=\"modalCrearProveedorTransporte\" sustantivoTitulo=\"Transportista Nuevo\"\r\n                placeholderNombre=\"Transportista\"\r\n                placeholderCorreo=\"carlos@gmail.com\"\r\n                placeholderCorreoAdic=\"contacto@transportescarlos.com\"\r\n                enEnviar={this.enEnviarProveedorTransporte}\r\n                enCerrar={this.enCerrarModalProveedorTransportes} />\r\n\r\n\r\n            {/*this.ModalCrearBiblia()*/}\r\n            {/*this.ModalCrearCliente()*/}\r\n        </div>\r\n\r\n    }\r\n\r\n    // ------------------------------------------------------------------------- Cargas iniciales\r\n\r\n    cargarFileBase = () => {\r\n        //console.log(\"id:\",this.props)\r\n        Requester.getFile(this.props.idFile,\r\n            rpta => {\r\n                //console.log(\"recibido\",rpta)\r\n                this.setState({\r\n                    idFile: rpta.cont.id,\r\n                    codigo: rpta.cont.codigo,\r\n                    descripcion: rpta.cont.descripcion,\r\n                    idBiblia: rpta.cont.idBiblia,\r\n                    idCliente: rpta.cont.idCliente,\r\n                    nombreBiblia: rpta.cont.nombreBiblia,\r\n                    nombreCliente: rpta.cont.nombreCliente,\r\n                    servicios: rpta.cont.servicios,\r\n                    transportes: rpta.cont.transportes\r\n                });\r\n            },\r\n            rpta => {\r\n\r\n            });\r\n    }\r\n\r\n    cargarClientes = () => {\r\n        Requester.getClientesListaDropdown(rpta => {\r\n            console.log(rpta);\r\n            var listaOpsCliente = rpta.cont.map(element => { return { value: element.value, text: element.text } });\r\n            this.setState({\r\n                clientesCargaronExito: false,\r\n                clientesCargaron: true,\r\n                opcionesCliente: listaOpsCliente\r\n            })\r\n        }, (rptaError) => {\r\n            this.setState({\r\n                clientesCargaronExito: false,\r\n                clientesCargaron: true\r\n            });\r\n        });\r\n    }\r\n\r\n    cargarBiblias = () => {\r\n        Requester.getBibliasDropdownCompleto((rpta) => {\r\n            var listaBiblias = rpta.cont.map(element => { return { value: element.value, text: element.text } });\r\n            this.setState({ opcionesBiblia: listaBiblias });\r\n            this.setState({\r\n                bibliasCargaronExito: false,\r\n                bibliasCargaron: true\r\n            });\r\n        },\r\n            (rptaError) => {\r\n                //console.log(rptaError);\r\n                this.setState({\r\n                    bibliasCargaronExito: false,\r\n                    bibliasCargaron: true,\r\n                });\r\n            })\r\n    }\r\n\r\n    cargarCiudades = () => {\r\n        Requester.getCiudades((rpta) => {\r\n            this.setState({ opcionesCiudades: rpta.cont });\r\n        },\r\n            (rptaError) => {\r\n                console.error(\"Ciudades no cargadas\");\r\n            })\r\n    }\r\n\r\n    cargarPaises = () => {\r\n        Requester.getPaises((rpta) => {\r\n            this.setState({ opcionesPaises: rpta.cont });\r\n        },\r\n            (rptaError) => {\r\n                console.error(\"Paises no cargadas\");\r\n            })\r\n    }\r\n\r\n    cargarProveedoresNoTransp = () => {\r\n        Requester.getProveedoresMenosTransportes((rpta) => {\r\n            var listaProovs = rpta.cont.map(element => { return { value: element.idProveedor, text: element.nombre } });\r\n            this.setState({\r\n                opcionesProveedores: listaProovs,\r\n                hotelesCargaronExito: true,\r\n                hotelesCargaron: true\r\n            });\r\n        }, (rptaError) => {\r\n            //console.log(rptaError);\r\n            this.setState({\r\n                hotelesCargaronExito: false,\r\n                hotelesCargaron: true\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    cargarTransportes = () => {\r\n        Requester.getProveedoresTransportes((rpta) => {\r\n            var listaProovs = rpta.cont.map(element => { return { value: element.idProveedor, text: element.nombre } });\r\n            this.setState({\r\n                opcionesTransportes: listaProovs\r\n            });\r\n        }, (rptaError) => {\r\n        });\r\n    }\r\n\r\n    CuerpoServicio = (props) => {\r\n\r\n        let estiloInputs = {}\r\n        if (this.modoVer())\r\n            estiloInputs = { color: \"black\" };\r\n\r\n        let controlProveedor =\r\n            <InputSearchableDataButton\r\n                loading={!this.state.hotelesCargaron}\r\n                disabled={this.modoVer()}\r\n                placeholder={this.modoVer() ? \"\" : 'Sheraton'}\r\n                datalist={this.state.opcionesProveedores}\r\n                value={this.state.servicios[props.index].idProveedor}\r\n                sideButton={\r\n                    <Button style={{ padding: \"3px 11px\", backgroundColor: \"#00000000\" }} icon onClick={() => {\r\n                        let modal = { ...this.state.modalCrearEditarProveedor, abierto: true };\r\n                        this.setState({ modalCrearEditarProveedor: modal });\r\n                    }}>\r\n                        <Icon name='plus' />\r\n                    </Button>\r\n                }\r\n                onChange={(event, data) => {\r\n                    var servs = this.state.servicios.slice();\r\n                    servs[props.index].idProveedor = data.value;\r\n                    this.setState({ servicios: servs });\r\n                }}\r\n            />\r\n\r\n        if (this.modoVer()) {\r\n            console.log(\"cuerpo: \", this.state.servicios[props.index]);\r\n            controlProveedor = <Input disabled transparent fluid value={this.state.servicios[props.index].proovedor} />\r\n        }\r\n\r\n\r\n        return <Segment.Group>\r\n            <Segment.Group horizontal>\r\n                <Segment style={{ backgroundColor: \"#fff5e6\" }}>\r\n                    <Grid columns=\"equal\">\r\n                        <Grid.Row style={{ padding: \"4px 0px\" }}>\r\n                            <Grid.Column verticalAlign=\"middle\">\r\n                                <Header as=\"h3\">Servicio {props.index + 1}</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column style={{ padding: \"0px 8px\" }}>\r\n\r\n                                {this.modoVer() ? <div></div> :\r\n                                    <Button style={{ padding: \"8px 14px\", margin: \"4px 0px\" }} floated=\"right\" color=\"red\" onClick={() => {\r\n                                        var lista = this.state.servicios.slice();\r\n                                        lista.splice(props.index, 1);\r\n                                        this.setState({ servicios: lista });\r\n                                        //console.log(this.state.servicios)\r\n                                    }}>Borrar</Button>\r\n                                }\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Segment>\r\n            </Segment.Group>\r\n            <Segment.Group horizontal style={{ backgroundColor: \"#fffbf6\" }}>\r\n                <CampoServicio titulo=\"Nombre\" componente={\r\n                    <Input disabled={this.modoVer()} transparent fluid placeholder={this.modoVer() ? \"\" : \"In + city\"}\r\n                        value={this.state.servicios[props.index].nombre}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].nombre = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }} />\r\n                } />\r\n                <CampoServicio titulo=\"Ciudad de destino\" componente={\r\n                    <div>\r\n                        <Input disabled={this.modoVer()} transparent list={'ciudades' + props.index} placeholder={this.modoVer() ? \"\" : 'Lima'} fluid\r\n                            onChange={(event) => {\r\n                                var servs = this.state.servicios.slice();\r\n                                servs[props.index].ciudad = event.target.value;\r\n                                this.setState({ servicios: servs });\r\n                            }} />\r\n                        <datalist id={'ciudades' + props.index}>\r\n                            {this.state.opcionesCiudades.map(e => <option value={e} />)}\r\n                        </datalist>\r\n                    </div>\r\n                } />\r\n                <CampoServicio titulo=\"Fecha\" componente={\r\n                    <DateInput\r\n                        disabled={this.modoVer()}\r\n                        transparent\r\n                        fluid\r\n                        dateFormat=\"YYYY-MM-DD\"\r\n                        name=\"fecha\"\r\n                        placeholder={this.modoVer() ? \"-\" : 'Año-mes-dia'}\r\n                        value={this.state.servicios[props.index].fecha}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"fecha\") {\r\n                                var servs = this.state.servicios.slice();\r\n                                servs[props.index].fecha = value;\r\n                                this.setState({ servicios: servs });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />} />\r\n                <CampoServicio titulo=\"Nombre pasajero\" componente={\r\n                    <Input transparent disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Lewis Hamilton'} fluid value={this.state.servicios[props.index].nombrePasajero}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].nombrePasajero = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }}></Input>} />\r\n                <CampoServicio titulo=\"Cant. pasajeros\" componente={\r\n                    <Input type=\"number\" transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : '4'} value={this.state.servicios[props.index].pasajeros}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].pasajeros = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }}></Input>} />\r\n            </Segment.Group>\r\n            <Segment.Group horizontal style={{ backgroundColor: \"#fffbf6\" }}>\r\n\r\n                <CampoServicio titulo=\"Proveedor\" componente={controlProveedor} />\r\n\r\n                <CampoServicio titulo=\"Tren\" componente={\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Tren'} value={this.state.servicios[props.index].tren}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].tren = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }}></Input>} />\r\n                <CampoServicio titulo=\"ALM\" componente={\r\n\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'ALM'} value={this.state.servicios[props.index].alm}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].alm = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }}></Input>} />\r\n                <CampoServicio titulo=\"Obs\" componente={\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'OBS'} value={this.state.servicios[props.index].observaciones}\r\n                        onChange={(event) => {\r\n                            var servs = this.state.servicios.slice();\r\n                            servs[props.index].observaciones = event.target.value;\r\n                            this.setState({ servicios: servs });\r\n                        }}></Input>\r\n                } />\r\n            </Segment.Group>\r\n        </Segment.Group>\r\n    }\r\n\r\n\r\n    CuerpoTransporte = (props) => {\r\n\r\n        let controlProveedorTransporte =\r\n            <InputSearchableDataButton\r\n                //loading={!this.state.hotelesCargaron}\r\n                disabled={this.modoVer()}\r\n                placeholder={this.modoVer() ? \"\" : 'Transp. Manuel'}\r\n                datalist={this.state.opcionesTransportes}\r\n                value={this.state.transportes[props.index].idProveedor}\r\n                sideButton={\r\n                    <Button style={{ padding: \"3px 11px\", backgroundColor: \"#00000000\" }} icon onClick={() => {\r\n                        let modal = { ...this.state.modalCrearProveedorTransporte, abierto: true };\r\n                        this.setState({ modalCrearProveedorTransporte: modal });\r\n                    }}>\r\n                        <Icon name='plus' />\r\n                    </Button>\r\n                }\r\n                onChange={(event, data) => {\r\n                    var transps = this.state.transportes.slice();\r\n                    transps[props.index].idProveedor = data.value;\r\n                    this.setState({ transportes: transps });\r\n                }}\r\n            />\r\n        if (this.modoVer()) {\r\n            controlProveedorTransporte = <Input disabled transparent fluid value={this.state.transportes[props.index].proovedor} />\r\n        }\r\n\r\n\r\n        return <Segment.Group>\r\n            <Segment.Group horizontal>\r\n                <Segment style={{ backgroundColor: \"#ccebff\" }}>\r\n                    <Grid columns=\"equal\">\r\n                        <Grid.Row style={{ padding: \"4px 0px\" }}>\r\n                            <Grid.Column verticalAlign=\"middle\">\r\n                                <Header as=\"h3\">Transporte {props.index + 1}</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column style={{ padding: \"0px 8px\" }}>\r\n                                {this.modoVer() ? <div></div> :\r\n                                    <Button style={{ padding: \"8px 14px\", margin: \"4px 0px\" }} floated=\"right\" color=\"red\" onClick={() => {\r\n                                        var lista = this.state.transportes.slice();\r\n                                        lista.splice(props.index, 1);\r\n                                        this.setState({ transportes: lista });\r\n                                    }}>Borrar</Button>\r\n                                }\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Segment>\r\n            </Segment.Group>\r\n            <Segment.Group horizontal style={{ backgroundColor: \"#e6f5ff\" }}>\r\n                <CampoServicio titulo=\"Nombre\" componente={\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'APTO / Four points'}\r\n                        value={this.state.transportes[props.index].nombre}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].nombre = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n                <CampoServicio titulo=\"Ciudad de destino\" componente={\r\n                    <div>\r\n                        <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Ciudad'}\r\n                            value={this.state.transportes[props.index].ciudad}\r\n                            onChange={(event) => {\r\n                                var trans = this.state.transportes.slice();\r\n                                trans[props.index].ciudad = event.target.value;\r\n                                this.setState({ transportes: trans });\r\n                            }}></Input>\r\n                    </div>\r\n                } />\r\n                <CampoServicio titulo=\"Fecha ejecucion\" componente={\r\n                    <DateInput\r\n                        transparent\r\n                        fluid\r\n                        name=\"fecha\"\r\n                        dateFormat=\"YYYY-MM-DD\"\r\n                        disabled={this.modoVer()}\r\n                        placeholder={this.modoVer() ? \"\" : 'Año-mes-dia'}\r\n                        value={this.state.transportes[props.index].fecha}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"fecha\") {\r\n                                var transs = this.state.transportes.slice();\r\n                                transs[props.index].fecha = value;\r\n                                this.setState({ transportes: transs });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />} />\r\n                <CampoServicio titulo=\"Nombre pasajero\" componente={\r\n\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Steven Gerard'}\r\n                        value={this.state.transportes[props.index].nombrePasajero}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].nombrePasajero = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n                <CampoServicio titulo=\"Cant. pasajeros\" componente={\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : '4'}\r\n                        value={this.state.transportes[props.index].pasajeros}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].pasajeros = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>} />\r\n            </Segment.Group>\r\n            <Segment.Group horizontal style={{ backgroundColor: \"#e6f5ff\" }}>\r\n                <CampoServicio titulo=\"Proveedor de Transporte\" componente={controlProveedorTransporte\r\n\r\n                    /*\r\n                    <div>\r\n                        <Input icon=\"lightning\" iconPosition=\"left\" list={'transportes' + props.index} transparent fluid\r\n                            disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Transportista'}\r\n                            value={this.state.transportes[props.index].proveedor}\r\n                            onChange={(event) => {\r\n                                var trans = this.state.transportes.slice();\r\n                                trans[props.index].proveedor = event.target.value;\r\n                                this.setState({ transportes: trans });\r\n                            }}></Input>\r\n                        <datalist id={'transportes' + props.index}>\r\n                            {this.state.opcionesTransportes.map(e => <option value={e.text} />)}\r\n                        </datalist>\r\n                    </div>\r\n\r\n\r\n\r\n                        */} />\r\n                <CampoServicio titulo=\"Hora recojo\" componente={\r\n                    <TimeInput\r\n                        transparent\r\n                        fluid\r\n                        name=\"hora\"\r\n                        disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : '0:00'}\r\n                        value={this.state.transportes[props.index].horaRecojo}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"hora\") {\r\n                                var transs = this.state.transportes.slice();\r\n                                transs[props.index].horaRecojo = value;\r\n                                this.setState({ transportes: transs });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />\r\n                } />\r\n                <CampoServicio titulo=\"Hora salida\" componente={\r\n                    <TimeInput\r\n                        transparent\r\n                        fluid\r\n                        name=\"hora\"\r\n                        disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : '0:00'}\r\n                        value={this.state.transportes[props.index].horaSalida}\r\n                        iconPosition=\"left\"\r\n                        onChange={(event, { name, value }) => {\r\n                            if (name === \"hora\") {\r\n                                var transs = this.state.transportes.slice();\r\n                                transs[props.index].horaSalida = value;\r\n                                this.setState({ transportes: transs });\r\n                                console.log(this.state);\r\n                            }\r\n                        }}\r\n                    />\r\n                } />\r\n                <CampoServicio titulo=\"Vuelo\" componente={\r\n                    <Input transparent fluid\r\n                        value={this.state.transportes[props.index].vuelo}\r\n                        disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'Vuelo'}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].vuelo = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n                <CampoServicio titulo=\"V/R\" componente={\r\n\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'V/R'}\r\n                        value={this.state.transportes[props.index].vr}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].vr = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n                <CampoServicio titulo=\"TC\" componente={\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'TC'}\r\n                        value={this.state.transportes[props.index].tc}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].tc = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n                <CampoServicio titulo=\"Obs\" componente={\r\n                    <Input transparent fluid disabled={this.modoVer()} placeholder={this.modoVer() ? \"\" : 'OBS'}\r\n                        value={this.state.transportes[props.index].observaciones}\r\n                        onChange={(event) => {\r\n                            var trans = this.state.transportes.slice();\r\n                            trans[props.index].observaciones = event.target.value;\r\n                            this.setState({ transportes: trans });\r\n                        }}></Input>\r\n                } />\r\n            </Segment.Group>\r\n        </Segment.Group>\r\n    }\r\n\r\n    EnviarPostFile = () => {\r\n\r\n        let obj = {\r\n            id: this.state.idFile,\r\n            idBiblia: this.state.idBiblia,\r\n            idCliente: this.state.idCliente,\r\n            codigo: this.state.codigo,\r\n            descripcion: this.state.descripcion,\r\n            servicios: this.state.servicios,\r\n            transportes: this.state.transportes\r\n        };\r\n\r\n        this.setState({ transaccionEnviadaCrearFile: true });\r\n        console.log(\"file a enviar: \", obj)\r\n        console.log(\"TRANSPORTESSS: \", obj.transportes)\r\n        let func = Requester.postFile;\r\n\r\n        if (this.modoEditar())\r\n            func = Requester.postEditarFile;\r\n\r\n        func(\r\n            obj,\r\n            (rpta) => {\r\n                //console.log(\"exitooo\")\r\n                this.setState({\r\n                    responseRecibidaCrearFile: true,\r\n                    rptaTransaccionCrearFile: rpta,\r\n                    transaccionEnviadaCrearFile: false\r\n                });\r\n            },\r\n            (rpta) => {\r\n                console.log(\"RPTA de error!\", rpta);\r\n                this.setState({\r\n                    responseRecibidaCrearFile: true,\r\n                    rptaTransaccionCrearFile: rpta,\r\n                    transaccionEnviadaCrearFile: false\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    EnviarPostCliente = (camposModalCliente) => {\r\n\r\n        var newState = { ...this.state.modalCliente };\r\n        newState.transaccionEnviada = true;\r\n        this.setState({ modalCliente: newState });\r\n\r\n        Requester.postCliente(this.state.camposModalCliente, (rpta) => {\r\n            var newState = { ...this.state.modalCliente };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rpta;\r\n            this.cargarClientes();\r\n            this.setState({ modalCliente: newState });\r\n        }, (rptaError) => {\r\n            var newState = { ...this.state.modalCliente };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rptaError;\r\n            this.setState({ modalCliente: newState });\r\n        });\r\n\r\n    }\r\n\r\n    // ------------------------------------------------------------------------- Modal clientes\r\n    /*\r\n        EnviarPostBiblia = () => {\r\n    \r\n            var newStateModalBiblia = { ...this.state.modalBiblia };\r\n            newStateModalBiblia.transaccionEnviada = true;\r\n            this.setState({ modalBiblias: newStateModalBiblia });\r\n            console.log(this.state.camposModalBiblia);\r\n    \r\n            Requester.postBiblia(this.state.camposModalBiblia, (rpta) => {\r\n                var newState = { ...this.state.modalBiblia };\r\n                newState.responseRecibida = true;\r\n                newState.rptaTransaccion = rpta;\r\n                this.cargarBiblias();\r\n                this.setState({ modalBiblia: newState });\r\n            }, (rptaError) => {\r\n                console.log(\"error!\")\r\n                console.log(rptaError)\r\n                console.log(this.state.modalBiblia);\r\n                var newState = { ...this.state.modalBiblia };\r\n                newState.responseRecibida = true;\r\n                newState.rptaTransaccion = rptaError;\r\n                console.log(this.state.modalBiblia);\r\n                this.setState({ modalBiblia: newState });\r\n            });\r\n        }\r\n    */\r\n\r\n\r\n    EnviarPostBiblia = () => {\r\n\r\n        var newStateModalBiblia = { ...this.state.modalBiblia };\r\n        newStateModalBiblia.transaccionEnviada = true;\r\n        this.setState({ modalBiblia: newStateModalBiblia });\r\n\r\n        Requester.postBiblia(this.state.modalBiblia.campos, (rpta) => {\r\n            var newState = { ...this.state.modalBiblia };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rpta;\r\n            this.cargarBiblias();\r\n            this.setState({ modalBiblia: newState });\r\n        }, (rptaError) => {\r\n            var newState = { ...this.state.modalBiblia };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rptaError;\r\n            //console.log(this.state.modalBiblia);\r\n            this.setState({ modalBiblia: newState });\r\n        });\r\n    }\r\n\r\n    // ------------------------------------------------------------------------- Modal proveedores todos\r\n\r\n\r\n    abrirModalProveedor = () => {\r\n        var obj = { ...this.state.modalCrearEditarProveedor };\r\n        obj.modo = \"creacion\";\r\n        obj.abierto = true;\r\n        this.setState({ modalCrearEditarProveedor: obj });\r\n    }\r\n\r\n\r\n    enEnviarProovedor = () => {\r\n        var obj = { ...this.state.modalCrearEditarProveedor };\r\n        obj.mensaje.enviado = true;\r\n        this.setState({ modalCrearEditarProveedor: obj });\r\n\r\n        Requester.postProveedor(\r\n            this.state.modalCrearEditarProveedor.campos.tipo,\r\n            this.state.modalCrearEditarProveedor.campos.nombre,\r\n            this.state.modalCrearEditarProveedor.campos.correo,\r\n            this.state.modalCrearEditarProveedor.campos.num,\r\n            this.state.modalCrearEditarProveedor.campos.numAdic,\r\n            this.state.modalCrearEditarProveedor.campos.correoAdic,\r\n            this.state.modalCrearEditarProveedor.campos.ciudad,\r\n            (rpta) => {\r\n                var obj = { ...this.state.modalCrearEditarProveedor };\r\n                obj.mensaje.recibido = true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({ modalCrearEditarProveedor: obj });\r\n                this.cargarProveedoresNoTransp();\r\n                //this.cargarProovs();\r\n            },\r\n            (rptaError) => {\r\n                console.log(\"err!\");\r\n                var obj = { ...this.state.modalCrearEditarProveedor };\r\n                obj.mensaje.recibido = true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({ modalCrearEditarProveedor: obj });\r\n            })\r\n    }\r\n\r\n\r\n    enCerrarModalProveedor = () => {\r\n        var obj = { ...this.state.modalCrearEditarProveedor };\r\n        obj.mensaje.recibido = false;\r\n        obj.mensaje.enviado = false;\r\n        obj.mensaje.respuesta = null;\r\n\r\n        if (this.state.modalCrearEditarProveedor.modo === \"edicion\") {\r\n            var obj = { ...this.state.modalCrearEditarProveedor };\r\n            obj.campos.tipo = '';\r\n            obj.campos.id = '';\r\n            obj.campos.nombre = '';\r\n            obj.campos.correo = '';\r\n            obj.campos.correoAdic = '';\r\n            obj.campos.num = '';\r\n            obj.campos.numAdic = '';\r\n            obj.campos.ciudad = '';\r\n            this.setState({ modalCrearEditar: obj });\r\n        }\r\n    }\r\n\r\n    // ------------------------------------------------------------------------- Modal proveedores transportes\r\n\r\n    abrirModalProveedorTransporte = () => {\r\n        var obj = { ...this.state.modalCrearProveedorTransporte };\r\n        obj.modo = \"creacion\";\r\n        obj.abierto = true;\r\n        this.setState({ modalCrearProveedorTransporte: obj });\r\n    }\r\n\r\n    enEnviarProveedorTransporte = () => {\r\n\r\n        var obj = { ...this.state.modalCrearProveedorTransporte };\r\n        obj.mensaje.enviado = true;\r\n        this.setState({ modalCrearProveedorTransporte: obj });\r\n\r\n        Requester.postProvTransporte(\r\n            this.state.modalCrearProveedorTransporte.campos.nombre,\r\n            this.state.modalCrearProveedorTransporte.campos.correo,\r\n            this.state.modalCrearProveedorTransporte.campos.num,\r\n            this.state.modalCrearProveedorTransporte.campos.numAdic,\r\n            this.state.modalCrearProveedorTransporte.campos.correoAdic,\r\n            this.state.modalCrearProveedorTransporte.campos.ciudad,\r\n            (rpta) => {\r\n                console.log(this.state.modalCrearProveedorTransporte.campos);\r\n                console.log(\"success!\");\r\n                console.log(rpta);\r\n                var obj = { ...this.state.modalCrearProveedorTransporte };\r\n                obj.mensaje.recibido = true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({ modalCrearProveedorTransporte: obj });\r\n                this.cargarTransportes();\r\n            },\r\n            (rptaError) => {\r\n                console.log(\"err!\");\r\n                var obj = { ...this.state.modalCrearProveedorTransporte };\r\n                obj.mensaje.recibido = true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({ modalCrearProveedorTransporte: obj });\r\n            })\r\n    }\r\n\r\n\r\n    enCerrarModalProveedorTransportes = () => {\r\n        var obj = { ...this.state.modalCrearProveedorTransporte };\r\n        obj.mensaje.recibido = false;\r\n        obj.mensaje.enviado = false;\r\n        obj.mensaje.respuesta = null;\r\n\r\n        if (this.state.modalCrearProveedorTransporte.modo === \"edicion\") {\r\n            var obj = { ...this.state.modalCrearProveedorTransporte };\r\n            obj.campos.id = '';\r\n            obj.campos.nombre = '';\r\n            obj.campos.correo = '';\r\n            obj.campos.correoAdic = '';\r\n            obj.campos.num = '';\r\n            obj.campos.numAdic = '';\r\n            obj.campos.ciudad = '';\r\n            this.setState({ modalCrearProveedorTransporte: obj });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default CrearFile;","import React from 'react';\r\nimport {Component} from 'react';\r\n\r\nclass Inicio extends Component{\r\n\r\n    componentDidMount(){\r\n        \r\n        console.log(this.props)\r\n    }\r\n    \r\n    render(){\r\n        return <div><h3>Pagina web en desarrollo :3</h3></div>\r\n    }\r\n}\r\n\r\nexport default Inicio;","import React from 'react';\r\nimport {Component} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { Label, Button, Container, Header, Segment} from 'semantic-ui-react';\r\nimport ReactTable from \"react-table\";\r\nimport 'react-table/react-table.css'\r\nimport TablaBuscador from '../TablaBuscador/TablaBuscador';\r\nimport ModalCrearServicio from './ModalCrearServicio';\r\nimport CONSTANTES_GLOBALES from '../../common/Constantes';\r\nimport Requester from '../../common/Services/Requester';\r\nimport moment from 'moment'\r\nimport momentTz from 'moment-timezone'\r\n\r\nclass VerServicios extends Component{\r\n\r\n    state={\r\n        modalServicio:{\r\n            abierto:false,\r\n            transaccionEnviada:false,\r\n            responseRecibida:false,\r\n            rptaTransaccion:null,\r\n            tipo:CONSTANTES_GLOBALES.TiposServicios[0].value,\r\n\r\n            campos:{\r\n                fecha:\"\",\r\n                ciudad:\"\",\r\n                nombre:'',\r\n                file:\"\",\r\n                hotel:\"\",\r\n                pasajeros:\"\",\r\n                nombrePasajero:\"\",\r\n                alm:\"\",\r\n                observaciones:\"\",\r\n                proveedor:\"\",\r\n                tren:\"\",\r\n                horaRecojo:\"\",\r\n                horaSalida:\"\",\r\n                transporte:\"\",\r\n\r\n            }\r\n        },\r\n\r\n        serviciosServ:[\r\n            /*\r\n            {\r\n                idServicio=1,\r\n                nombre: \"City tour\",\r\n                file: \"02-495\",\r\n                fecha:\"02-04-2017\", \r\n                ciudad:\"lima\",\r\n                hotel:\"melia\" ,\r\n                cantPasajeros: \"2\", \r\n                pasajero: \"Ctm\",\r\n            }*/\r\n        ] ,\r\n        \r\n        serviciosTransp:[\r\n            /*\r\n            {\r\n                nombre: \"City tour\",\r\n                file: \"02-495\",\r\n                fecha:\"02-04-2017\", \r\n                ciudad:\"lima\", \r\n                horaRecojo:\"11:40\", \r\n                horaSalida:\"11:40:01\", \r\n                cantPasajeros: \"3\", \r\n                pasajero: \"Ctm\",\r\n                transportista: \"Javi\" \r\n            }*/\r\n        ],\r\n         queryForzadoServs:\"\",\r\n         queryForzadoTransps:\"\"\r\n     }\r\n\r\n\r\n    render(){\r\n       \r\n        \r\n        const cols = [\r\n        {\r\n            Header: 'Nombre', accessor: 'nombre' , Cell: props => props.value ? props.value:\"-\" \r\n        },\r\n        {\r\n            Header: 'File', accessor: 'file', Cell: props => props.value ? props.value:\"-\" \r\n        },\r\n        {\r\n            Header: 'Fecha', accessor: 'fecha', Cell: props => props.value ? props.value:\"-\" \r\n        }, \r\n        {\r\n            Header: 'Ciudad', accessor: 'ciudad', Cell: props => props.value ? props.value:\"-\" \r\n        }, \r\n        {\r\n            Header: 'Hora recojo', accessor: 'horaRecojo', Cell: props => props.value ? props.value:\"-\" \r\n        },\r\n        {\r\n            Header: 'Cant. pasajeros', accessor: 'cantPasajeros', Cell: props => props.value ? props.value:\"-\" \r\n        }, \r\n        {\r\n            Header: 'Pasajero', accessor: 'pasajero', Cell: props => props.value ? props.value:\"-\" \r\n        }, \r\n        {\r\n            Header: 'Transportista', accessor: 'transportista', Cell: props => props.value ? props.value:\"-\" \r\n        }, \r\n        {\r\n            Header: 'Accion',\r\n            Cell: props => <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"/>\r\n                {/*<Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>*/}\r\n            </Container>\r\n        }, \r\n    ]\r\n    \r\n        return(<div>\r\n                <Header size=\"large\">Lista de servicios</Header> \r\n                {/*\r\n                <Button primary onClick={ ()=>{\r\n                    var obj = {...this.state.modalServicio};\r\n                    obj.abierto=true;\r\n                    this.setState({modalServicio:obj});\r\n                } }>Nuevo Servicio</Button>\r\n            */}\r\n            <Header size=\"small\">Servicios al día de...</Header>\r\n            <Button onClick={()=>{\r\n                    let fecha = moment().tz('America/Lima').format('Y-MM-DD')\r\n                    this.setState({queryForzadoServs:fecha,queryForzadoTransps:fecha})\r\n                }}>Hoy</Button>\r\n            <Button onClick={()=>{\r\n                    let fecha = moment().tz('America/Lima').add(1,'days').format('Y-MM-DD')\r\n                    this.setState({queryForzadoServs:fecha,queryForzadoTransps:fecha})\r\n                }}>Mañana</Button>\r\n            <Button onClick={()=>{\r\n                    this.setState({queryForzadoServs:\"\",queryForzadoTransps:\"\"})\r\n                }}   secondary>Todos</Button>\r\n                <Header size=\"medium\">Servicios generales programados</Header> \r\n                <Segment>\r\n                    <TablaBuscador \r\n                        queryForzado={this.state.queryForzadoServs} \r\n                        vaciarQueryForzado={this.vaciarQueryForzadoServs}\r\n                        data={this.state.serviciosServ} \r\n                        columns={cols} />\r\n                </Segment>\r\n                <Header size=\"medium\">Servicios de transporte programados</Header> \r\n                <Segment>\r\n                    <TablaBuscador \r\n                        queryForzado={this.state.queryForzadoTransps} \r\n                        vaciarQueryForzado={this.vaciarQueryForzadoTransps}\r\n                        data={this.state.serviciosTransp} columns={cols} />\r\n                </Segment>\r\n                {/*<ModalCrearServicio parentComp={this}/>*/}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    vaciarQueryForzadoServs = () =>{\r\n        this.setState({queryForzadoServs:''})\r\n    }\r\n    vaciarQueryForzadoTransps = () =>{\r\n        this.setState({queryForzadoTransps:''})\r\n    }\r\n\r\n    enviarServicio = () => {\r\n        /*\r\n        Requester.postServicio(\r\n            //this.state.modalServicio.campos.proveedor\r\n        )*/\r\n    }\r\n\r\n    componentDidMount= () =>{\r\n/*\r\n       \r\n                idServicio=1,\r\n                nombre: \"City tour\",\r\n                file: \"02-495\",\r\n                fecha:\"02-04-2017\", \r\n                ciudad:\"lima\",\r\n                hotel:\"melia\" ,\r\n                cantPasajeros: \"2\", \r\n                pasajero: \"Ctm\",\r\n                */\r\n               this.cargarServsGenerales();\r\n        this.cargarServsTransportes();\r\n    }\r\n\r\n    cargarServsGenerales = () => {\r\n        Requester.getServiciosGeneralesDetalle((rpta)=>{\r\n            var servs = rpta.cont.map((e,i)=>{\r\n                return {\r\n                    idServicio : e.idServicio,\r\n                    nombre : e.nombre,\r\n                    file: e.codigoFile,\r\n                    fecha : e.fecha,\r\n                    ciudad : e.ciudad,\r\n                    hotel : e.hotel,\r\n                    cantPasajeros : e.pasajeros,\r\n                    pasajero : e.nombrePasajero\r\n                };\r\n            });\r\n            this.setState({serviciosServ:servs});\r\n        },(rptaError)=>{\r\n            console.log(\"error!\");\r\n        });\r\n    }\r\n\r\n    cargarServsTransportes = () => {\r\n        \r\n        /*\r\n\r\n                nombre: \"City tour\",\r\n                file: \"02-495\",\r\n                fecha:\"02-04-2017\", \r\n                ciudad:\"lima\", \r\n                horaRecojo:\"11:40\", \r\n                horaSalida:\"11:40:01\", \r\n                cantPasajeros: \"3\", \r\n                pasajero: \"Ctm\",\r\n                transportista: \"Javi\" \r\n        */\r\n        Requester.getServiciosTransporteDetalle((rpta)=>{\r\n            console.log(\"rpta! transportes: \",rpta)\r\n            var servs = rpta.cont.map((e,i)=>{\r\n                return {\r\n                    idServicio : e.idServicio,\r\n                    nombre : e.nombre,\r\n                    file: e.codigoFile,\r\n                    fecha : e.fecha,\r\n                    ciudad : e.ciudad,\r\n                    horaRecojo : e.horaRecojo,\r\n                    cantPasajeros : e.pasajeros,\r\n                    pasajero : e.nombrePasajero,\r\n                    transportista : e.transporte\r\n                };\r\n            });\r\n            this.setState({serviciosTransp:servs});\r\n        },(rptaError)=>{\r\n            console.log(\"error!\");\r\n        });\r\n    }\r\n }\r\n\r\nexport default VerServicios;","import React from 'react';\r\nimport {Component} from 'react';\r\nimport { Form, Dropdown, Grid, Input } from 'semantic-ui-react';\r\nimport Constantes, { RptaTrx } from '../../../common/Constantes';\r\nimport ElementoForm from '../../../components/ElementoForm/ElementoForm';\r\nimport { DateInput, TimeInput } from 'semantic-ui-calendar-react';\r\n\r\nclass CrearServicio extends Component{\r\n    state={\r\n        tipo: Constantes.TiposServicios[0].value,\r\n        fecha:\"\",\r\n        ciudad:\"\",\r\n        nombre:null,\r\n        file:null,\r\n        hotel:null,\r\n        pasajeros:null,\r\n        nombrePasajero:null,\r\n        alm:null,\r\n        observaciones:null,\r\n        proveedor:null,\r\n        tren:null,\r\n        horaRecojo:null,\r\n        horaSalida:null,\r\n        transporte:null\r\n    }\r\n\r\n    render(){\r\n        if(this.state.tipo==Constantes.TiposServicios[0].value)\r\n            return this.camposServ();\r\n        else \r\n            return this.camposTransp();\r\n    }\r\n\r\n    camposTransp=()=>{\r\n        return <div>\r\n            <Form>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Tipo de servicio\">\r\n                                <Dropdown\r\n                                    placeholder='Tipo'\r\n                                    fluid\r\n                                    search\r\n                                    selection\r\n                                    value={this.state.tipo}\r\n                                    options={Constantes.TiposServicios}\r\n                                    onChange = {(event,data)=>{\r\n                                        this.setState({tipo:data.value});\r\n                                        }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"File\">\r\n                                <Dropdown\r\n                                    placeholder='File'\r\n                                    fluid\r\n                                    search\r\n                                    selection\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Fecha\">\r\n                                <DateInput\r\n                                    fluid\r\n                                    name=\"fecha\"\r\n                                    placeholder=\"10-02-2019\"\r\n                                    value={this.state.fecha}\r\n                                    iconPosition=\"left\"\r\n                                    onChange = { (event, {name, value} )=>{\r\n                                            if(name===\"fecha\"){\r\n                                                this.setState({fecha:value});\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Ciudad\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"Ciudad\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Nombre\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"City tour\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Observaciones\">\r\n                                <Input \r\n                                    fluid\r\n                                    value={this.state.ciudad} \r\n                                    placeholder=\"Observaciones y detalles sobre el servicio\"\r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Hora recojo\">\r\n                            <TimeInput\r\n                                    fluid\r\n                                    name=\"horaRecojo\"\r\n                                    placeholder=\"16:30\"\r\n                                    value={this.state.horaRecojo}\r\n                                    iconPosition=\"left\"\r\n                                    onChange = { (event, {name, value} )=>{\r\n                                            if(name===\"horaRecojo\"){\r\n                                                this.setState({horaRecojo:value});\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Hora salida\">\r\n                                <TimeInput\r\n                                    fluid\r\n                                    name=\"horaSalida\"\r\n                                    placeholder=\"17:30\"\r\n                                    value={this.state.horaSalida}\r\n                                    iconPosition=\"left\"\r\n                                    onChange = { (event, {name, value} )=>{\r\n                                            if(name===\"horaSalida\"){\r\n                                                this.setState({horaSalida:value});\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"6\">\r\n                            <ElementoForm titulo=\"Nombre pasajero\">\r\n                                <Input \r\n                                    fluid\r\n                                    value={this.state.nombrePasajero} \r\n                                    placeholder=\"Christian Cueva\"\r\n                                    onChange={(event)=>{this.setState({nombrePasajero:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Vuelo\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"Vuelo\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>  \r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Cantidad pasajeros\">\r\n                                <Input\r\n                                    fluid\r\n                                    placeholder={0}\r\n                                    type=\"number\"\r\n                                    value={this.state.pasajeros} \r\n                                    onChange={(event)=>{this.setState({pasajeros:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"6\">\r\n                            <ElementoForm titulo=\"V/R\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"V/R\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"TC\">\r\n                                <Input \r\n                                    placeholder=\"Tc\"\r\n                                    fluid\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Transporte\">\r\n                                <Input \r\n                                    icon='lightning'    \r\n                                    iconPosition='left'\r\n                                    fluid\r\n                                    placeholder=\"Carlos\"\r\n                                    list=\"transportes\"\r\n                                    value={this.state.transporte} \r\n                                    onChange={(event)=>{this.setState({transporte:event.target.value})}}/>\r\n                                <datalist id='transportes'>\r\n                                    <option value='Transportes Juan' />\r\n                                    <option value='Matias' />\r\n                                </datalist>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        {/*\r\n                        <Grid.Column width=\"6\">\r\n                            <ElementoForm titulo=\"Proveedor\">\r\n                                <Input \r\n                                    fluid\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>*/}\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Form>\r\n        </div>\r\n    }\r\n\r\n    camposServ = () => {\r\n        return <div>\r\n            <Form>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Tipo de servicio\">\r\n                                <Dropdown\r\n                                    placeholder='Tipo'\r\n                                    fluid\r\n                                    search\r\n                                    selection\r\n                                    options={Constantes.TiposServicios}\r\n                                    onChange = {(event,data)=>{\r\n                                        this.setState({tipo:data.value});\r\n                                        }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"File\">\r\n                                <Dropdown\r\n                                    placeholder='File'\r\n                                    fluid\r\n                                    search\r\n                                    selection\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Fecha\">\r\n                                <DateInput\r\n                                    fluid\r\n                                    name=\"fecha\"\r\n                                    placeholder=\"10-02-2019\"\r\n                                    value={this.state.fecha}\r\n                                    iconPosition=\"left\"\r\n                                    onChange = { (event, {name, value} )=>{\r\n                                            if(name===\"fecha\"){\r\n                                                this.setState({fecha:value});\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Ciudad\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"Ciudad\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Nombre\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"City tour\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"8\">\r\n                            <ElementoForm titulo=\"Observaciones\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"Observaciones y detalles sobre el servicio\"\r\n                                    value={this.state.ciudad} \r\n                                    onChange={(event)=>{this.setState({ciudad:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Hotel\">\r\n                                <Input \r\n                                    icon='lightning'    \r\n                                    iconPosition='left'\r\n                                    list=\"hoteles\"\r\n                                    fluid\r\n                                    placeholder=\"Hotel Sheraton\"\r\n                                    value={this.state.hotel} \r\n                                    onChange={(event)=>{this.setState({hotel:event.target.value})}}/>\r\n                                <datalist id='hoteles'>\r\n                                    <option value='Sheraton' />\r\n                                    <option value='Hotel melia' />\r\n                                    <option value='Swissotel' />\r\n                                </datalist>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Cantidad pasajeros\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder={0}\r\n                                    type=\"number\"\r\n                                    value={this.state.pasajeros} \r\n                                    onChange={(event)=>{this.setState({pasajeros:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"6\">\r\n                            <ElementoForm titulo=\"Nombre pasajero\">\r\n                                <Input \r\n                                    fluid\r\n                                    value={this.state.nombrePasajero} \r\n                                    placeholder=\"Christian Cueva\"\r\n                                    onChange={(event)=>{this.setState({nombrePasajero:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"Tren\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"Tren\"\r\n                                    value={this.state.tren} \r\n                                    onChange={(event)=>{this.setState({tren:event.target.value})}}/>  \r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"5\">\r\n                            <ElementoForm titulo=\"ALM\">\r\n                                <Input \r\n                                    fluid\r\n                                    value={this.state.alm} \r\n                                    placeholder=\"ALM\"\r\n                                    onChange={(event)=>{this.setState({alm:event.target.value})}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"6\">\r\n                            <ElementoForm titulo=\"Proveedor\">\r\n                                <Input \r\n                                    icon='lightning'    \r\n                                    iconPosition='left'\r\n                                    fluid\r\n                                    placeholder=\"Umbro\"\r\n                                    list=\"proveedores\"\r\n                                    value={this.state.proveedor} \r\n                                    onChange={(event)=>{this.setState({proveedor:event.target.value})}}/>\r\n                                <datalist id='proveedores'>\r\n                                    <option value='Transportes Juan' />\r\n                                    <option value='Matias' />\r\n                                </datalist>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Form>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default CrearServicio;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport VerServicios from '../VerServicios/VerServicios';\r\nimport CrearFile from '../ViewFiles/CrearFile/CrearFile';\r\nimport { Segment, Header, Icon, Card, Grid, Message, Dropdown, Modal, Button, Input } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom'\r\nimport Requester from '../../common/Services/Requester';\r\nimport CONSTANTES_GLOBALES, { CodigoMesATexto } from '../../common/Constantes';\r\nimport ElementoForm from '../../components/ElementoForm/ElementoForm';\r\nimport ModalCrearBiblia from '../../components/ModalCrearBiblia/ModalCrearBiblia';\r\n\r\n\r\nclass ListaBiblias extends Component {\r\n\r\n    state = {\r\n\r\n        modalBiblia: {\r\n            abierto: false,\r\n            transaccionEnviada: false,\r\n            responseRecibida: false,\r\n            rptaTransaccion: null,\r\n\r\n            campos: {\r\n                mes: null,\r\n                anho: null\r\n            }\r\n        },\r\n\r\n        biblias: [\r\n            /*\r\n            {\r\n                anho:\"2018\",\r\n                meses:[\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Marzo\" , files:4},\r\n                    {mes:\"Mayo\" , files:2}\r\n                ]\r\n            },\r\n            {\r\n                anho:\"2019\",\r\n                meses:[\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Junio\" , files:4},\r\n                    {mes:\"Marzo\" , files:4},\r\n                    {mes:\"Mayo\" , files:2}\r\n                ]\r\n            }*/\r\n        ]\r\n    }\r\n\r\n    onlyUnique(value, index, self) {\r\n        return self.indexOf(value) === index;\r\n    }\r\n\r\n    navegar = (direccion) => {\r\n        this.props.history.push(direccion);\r\n    }\r\n\r\n    cargarBiblias = () => {\r\n\r\n\r\n        Requester.getBibliasDetalle((rpta) => {\r\n            var anhos = rpta.cont.map((e) => { return e.anho });\r\n            var anhosUnique = anhos.filter(this.onlyUnique);\r\n            //console.log(anhosUnique);\r\n            var biblias = anhosUnique.map((e, i) => {\r\n                var meses = rpta.cont.filter((biblia) => {\r\n                    return biblia.anho == e;\r\n                });\r\n                meses = meses.map((e) => {\r\n                    return {\r\n                        mes: CodigoMesATexto(e.mes),\r\n                        files: e.cantidadFiles,\r\n                        codigoMes:e.mes\r\n                    }\r\n                })\r\n                meses = meses.sort((a, b) => {\r\n                    return a.mes - b.mes;\r\n                })\r\n                //console.log(meses)\r\n                return { anho: e, meses: meses };\r\n            })\r\n            biblias.sort((a, b) => {\r\n                return b.anho - a.anho;\r\n            })\r\n            console.log(biblias);\r\n            this.setState({ biblias: biblias });\r\n        });\r\n    }\r\n    componentDidMount = () => {\r\n        this.cargarBiblias();\r\n    }\r\n\r\n    render = () => {\r\n        return <div>\r\n\r\n            <Header size=\"large\">Biblias</Header>\r\n            <Button primary onClick={() => {\r\n                var obj = { ...this.state.modalBiblia };\r\n                obj.abierto = true;\r\n                this.setState({ modalBiblia: obj });\r\n            }}>Nueva Biblia</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            {this.state.biblias.map(e => {\r\n                var cuadro = (\r\n                    <Segment tertiary>\r\n                        <Header size=\"large\">{e.anho}</Header>\r\n                        <Grid columns=\"6\">\r\n                            <Grid.Row>\r\n                                {e.meses.map((mes, i) => {\r\n                                    if (i < 6)\r\n                                        return <Grid.Column>\r\n                                            <Card>\r\n                                                <Card.Content header={mes.mes} />\r\n                                                <Card.Content extra style={{ backgroundColor: \"#00000000\", padding: \"5px 7px\" }}>\r\n                                                    <Icon style={{  padding: \"3px\" }} name='folder' />\r\n                                                    {mes.files}\r\n                                                    <Button style={{ backgroundColor: \"#00000000\", padding: \"5px\" }} icon floated=\"right\"\r\n                                                        onClick={() => {\r\n                                                            //console.log(\"state: \",this.props.location.pathname)\r\n                                                            this.navegar(\"/calendario/\"+e.anho+\"/\"+mes.codigoMes);\r\n                                                        }}>\r\n                                                        <Icon fitted size=\"large\" name=\"angle right\" />\r\n                                                    </Button>\r\n                                                </Card.Content>\r\n                                            </Card>\r\n                                        </Grid.Column>\r\n                                })}\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                                {e.meses.map((mes, i) => {\r\n                                    if (i > 5)\r\n                                        return <Grid.Column>\r\n                                            <Card>\r\n                                                <Card.Content header={mes.mes} />\r\n                                                <Card.Content extra style={{ backgroundColor: \"#00000000\", padding: \"5px 7px\" }}>\r\n                                                    <Icon name='folder' />\r\n                                                    {mes.files}\r\n                                                    <Button style={{ backgroundColor: \"#00000000\", padding: \"5px\" }} icon floated=\"right\"\r\n                                                        onClick={() => {\r\n                                                            this.navegar(\"/calendario/\"+e.anho+\"/\"+mes.codigoMes);\r\n                                                        }}>\r\n                                                        <Icon fitted size=\"large\" name=\"angle right\" />\r\n                                                    </Button>\r\n                                                </Card.Content>\r\n                                            </Card>\r\n                                        </Grid.Column>\r\n                                })}\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Segment>\r\n                )\r\n                return cuadro;\r\n            })}{/*\r\n                \r\n            <hr/>\r\n            <Link onClick={()=>{\r\n                var obj = {...this.state.modalBiblia};\r\n                obj.abierto=true;\r\n                this.setState({modalBiblia:obj});\r\n                }}>\r\n                Crear biblia</Link>\r\n                */\r\n            }\r\n            <ModalCrearBiblia parentComponent={this} />\r\n        </div>\r\n    }\r\n\r\n    EnviarPostBiblia = () => {\r\n\r\n        var newStateModalBiblia = { ...this.state.modalBiblia };\r\n        newStateModalBiblia.transaccionEnviada = true;\r\n        this.setState({ modalBiblia: newStateModalBiblia });\r\n\r\n        Requester.postBiblia(this.state.modalBiblia.campos, (rpta) => {\r\n            var newState = { ...this.state.modalBiblia };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rpta;\r\n            this.cargarBiblias();\r\n            this.setState({ modalBiblia: newState });\r\n        }, (rptaError) => {\r\n            var newState = { ...this.state.modalBiblia };\r\n            newState.responseRecibida = true;\r\n            newState.rptaTransaccion = rptaError;\r\n            //console.log(this.state.modalBiblia);\r\n            this.setState({ modalBiblia: newState });\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default ListaBiblias;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport ModalCrearEditarProveedor from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabTodos extends Component{\r\n\r\n    state = {\r\n        proveedores:[\r\n        ]\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Tipo', accessor: 'tipo'  }\r\n    ]\r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Todos los proveedores</Header> \r\n            {/*<Header size=\"small\">Lista</Header>*/}\r\n            <TablaBuscador data={this.state.proveedores} columns={this.columnasTabla} />\r\n        </div>\r\n    }\r\n\r\n    cargarTodos = () =>{\r\n        Requester.getProveedores( \"\" , (rpta)=>{\r\n            var proovs=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\",\r\n                    tipo: e.tipoProveedor?Constantes.aliasATextoProovedores(e.tipoProveedor):'-'\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({proveedores:proovs});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarTodos();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabTodos","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header, Confirm, Modal } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport lul from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabHoteles extends Component{\r\n\r\n    state = {\r\n        hoteles:[\r\n            //{idProveedor:\"-1\",nombre:\"Melia\", correo:\"asd@asd.com\", correoAdic:\"asljkdq@as.com\", numeroContacto:\"(51)65465\",numeroContactoAdicional:\"123312\", ciudad:\"city\"}\r\n        ],\r\n        \r\n        confirmacionEliminarAbierta:false,\r\n        idEliminar:null,\r\n        \r\n        modalCrearEditar:{\r\n            //creacion o edicion\r\n            modo:\"creacion\",\r\n            abierto:false,\r\n\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                id:null,\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo', accessor: 'correo', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Ciudad', accessor: 'ciudad', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Accion', Cell: props => {\r\n            //console.log(props);\r\n            return <Container textAlign=\"center\">\r\n                <Button circular color=\"yellow\" icon=\"pencil\" onClick={()=>{this.abrirModalEdicion(this.state.hoteles.find(element=>element.idProveedor==props.original.idProveedor))}}></Button>\r\n                <Button circular color=\"red\" icon=\"trash\" onClick={()=>{this.intentarEliminar(this.state.hoteles.find(element=>element.idProveedor==props.original.idProveedor))}}></Button>\r\n            </Container>\r\n        }} \r\n    ]\r\n    \r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Hoteles</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo Hotel</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.hoteles} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <lul parent={this} sustantivoTitulo=\"Hotel\" \r\n                placeholderNombre=\"Arawi\" \r\n                placeholderCorreo=\"correo@arawi.com\" \r\n                placeholderCorreoAdic=\"arawi.ventas@gmail.com\"\r\n                enEnviar={this.enviarHotel}\r\n                enEditar={this.editarHotel}\r\n                enCerrar={this.enCerrarModal}/>\r\n            <Confirm\r\n                open={this.state.confirmacionEliminarAbierta}\r\n                cancelButton=\"Cancelar\"\r\n                confirmButton=\"Eliminar\"\r\n                content={'Seguro que deseas eliminar el hotel ' + (this.state.idEliminar ? this.state.hoteles.find(element => element.idProveedor == this.state.idEliminar).nombre\r\n                    :\"<NULO>\") + '?'}\r\n                onCancel={this.cerrarConfirmacionEliminar}\r\n                onConfirm={()=>{this.confirmarEliminar(this.state.hoteles.find(element => element.idProveedor == this.state.idEliminar))}}\r\n            />\r\n            <Modal></Modal>\r\n        </div>\r\n    }\r\n\r\n    intentarEliminar=(proveedor)=>{\r\n        console.log(proveedor);\r\n        \r\n        if(proveedor){\r\n            this.setState({\r\n                idEliminar:proveedor.idProveedor,\r\n                confirmacionEliminarAbierta:true\r\n            })\r\n        }\r\n    }\r\n\r\n    confirmarEliminar = (proveedor) =>{\r\n        console.log(\"eliminando proveedor \" + proveedor.nombre)\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n\r\n        if(proveedor){\r\n            Requester.postElimnarProv(proveedor.idProveedor,\r\n                (rpta)=>{\r\n                    this.cargarHoteles();\r\n                },\r\n                (rptaError)=>{\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    cerrarConfirmacionEliminar = () =>{\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n    }\r\n\r\n    abrirModalEdicion= (proveedor)=>{\r\n        console.log(proveedor);\r\n        if(proveedor){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.modo=\"edicion\";\r\n            obj.abierto=true;\r\n            obj.campos.id = proveedor.idProveedor;\r\n            obj.campos.nombre = proveedor.nombre;\r\n            obj.campos.correo = proveedor.correo;\r\n            obj.campos.correoAdic = proveedor.correoAdic;\r\n            obj.campos.num = proveedor.numeroContacto;\r\n            obj.campos.numAdic = proveedor.numeroContactoAdicional;\r\n            obj.campos.ciudad = proveedor.ciudad;\r\n            console.log(obj);\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.modo=\"creacion\";\r\n        obj.abierto = true;\r\n        this.setState({modalCrearEditar:obj});\r\n    }\r\n\r\n    enviarHotel = () => { \r\n        console.log(\"enviando!\");\r\n        \r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrearEditar:obj});\r\n\r\n        Requester.postProvHotel( \r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.num,\r\n            this.state.modalCrearEditar.campos.numAdic,\r\n            this.state.modalCrearEditar.campos.correoAdic,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            (rpta)=>{\r\n                console.log(this.state.modalCrearEditar.campos);\r\n                console.log(\"success!\");\r\n                console.log(rpta);\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarHoteles();\r\n            },\r\n            (rptaError)=>{\r\n                console.log(\"err!\");\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n    \r\n    editarHotel = () => { \r\n        console.log(\"editando!\");\r\n        \r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrearEditar:obj});\r\n        console.log(\": \"+this.state.modalCrearEditar.campos.id);\r\n        Requester.postEditarProvHotel( \r\n            this.state.modalCrearEditar.campos.id,\r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.num,\r\n            this.state.modalCrearEditar.campos.numAdic,\r\n            this.state.modalCrearEditar.campos.correoAdic,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            (rpta)=>{\r\n                console.log(this.state.modalCrearEditar.campos);\r\n                console.log(\"edicion success!\");\r\n                console.log(rpta);\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarHoteles();\r\n            },\r\n            (rptaError)=>{\r\n                console.log(\"edicion error!\");\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n\r\n    cargarHoteles= () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.HOTEL, (rpta)=>{\r\n            var hoteles=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo,//?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional,//?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto,//?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroContactoAdicional,//?e.numeroContactoAdicional:\"-\",\r\n                    ciudad:e.ciudad//?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({hoteles:hoteles});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarHoteles();\r\n    }\r\n\r\n    enCerrarModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.recibido=false;\r\n        obj.mensaje.enviado=false;\r\n        obj.mensaje.respuesta=null;\r\n\r\n        if(this.state.modalCrearEditar.modo===\"edicion\"){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.campos.id=null;\r\n            obj.campos.nombre=null;\r\n            obj.campos.correo=null;\r\n            obj.campos.correoAdic=null;\r\n            obj.campos.num=null;\r\n            obj.campos.numAdic=null;\r\n            obj.campos.ciudad=null;\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default TabHoteles","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header, Confirm, Modal } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport ModalCrearEditarProveedor from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabProovs extends Component{\r\n\r\n    state = {\r\n        proovs:[\r\n            //{idProveedor:\"-1\",nombre:\"Melia\", correo:\"asd@asd.com\", correoAdic:\"asljkdq@as.com\", numeroContacto:\"(51)65465\",numeroContactoAdicional:\"123312\", ciudad:\"city\"}\r\n        ],\r\n        \r\n        confirmacionEliminarAbierta:false,\r\n        idEliminar:null,\r\n        \r\n        modalCrearEditar:{\r\n            //creacion o edicion\r\n            modo:\"creacion\",\r\n            abierto:false,\r\n\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                id:'',\r\n                nombre:'',\r\n                correo:'',\r\n                correoAdic:'',\r\n                num:'',\r\n                numAdic:'',\r\n                ciudad:''\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo', accessor: 'correo', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Ciudad', accessor: 'ciudad', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Accion', Cell: props => {\r\n            //console.log(props);\r\n            return <Container textAlign=\"center\">\r\n                <Button circular color=\"yellow\" icon=\"pencil\" onClick={()=>{this.abrirModalEdicion(this.state.proovs.find(element=>element.idProveedor==props.original.idProveedor))}}></Button>\r\n                <Button circular color=\"red\" icon=\"trash\" onClick={()=>{this.intentarEliminar(this.state.proovs.find(element=>element.idProveedor==props.original.idProveedor))}}></Button>\r\n            </Container>\r\n        }} \r\n    ]\r\n    \r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">{this.props.sustPlural}</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo {this.props.sust}</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.proovs} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <ModalCrearEditarProveedor pack=\"modalCrearEditar\" parent={this} sustantivoTitulo={this.props.sust}\r\n                placeholderNombre={this.props.placeholderNombre}\r\n                placeholderCorreo={this.props.placeholderCorreo}\r\n                placeholderCorreoAdic={this.props.placeholderCorreoAdic}\r\n                enEnviar={this.enviarProov}\r\n                enEditar={this.editarProov}\r\n                enCerrar={this.enCerrarModal}/>\r\n            <Confirm\r\n                open={this.state.confirmacionEliminarAbierta}\r\n                cancelButton=\"Cancelar\"\r\n                confirmButton=\"Eliminar\"\r\n                content={'Seguro que deseas eliminar el '+this.props.sust+' ' + (this.state.idEliminar ? this.state.proovs.find(element => element.idProveedor == this.state.idEliminar).nombre\r\n                    :\"<NULO>\") + '?'}\r\n                onCancel={this.cerrarConfirmacionEliminar}\r\n                onConfirm={()=>{this.confirmarEliminar(this.state.proovs.find(element => element.idProveedor == this.state.idEliminar))}}\r\n            />\r\n            <Modal></Modal>\r\n        </div>\r\n    }\r\n\r\n    intentarEliminar=(proveedor)=>{\r\n        console.log(proveedor);\r\n        \r\n        if(proveedor){\r\n            this.setState({\r\n                idEliminar:proveedor.idProveedor,\r\n                confirmacionEliminarAbierta:true\r\n            })\r\n        }\r\n    }\r\n\r\n    confirmarEliminar = (proveedor) =>{\r\n        console.log(\"eliminando proveedor \" + proveedor.nombre)\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n\r\n        if(proveedor){\r\n            Requester.postEliminarProv(proveedor.idProveedor,\r\n                (rpta)=>{\r\n                    this.cargarProovs();\r\n                },\r\n                (rptaError)=>{\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    cerrarConfirmacionEliminar = () =>{\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n    }\r\n\r\n    abrirModalEdicion= (proveedor)=>{\r\n        console.log(proveedor);\r\n        if(proveedor){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.modo=\"edicion\";\r\n            obj.abierto=true;\r\n            obj.campos.id = proveedor.idProveedor;\r\n            obj.campos.nombre = proveedor.nombre;\r\n            obj.campos.correo = proveedor.correo;\r\n            obj.campos.correoAdic = proveedor.correoAdic;\r\n            obj.campos.num = proveedor.numeroContacto;\r\n            obj.campos.numAdic = proveedor.numeroContactoAdicional;\r\n            obj.campos.ciudad = proveedor.ciudad;\r\n            console.log(obj);\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.modo=\"creacion\";\r\n        obj.abierto = true;\r\n        this.setState({modalCrearEditar:obj});\r\n    }\r\n\r\n    enviarProov = () => { \r\n        console.log(\"enviando!\");\r\n        \r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrearEditar:obj});\r\n\r\n        this.props.funcEnviar( \r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.num,\r\n            this.state.modalCrearEditar.campos.numAdic,\r\n            this.state.modalCrearEditar.campos.correoAdic,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            (rpta)=>{\r\n                console.log(this.state.modalCrearEditar.campos);\r\n                console.log(\"success!\");\r\n                console.log(rpta);\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarProovs();\r\n            },\r\n            (rptaError)=>{\r\n                console.log(\"err!\");\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n    \r\n    editarProov = () => { \r\n        console.log(\"editando!\");\r\n        \r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrearEditar:obj});\r\n        console.log(\": \"+this.state.modalCrearEditar.campos.id);\r\n        Requester.postEditarProv(\r\n            this.props.alias,\r\n            this.state.modalCrearEditar.campos.id,\r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.num,\r\n            this.state.modalCrearEditar.campos.numAdic,\r\n            this.state.modalCrearEditar.campos.correoAdic,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            (rpta)=>{\r\n                console.log(this.state.modalCrearEditar.campos);\r\n                console.log(\"edicion success!\");\r\n                console.log(rpta);\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarProovs();\r\n            },\r\n            (rptaError)=>{\r\n                console.log(\"edicion error!\");\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n\r\n    cargarProovs= () =>{\r\n        console.log(this.props.alias);\r\n        Requester.getProveedores(this.props.alias, (rpta)=>{\r\n            var proovs=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor?e.idProveedor:0,\r\n                    nombre:e.nombre?e.nombre:'',\r\n                    correo:e.correo?e.correo:\"\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:'',\r\n                    numeroContactoAdicional:e.numeroContactoAdicional?e.numeroContactoAdicional:\"\",\r\n                    ciudad:e.ciudad?e.ciudad:\"\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({proovs:proovs});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log(\"weeeee\");\r\n        this.cargarProovs();\r\n    }\r\n\r\n    enCerrarModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.mensaje.recibido=false;\r\n        obj.mensaje.enviado=false;\r\n        obj.mensaje.respuesta=null;\r\n\r\n        if(this.state.modalCrearEditar.modo===\"edicion\"){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.campos.id='';\r\n            obj.campos.nombre='';\r\n            obj.campos.correo='';\r\n            obj.campos.correoAdic='';\r\n            obj.campos.num='';\r\n            obj.campos.numAdic='';\r\n            obj.campos.ciudad='';\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default TabProovs","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport ModalCrearEditarProveedor from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabRestaurantes extends Component{\r\n\r\n    state = {\r\n        restaurantes:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n    \r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Restaurantes</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo Restaurante</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.restaurantes} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <ModalCrearEditarProveedor parent={this} titulo=\"Crear Restaurantes\" \r\n                placeholderNombre=\"Punto Azul\" \r\n                placeholderCorreo=\"ventas@puntoazul.com\" \r\n                placeholderCorreoAdic=\"correo.ventas@puntoazul.com\"\r\n                enEnviar={this.enviarTransporte}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarTransporte = () => { \r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvRestaurante( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarRestaurantes();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarRestaurantes= () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.RESTAURANTE, (rpta)=>{\r\n            var rests=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({restaurantes:rests});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarRestaurantes();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabRestaurantes","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport ModalCrearEditarProveedor from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabTransportes extends Component{\r\n\r\n    state = {\r\n        transportes:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n     \r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Transportes</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo Transporte</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.transportes} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <ModalCrearEditarProveedor parent={this} titulo=\"Crear Transportes\" \r\n                placeholderNombre=\"Javier\" \r\n                placeholderCorreo=\"javier.asd@gmail.com\" \r\n                placeholderCorreoAdic=\"javier.asdasd@hotmail.com\"\r\n                enEnviar={this.enviarTransporte}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarTransporte = () => { \r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvTransporte( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarTransportes();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarTransportes= () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.TRANSPORTE, (rpta)=>{\r\n            var transps=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({transportes:transps});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarTransportes();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabTransportes","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport lul from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabGuias extends Component{\r\n\r\n    state = {\r\n        guias:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Guías</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nueva Guia</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.guias} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <lul parent={this} titulo=\"Crear Guias\" \r\n                placeholderNombre=\"Guia\" \r\n                placeholderCorreo=\"guia@gmail.com\" \r\n                placeholderCorreoAdic=\"ventas.guia@hotmail.com\"\r\n                enEnviar={this.enviarGuia}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarGuia = () => { \r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvGuia( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarGuias();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarGuias = () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.GUIA, (rpta)=>{\r\n            var guias=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({guias:guias});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarGuias();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabGuias","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport lul from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabOperadores extends Component{\r\n\r\n    state = {\r\n        operadores:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n    \r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Operadores</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo Operador</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.operadores} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <lul parent={this} titulo=\"Crear Operador\" \r\n                placeholderNombre=\"Operador\" \r\n                placeholderCorreo=\"correo@gmail.com\" \r\n                placeholderCorreoAdic=\"correo.ventas@gmail.com\"\r\n                enEnviar={this.enviarOperador}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarOperador = () => { \r\n        console.log(\"enviando!\");\r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvOperador( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarOperadores();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarOperadores= () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.OPERADOR, (rpta)=>{\r\n            var opers=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({operadores:opers});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarOperadores();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabOperadores","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport lul from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabEmpresas extends Component{\r\n\r\n    state = {\r\n        empresas:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Empresas</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nueva Empresa</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.empresas} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <lul parent={this} titulo=\"Crear Empresa\" \r\n                placeholderNombre=\"Empresa\" \r\n                placeholderCorreo=\"empresa@gmail.com\" \r\n                placeholderCorreoAdic=\"ventas.empresa@hotmail.com\"\r\n                enEnviar={this.enviarEmpresa}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarEmpresa = () => { \r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvEmpresa( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarEmpresas();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarEmpresas = () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.EMPRESA, (rpta)=>{\r\n            var empresas=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({empresas:empresas});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarEmpresas();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabEmpresas","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header } from 'semantic-ui-react';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport lul from '../ModalCrearEditarProveedor';\r\n\r\n\r\nclass TabPersonas extends Component{\r\n\r\n    state = {\r\n        personas:[\r\n        ],\r\n        modalCrear:{\r\n            abierto:false,\r\n            mensaje:{\r\n                enviado:false,\r\n                recibido:false,\r\n                respuesta:null\r\n            },\r\n\r\n            campos:{\r\n                nombre:null,\r\n                correo:null,\r\n                correoAdic:null,\r\n                num:null,\r\n                numAdic:null,\r\n                ciudad:null\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correo' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdic' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Accion', Cell: props => \r\n            <Container textAlign=\"center\">\r\n                <Button circular icon=\"eye\"></Button>\r\n                <Button circular color=\"yellow\" icon=\"pencil\"></Button>\r\n                <Button circular color=\"red\" icon=\"trash\"></Button>\r\n            </Container>\r\n            } \r\n    ]\r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Personas</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nueva Persona</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.personas} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n            <lul parent={this} titulo=\"Crear Persona\" \r\n                placeholderNombre=\"Christian cueva\" \r\n                placeholderCorreo=\"cuevita@gmail.com\" \r\n                placeholderCorreoAdic=\"cuevita.1@hotmail.com\"\r\n                enEnviar={this.enviarEmpresa}/>\r\n        </div>\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrear};\r\n        obj.abierto = true;\r\n        this.setState({modalCrear:obj});\r\n    }\r\n\r\n    enviarEmpresa = () => { \r\n        \r\n        var obj = {...this.state.modalCrear};\r\n        obj.mensaje.enviado=true;\r\n        this.setState({modalCrear:obj});\r\n\r\n        Requester.postProvPersona( \r\n            this.state.modalCrear.campos.nombre,\r\n            this.state.modalCrear.campos.correo,\r\n            this.state.modalCrear.campos.num,\r\n            this.state.modalCrear.campos.numAdic,\r\n            this.state.modalCrear.campos.correoAdic,\r\n            this.state.modalCrear.campos.ciudad,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rpta;\r\n                this.setState({modalCrear:obj});\r\n                this.cargarPersonas();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrear};\r\n                obj.mensaje.recibido=true;\r\n                obj.mensaje.respuesta = rptaError;\r\n                this.setState({modalCrear:obj});\r\n            }    \r\n        );\r\n    }\r\n\r\n    cargarPersonas = () =>{\r\n        Requester.getProveedores(Constantes.AliasProovedores.PERSONA, (rpta)=>{\r\n            var personas=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idProveedor:e.idProveedor,\r\n                    nombre:e.nombre,\r\n                    correo:e.correo?e.correo:\"-\",\r\n                    correoAdic:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroContactoAdicional:e.numeroCntctAdicional?e.numeroCntctAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\"\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({personas:personas});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarPersonas();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabPersonas","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Tab, Menu, Label, Icon} from 'semantic-ui-react';\r\nimport TabHoteles from './TabHoteles/TabHoteles';\r\nimport TabTodos from './TabTodos/TabTodos';\r\nimport TabRestaurantes from './TabRestaurantes/TabRestaurantes';\r\nimport TabTransportes from './TabTransportes/TabTransportes';\r\nimport TabGuias from './TabGuias/TabGuias';\r\nimport TabOperadores from './TabOperadores/TabOperadores';\r\nimport TabEmpresas from './TabEmpresas/TabEmpresas';\r\nimport TabPersonas from './TabPersonas/TabPersonas';\r\nimport TabProovs from './TabHoteles/TabProovs';\r\nimport Constantes from '../../common/Constantes';\r\nimport Requester from '../../common/Services/Requester';\r\n\r\n\r\n\r\nclass MostradorProveedores extends Component{\r\n\r\n    state={\r\n        activeIndex:0\r\n    }\r\n\r\n    \r\n\r\n    panes = [ \r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Todos'>\r\n                    Todos \r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane>\r\n                    <TabTodos/>\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Hoteles'>\r\n                    <Icon name=\"hotel\"/>Hoteles \r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane>\r\n                    <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                    <TabProovs sust=\"Hotel\" \r\n                        sustPlural=\"Hoteles\"\r\n                        placeholderNombre=\"Arawi\" \r\n                        placeholderCorreo=\"correo@arawi.com\" \r\n                        placeholderCorreoAdic=\"arawi.ventas@gmail.com\"\r\n                        alias = {Constantes.AliasProovedores.HOTEL}\r\n                        funcEnviar = {Requester.postProvHotel}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Restaurantes'>\r\n                    <Icon name=\"food\"/>Restaurantes\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane>\r\n                    <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                    <TabProovs sust=\"Restaurant\" \r\n                        sustPlural=\"Restaurantes\"\r\n                        placeholderNombre=\"Punto Azul\" \r\n                        placeholderCorreo=\"ventas@puntoazul.com\" \r\n                        placeholderCorreoAdic=\"contacto@puntoazul.com\"\r\n                        alias = {Constantes.AliasProovedores.RESTAURANTE}\r\n                        funcEnviar = {Requester.postProvRestaurante}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Transportes'>\r\n                    <Icon name=\"truck\"/>Transportes\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane><div ></div><div></div><div></div><div></div><div></div>\r\n                    <TabProovs sust=\"Transporte\" \r\n                        sustPlural=\"Transportes\"\r\n                        placeholderNombre=\"Javier\" \r\n                        placeholderCorreo=\"javier.tran@gmail.com\" \r\n                        placeholderCorreoAdic=\"javier.tran@hotmail.com\"\r\n                        alias = {Constantes.AliasProovedores.TRANSPORTE}\r\n                        funcEnviar = {Requester.postProvTransporte}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Guias'>\r\n                    <Icon name=\"user\"/>Guias\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane><div></div><div></div><div></div><div></div>\r\n                    <TabProovs sust=\"Guia\" \r\n                        sustPlural=\"Guias\"\r\n                        placeholderNombre=\"Guia\" \r\n                        placeholderCorreo=\"carlos.guia@gmail.com\" \r\n                        placeholderCorreoAdic=\"carlos.guia@hotmail.com\"\r\n                        alias = {Constantes.AliasProovedores.GUIA}\r\n                        funcEnviar = {Requester.postProvGuia}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Operadores'>\r\n                    <Icon name=\"cog\"/>Operadores\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane>\r\n                    <div></div><div></div><div></div>\r\n                    <TabProovs sust=\"Operador\" \r\n                        sustPlural=\"Operadores\"\r\n                        placeholderNombre=\"Matias\" \r\n                        placeholderCorreo=\"correo@gmail.com\" \r\n                        placeholderCorreoAdic=\"correo.ventas@gmail.com\"\r\n                        alias = {Constantes.AliasProovedores.OPERADOR}\r\n                        funcEnviar = {Requester.postProvOperador}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Empresas'>\r\n                    <Icon name=\"building\"/>Empresas\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane>\r\n                    <div></div><div></div>\r\n                    <TabProovs sust=\"Empresa\" \r\n                        sustPlural=\"Empresas\"\r\n                        placeholderNombre=\"asda\" \r\n                        placeholderCorreo=\"empresa@gmail.com\" \r\n                        placeholderCorreoAdic=\"correo.ventas@gmail.com\"\r\n                        alias = {Constantes.AliasProovedores.EMPRESA}\r\n                        funcEnviar = {Requester.postProvEmpresa}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n        {\r\n            menuItem: (\r\n                <Menu.Item key='Personas'>\r\n                    <Icon name=\"id card\"/>Personas\r\n                </Menu.Item>\r\n            ),\r\n            render: () => {\r\n                return <Tab.Pane >\r\n                    <div></div>\r\n                    <TabProovs\r\n                        i={this.state.activeIndex}\r\n                        sust=\"Persona\" \r\n                        sustPlural=\"Personas\"\r\n                        placeholderNombre=\"Christian cueva\" \r\n                        placeholderCorreo=\"christian@gmail.com\" \r\n                        placeholderCorreoAdic=\"cuevita@gmail.com\"\r\n                        alias = {Constantes.AliasProovedores.PERSONA}\r\n                        funcEnviar = {Requester.postProvPersona}\r\n                        />\r\n                </Tab.Pane>},\r\n        },\r\n    ]\r\n\r\n    render(){\r\n        return <Tab renderActiveOnly activeIndex={this.state.activeIndex} panes={this.panes} onTabChange={(event,data)=>{\r\n            this.setState({activeIndex:data.activeIndex})\r\n            console.log(this.state.activeIndex)\r\n        }}/>\r\n    }\r\n}\r\n\r\nexport default MostradorProveedores;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Message, Icon, Input, Modal, Grid } from 'semantic-ui-react';\r\nimport ElementoForm from '../../components/ElementoForm/ElementoForm';\r\nimport MensajeTransaccion from '../../components/MensajeTransaccion/MensajeTransaccion';\r\n\r\nclass ModalCrearEditarCliente extends Component{\r\n\r\n    render(){\r\n\r\n        var msjSuccess=\"Objeto creado\";\r\n        if(this.props.parent.state.modalCrearEditar.modo === \"edicion\")\r\n            msjSuccess =\"Objeto editado exitosamente\";\r\n\r\n        var msjComp = <div></div>\r\n\r\n\r\n        return  <Modal size=\"tiny\"  open ={ this.props.parent.state.modalCrearEditar.abierto} centered={true}  onClose={() => {\r\n            var obj= {...this.props.parent.state.modalCrearEditar};\r\n            obj.abierto=false;\r\n            this.props.enCerrar();\r\n            this.props.parent.setState({modalCrearEditar:obj});\r\n        }}>\r\n\r\n            <Modal.Header>{this.props.parent.state.modalCrearEditar.modo==='creacion'?'Crear '+ this.props.sustantivoTitulo:'Modificar ' + this.props.sustantivoTitulo}</Modal.Header>\r\n            \r\n            <Modal.Content>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Nombre\">\r\n                                <Input fluid placeholder={this.props.placeholderNombre} value={this.props.parent.state.modalCrearEditar.campos.nombre} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.nombre = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}\r\n                                        />\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n                    <Grid.Row columns={2}>\r\n                        <Grid.Column>\r\n                        <ElementoForm grid titulo=\"Correo electrónico\">\r\n                                <Input \r\n                                    fluid\r\n                                    iconPosition=\"left\" placeholder={this.props.placeholderCorreo} value={this.props.parent.state.modalCrearEditar.campos.correo} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.correo = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}\r\n                                    >\r\n                                    <Icon name=\"at\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Correo electrónico adicional\">\r\n                                <Input \r\n                                    fluid\r\n                                    iconPosition=\"left\" placeholder={this.props.placeholderCorreoAdic} value={this.props.parent.state.modalCrearEditar.campos.correoAdic} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.correoAdic = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}>\r\n                                    <Icon name=\"at\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    \r\n\r\n                    <Grid.Row columns={2}>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Numero contacto\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"+57 98 957 0845\"\r\n                                    iconPosition=\"left\"\r\n                                    value={this.props.parent.state.modalCrearEditar.campos.num} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.num = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}>\r\n                                    <Icon name=\"phone\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Numero contacto adicional\">\r\n                                <Input \r\n                                    fluid\r\n                                    placeholder=\"564-8790\"\r\n                                    iconPosition=\"left\"\r\n                                    value={this.props.parent.state.modalCrearEditar.campos.numAdic} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.numAdic = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}>\r\n                                    <Icon name=\"phone\"></Icon>\r\n                                    <input />\r\n                                </Input>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n\r\n                    <Grid.Row columns={2}>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Ciudad\">\r\n                                <Input fluid placeholder=\"Medellin\" \r\n                                    value={this.props.parent.state.modalCrearEditar.campos.ciudad} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.ciudad = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <ElementoForm grid titulo=\"Pais\">\r\n                                <Input fluid placeholder=\"Colombia\" \r\n                                    value={this.props.parent.state.modalCrearEditar.campos.pais} onChange={(event)=>{\r\n                                        var obj = {...this.props.parent.state.modalCrearEditar};\r\n                                        obj.campos.pais = event.target.value;\r\n                                        this.props.parent.setState({modalCrearEditar:obj});}}/>\r\n                            </ElementoForm>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n                </Grid>\r\n                <MensajeTransaccion\r\n                    transaccionEnviada = {this.props.parent.state.modalCrearEditar.transaccionEnviada} \r\n                    responseRecibida = {this.props.parent.state.modalCrearEditar.responseRecibida}\r\n                    rptaTransaccion = {this.props.parent.state.modalCrearEditar.rptaTransaccion}\r\n                    //textoExito = \"Puede usar la nueva biblia\"\r\n                />\r\n            </Modal.Content>\r\n\r\n            <Modal.Actions>\r\n                <Button negative onClick={() => {\r\n                    var obj= {...this.props.parent.state.modalCrearEditar};\r\n                    obj.abierto=false;\r\n                    this.props.enCerrar();\r\n                    this.props.parent.setState({modalCrearEditar:obj});\r\n                    }}>\r\n                    Cancelar\r\n                </Button>\r\n                {\r\n                    this.props.parent.state.modalCrearEditar.modo==='creacion'?\r\n                    <Button positive icon='checkmark' labelPosition='right' content='Crear' onClick={ this.props.enEnviar } /> :\r\n                    <Button color=\"yellow\" icon='checkmark' labelPosition='right' content='Modificar' onClick={ this.props.enEditar}/>\r\n                }\r\n            </Modal.Actions>\r\n\r\n        </Modal>\r\n\r\n    }\r\n}\r\nexport default ModalCrearEditarCliente;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header, Menu, Modal, Confirm, Segment } from 'semantic-ui-react';\r\nimport Requester from '../../common/Services/Requester';\r\n\r\n\r\n\r\nimport TablaBuscador from '../TablaBuscador/TablaBuscador';\r\nimport ModalCrearEditarCliente from './ModalCrearEditarCliente';\r\nimport Constantes from '../../common/Constantes';\r\n\r\n\r\nclass TabClientes extends Component{\r\n\r\n    \r\n    state = {\r\n        clientesDirs:[\r\n        ],\r\n        \r\n        confirmacionEliminarAbierta:false,\r\n        idEliminar:null,\r\n        \r\n        modalCrearEditar:{\r\n            //creacion o edicion\r\n            modo:\"creacion\",\r\n            abierto:false,\r\n            transaccionEnviada:false,\r\n            responseRecibida:false,\r\n            rptaTransaccion:null,\r\n\r\n            campos:{\r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n    \r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo', accessor: 'correo', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdicional', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto', Cell: props => props.value ? props.value:\"-\" }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroAdicional', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Ciudad', accessor: 'ciudad', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Pais', accessor: 'pais', Cell: props => props.value ? props.value:\"-\" },\r\n        { Header: 'Accion', Cell: props => {\r\n            //console.log(props);\r\n            return <Container textAlign=\"center\">\r\n                <Button circular color=\"yellow\" icon=\"pencil\" \r\n                onClick={()=>{\r\n                    this.abrirModalEdicion(this.state.clientesDirs.find(element=>element.idCliente==props.original.idCliente))\r\n                    }}></Button>\r\n                <Button circular color=\"red\" icon=\"trash\" \r\n                onClick={()=>{\r\n                    this.intentarEliminar(this.state.clientesDirs.find(element=>element.idCliente==props.original.idCliente))\r\n                    }}></Button>\r\n            </Container>\r\n        }} \r\n    ]\r\n\r\n    render(){\r\n        \r\n        return <div /*style={{backgroundColor:\"#f9f9f9\"}}*/>\r\n            <Header size=\"medium\">{this.props.sustPlural}</Header> \r\n            <Button primary onClick={ this.abrirModal }>Nuevo {this.props.sust}</Button>\r\n            <Header size=\"small\">Lista</Header>\r\n            <TablaBuscador data={this.state.clientesDirs} columns={this.columnasTabla} />\r\n            {/*this.ModalCrear()*/}\r\n\r\n            <ModalCrearEditarCliente parent={this} sustantivoTitulo={this.props.sust}\r\n                placeholderNombre={this.props.placeholderNombre}\r\n                placeholderCorreo={this.props.placeholderCorreo}\r\n                placeholderCorreoAdic={this.props.placeholderCorreoAdic}\r\n                enEnviar={this.enviarCliente}\r\n                enEditar={this.editarCliente}\r\n                enCerrar={this.enCerrarModal}/>\r\n            <Confirm\r\n                open={this.state.confirmacionEliminarAbierta}\r\n                cancelButton=\"Cancelar\"\r\n                confirmButton=\"Eliminar\"\r\n                content={'Seguro que deseas eliminar el '+this.props.sust+' ' + (this.state.idEliminar ? this.state.clientesDirs.find(element => element.idCliente == this.state.idEliminar).nombre\r\n                    :\"<NULO>\") + '?'}\r\n                onCancel={this.cerrarConfirmacionEliminar}\r\n                onConfirm={()=>{this.confirmarEliminar(this.state.clientesDirs.find(element => element.idCliente == this.state.idEliminar))}}\r\n            />\r\n            <Modal></Modal>\r\n        </div>\r\n    }\r\n    \r\n    intentarEliminar=(cliente)=>{\r\n        console.log(cliente);\r\n        \r\n        if(cliente){\r\n            this.setState({\r\n                idEliminar:cliente.idCliente,\r\n                confirmacionEliminarAbierta:true\r\n            })\r\n        }\r\n    }\r\n\r\n    confirmarEliminar = (cliente) =>{\r\n        console.log(\"eliminando cliente \", cliente)\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n\r\n        if(cliente){\r\n            Requester.postEliminarCliente(cliente.idCliente,\r\n                (rpta)=>{\r\n                    this.cargarClientes();\r\n                },\r\n                (rptaError)=>{\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    cerrarConfirmacionEliminar = () =>{\r\n        this.setState({\r\n            confirmacionEliminarAbierta:false,\r\n            idEliminar:null\r\n        })\r\n    }\r\n\r\n    abrirModalEdicion= (cliente)=>{\r\n        console.log(cliente);\r\n        if(cliente){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.modo=\"edicion\";\r\n            obj.abierto=true;\r\n            obj.campos.idCliente = cliente.idCliente;\r\n            obj.campos.nombre = cliente.nombre;\r\n            obj.campos.correo = cliente.correo;\r\n            obj.campos.correoAdicional = cliente.correoAdicional;\r\n            obj.campos.nummeroContacto = cliente.numeroContacto;\r\n            obj.campos.numeroAdicional = cliente.numeroAdicional;\r\n            obj.campos.ciudad = cliente.ciudad;\r\n            obj.campos.pais = cliente.pais;\r\n            console.log(obj);\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n\r\n    abrirModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.modo=\"creacion\";\r\n        obj.abierto = true;\r\n        this.setState({modalCrearEditar:obj});\r\n    }\r\n\r\n    enviarCliente = () => { \r\n        //console.log(\"enviando!\");\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.transaccionEnviada=true;\r\n        this.setState({modalCrearEditar:obj});\r\n\r\n        //Requester.postCliente(\r\n        this.props.funcEnviar(\r\n            this.props.alias,\r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.numero,\r\n            this.state.modalCrearEditar.campos.numeroAdicional,\r\n            this.state.modalCrearEditar.campos.correoAdicional,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            this.state.modalCrearEditar.campos.pais,\r\n            (rpta)=>{\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.responseRecibida=true;\r\n                obj.rptaTransaccion = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarClientes();\r\n            },\r\n            (rptaError)=>{\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.responseRecibida=true;\r\n                obj.rptaTransaccion = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n    \r\n    editarCliente = () => { \r\n        console.log(\"editando!\");\r\n        \r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.transaccionEnviada=true;\r\n        this.setState({modalCrearEditar:obj});\r\n        //console.log(\"::::::::: \",this.state.modalCrearEditar.campos);\r\n        Requester.postEditarCliente( \r\n            this.props.alias,\r\n            this.state.modalCrearEditar.campos.idCliente,\r\n            this.state.modalCrearEditar.campos.nombre,\r\n            this.state.modalCrearEditar.campos.correo,\r\n            this.state.modalCrearEditar.campos.numero,\r\n            this.state.modalCrearEditar.campos.numeroAdicional,\r\n            this.state.modalCrearEditar.campos.correoAdicional,\r\n            this.state.modalCrearEditar.campos.ciudad,\r\n            this.state.modalCrearEditar.campos.pais,\r\n            (rpta)=>{\r\n                console.log(this.state.modalCrearEditar.campos);\r\n                console.log(\"edicion success!\");\r\n                console.log(rpta);\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.responseRecibida = true;\r\n                obj.rptaTransaccion = rpta;\r\n                this.setState({modalCrearEditar:obj});\r\n                this.cargarClientes();\r\n            },\r\n            (rptaError)=>{\r\n                //console.log(\"edicion error!\");\r\n                var obj = {...this.state.modalCrearEditar};\r\n                obj.responseRecibida = true;\r\n                obj.rptaTransaccion = rptaError;\r\n                this.setState({modalCrearEditar:obj});\r\n            })\r\n    }\r\n\r\n    cargarClientes= () =>{\r\n        //console.log(\"aweeeee\");\r\n        Requester.getClientesFullDetallado(this.props.alias, (rpta)=>{\r\n            var clientesDirs=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idCliente:e.idCliente,\r\n                    nombre:e.nombre,\r\n                    correo:e.correoContacto,\r\n                    correoAdicional:e.correoAdicional,\r\n                    numeroContacto:e.numeroContacto,\r\n                    numeroAdicional:e.numeroAdicional,\r\n                    ciudad:e.ciudad,\r\n                    pais:e.pais,\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({clientesDirs:clientesDirs});\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarClientes();\r\n    }\r\n\r\n    enCerrarModal = () =>{\r\n        var obj = {...this.state.modalCrearEditar};\r\n        obj.responseRecibida=false;\r\n        obj.transaccionEnviada=false;\r\n        obj.rptaTransaccion=null;\r\n\r\n        if(this.state.modalCrearEditar.modo === \"edicion\"){\r\n            var obj = {...this.state.modalCrearEditar};\r\n            obj.campos.id=null;\r\n            obj.campos.nombre=null;\r\n            obj.campos.correo=null;\r\n            obj.campos.correoAdic=null;\r\n            obj.campos.num=null;\r\n            obj.campos.numAdic=null;\r\n            obj.campos.ciudad=null;\r\n            obj.campos.pais=null;\r\n            this.setState({modalCrearEditar:obj});\r\n        }\r\n    }\r\n}\r\n\r\nexport default TabClientes","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Button, Container, Header, Menu } from 'semantic-ui-react';\r\nimport ReactTable from \"react-table\";\r\nimport Requester from '../../../common/Services/Requester';\r\nimport Constantes from '../../../common/Constantes';\r\nimport TablaBuscador from '../../TablaBuscador/TablaBuscador';\r\n\r\n\r\nclass TabTodosClientes extends Component{\r\n\r\n    state = {\r\n        clientes:[\r\n        ]\r\n    }\r\n    \r\n\r\n    columnasTabla = [ \r\n        { Header: 'Nombre', accessor: 'nombre' },\r\n        { Header: 'Correo', accessor: 'correoContacto' },\r\n        { Header: 'Correo Adic.',accessor: 'correoAdicional' }, \r\n        { Header: 'Numero contacto',accessor: 'numeroContacto' }, \r\n        { Header: 'Numero contacto adicional', accessor: 'numeroContactoAdicional' },\r\n        { Header: 'Ciudad', accessor: 'ciudad' },\r\n        { Header: 'Tipo', accessor: 'tipo'  }\r\n    ]\r\n\r\n    render = () => {\r\n        return <div>\r\n            <Header size=\"medium\">Todos los clientes</Header> \r\n            {/*<Header size=\"small\">Lista</Header>*/}\r\n            <TablaBuscador data={this.state.clientes} columns={this.columnasTabla} />\r\n        </div>\r\n    }\r\n\r\n    cargarTodos = () =>{ \r\n        Requester.getClientesFullDetallado( \"\" , (rpta)=>{\r\n            var clientes=rpta.cont.map((e,i)=>{\r\n                var h = {\r\n                    idCliente:e.idCliente,\r\n                    nombre:e.nombre,\r\n                    correo:e.correoContacto?e.correoContacto:\"-\",\r\n                    correoAdicional:e.correoAdicional?e.correoAdicional:\"-\",\r\n                    numeroContacto:e.numeroContacto?e.numeroContacto:\"-\",\r\n                    numeroAdicional:e.numeroAdicional?e.numeroAdicional:\"-\",\r\n                    ciudad:e.ciudad?e.ciudad:\"-\",\r\n                    pais:e.pais?e.pais:\"-\",\r\n                    tipo: e.tipo?Constantes.aliasATextoClientes(e.tipo):'-'\r\n                }\r\n                return h;\r\n            });\r\n            this.setState({clientes:clientes});\r\n        });\r\n        console.log(\"clientes\",this.state.clientes)\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargarTodos();\r\n    }\r\n    \r\n}\r\n\r\nexport default TabTodosClientes","import React from 'react'\r\nimport {Component} from 'react'\r\nimport { Tab, Menu, Label, Icon} from 'semantic-ui-react';\r\nimport TabClientes from './TabClientes';\r\nimport Requester from '../../common/Services/Requester';\r\nimport Constantes from '../../common/Constantes';\r\nimport TabTodosClientes from './TabTodos/TabTodosClientes';\r\n\r\nconst panes = [ \r\n    {\r\n        menuItem: (\r\n            <Menu.Item key='Todos'>\r\n                Todos \r\n            </Menu.Item>\r\n        ),\r\n        render: () => {\r\n            return <Tab.Pane>\r\n                <TabTodosClientes/>\r\n            </Tab.Pane>},\r\n    },\r\n    {\r\n        menuItem: (\r\n            <Menu.Item key='clienteDirecto'>\r\n                <Icon name=\"user\"/>Cliente Directo\r\n            </Menu.Item>\r\n        ),\r\n        render: () => {\r\n            return <Tab.Pane>\r\n                \r\n                <TabClientes sust=\"Cliente directo\" \r\n                    sustPlural=\"Clientes directos\"\r\n                    placeholderNombre=\"Juan\" \r\n                    placeholderCorreo=\"Juan@gmail.com\" \r\n                    placeholderCorreoAdic=\"juan.agencia@gmail.com\"\r\n                    alias = {Constantes.AliasClientes.CLIENTE_DIRECTO}\r\n                    funcEnviar = {Requester.postCliente}\r\n                    />\r\n            </Tab.Pane>},\r\n    },\r\n    {\r\n        menuItem: (\r\n            <Menu.Item key='OpMinorista'>\r\n                <Icon name=\"box\"/>Operador minorista\r\n            </Menu.Item>\r\n        ),\r\n        render: () => {\r\n            return <Tab.Pane>\r\n                <div></div>\r\n                <TabClientes sust=\"Operador minorista\" \r\n                    sustPlural=\"Minoristas\"\r\n                    placeholderNombre=\"NTS\" \r\n                    placeholderCorreo=\"mariana@nts.com.gt\" \r\n                    placeholderCorreoAdic=\"-\"\r\n                    alias = {Constantes.AliasClientes.OPERADOR_MINORISTA}\r\n                    funcEnviar = {Requester.postCliente}\r\n                    />\r\n            </Tab.Pane>},\r\n    },\r\n    {\r\n        menuItem: (\r\n            <Menu.Item key='opMayorista'>\r\n                <Icon name=\"boxes\"/>Operador mayorista \r\n            </Menu.Item>\r\n        ),\r\n        render: () => {\r\n            return <Tab.Pane>\r\n                <div></div><div></div>\r\n                <TabClientes sust=\"Operador mayorista\" \r\n                    sustPlural=\"Mayoristas\"\r\n                    placeholderNombre=\"Eurolatina\" \r\n                    placeholderCorreo=\"acaiminagua@eurolatina.com.ec\" \r\n                    placeholderCorreoAdic=\"achala@eurolatina.com.ec\"\r\n                    alias = {Constantes.AliasClientes.OPERADOR_MAYORISTA}\r\n                    funcEnviar = {Requester.postCliente}\r\n                    />\r\n            </Tab.Pane>},\r\n    }\r\n  ]\r\n\r\nclass VerClientes extends Component{\r\n\r\n    render(){\r\n        return <Tab panes={panes} />\r\n    }\r\n}\r\nexport default VerClientes","import React from 'react';\r\nimport {Component} from 'react';\r\nimport moment from 'moment'\r\nimport BigCalendar from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { Segment } from 'semantic-ui-react';\r\n\r\n\r\nconst localizer = BigCalendar.momentLocalizer(moment)\r\n\r\nclass VerCalendario extends Component{\r\n\r\n\r\n    state={\r\n        events:[ \r\n        ]\r\n    }\r\n\r\n    render(){\r\n                \r\n        return <Segment style={{height:\"800px\"}}>\r\n            <BigCalendar\r\n                localizer={localizer}\r\n                events={this.state.events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n            />\r\n        </Segment>\r\n    }\r\n}\r\n\r\nexport default VerCalendario;","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Button } from 'semantic-ui-react';\r\nimport ContainedComponent from '../../components/ContainedComponent';\r\n\r\nclass ModalPrueba1 extends ContainedComponent {\r\n    \r\n    render = () => {\r\n\r\n        return <div>\r\n            <p>1:</p>\r\n            <Button onClick={() => {\r\n                console.log(\"obj:\", this.props.parent.state[this.props.pack]);\r\n\r\n\r\n                var c = this.getParentContainer();\r\n                c.valor1+=\"3\";\r\n                this.UpdateParentContainer({...this.getParentContainer(),valor1:\"ctmre!\"});\r\n/*\r\n                var obj = { ...this.props.parent.state[this.props.pack] };\r\n                obj.valor1 += \"2\";\r\n                obj.valor2 += \"b2\";\r\n\r\n                console.log(\"OBJ: \", obj);\r\n                this.props.parent.setState({ [this.props.pack]: obj })*/\r\n\r\n                console.log(\"obj cambiado:\", this.props.parent.state);\r\n                console.log(\"obj cambiado:\", this.props.parent);\r\n            }}>\r\n                Cambiar estado!\r\n            </Button>\r\n        </div>\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ModalPrueba1;","import React from 'react'\r\nimport {Component} from 'react'\r\nimport ModalPrueba1 from './ModalPrueba1';\r\n\r\nclass Pruebas extends Component{\r\n\r\n    state={\r\n        modal:{\r\n            //parent:this,\r\n            valor1:\"a\",\r\n            valor2:\"b\"\r\n        }\r\n    }\r\n\r\n    render = () =>{\r\n        return <div> \r\n            <ModalPrueba1 parent={this} pack=\"modal\"/>\r\n        </div>\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Pruebas;","import React from 'react'\r\nimport { Component } from 'react';\r\nimport './NavBar.css';\r\nimport { Link } from 'react-router-dom'\r\nimport { Grid, Button, Menu, Image, Header, Container, Segment, Flag, Icon } from 'semantic-ui-react'\r\nimport { Configuracion } from '../../common/Constantes'\r\n\r\nimport LogoYllari from '../../assets/logo_yllari.png'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport momentTz from 'moment-timezone'\r\nimport 'moment/locale/es-us'\r\n\r\nclass NavBar extends Component {\r\n\r\n    capitalize = (string) => {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n    state = {\r\n        enlace: '',\r\n        usuarioNombre: '',\r\n        fecha:this.capitalize(moment().tz('America/Lima').format('dddd D')) + ' de ' + moment().tz('America/Lima').format('MMMM'),\r\n        hora:moment().tz('America/Lima').format('LT')\r\n    }\r\n\r\n    componentDidMount() {\r\n        moment().locale(\"es\");\r\n        this.timerID = setInterval(() => this.tick(), 5000);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            fecha:this.capitalize(moment().tz('America/Lima').format('dddd D')) + ' de ' + moment().tz('America/Lima').format('MMMM'),\r\n            hora:moment().tz('America/Lima').format('LT')\r\n        });\r\n    }\r\n\r\n    navegar(direccion) {\r\n        this.props.history.push(direccion);\r\n    }\r\n    render() {\r\n        let nombre = \"\";\r\n        let genero = 0;\r\n        if (this.props.usuario) {\r\n            nombre = this.props.usuario.nombre;\r\n            genero = this.props.usuario.genero;\r\n        }\r\n        return (\r\n            <div>\r\n                <Menu /*style={{backgroundColor:\"#ffb366\"}}*/ size=\"huge\" stackable >\r\n                    <Menu.Item >\r\n                        <img src={LogoYllari} />\r\n                    </Menu.Item>\r\n                    {Configuracion.EnlacesNavBar.map((element) => {\r\n                        return <Menu.Item as='a' active={this.state.enlace === element.nombre}\r\n                            onClick={() => { this.setState({ enlace: element.nombre }); this.navegar(element.valor) }}>\r\n                            {element.nombre}\r\n                            {/*<Link to={element.valor} style={{color:\"black\"}}>{element.nombre}</Link>*/}\r\n                        </Menu.Item>\r\n                    })}\r\n\r\n                    <Menu.Menu position='right'>\r\n                        <Menu.Item style={{ padding: \"4px 16px\" }}>\r\n                            <div style={{ lineHeight: \"1.4\" }}>\r\n                                <div style={{ fontSize: \"11px\" }}>{this.state.fecha}{/*Martes, 21 de Mayo*/}</div>\r\n                                <Flag name='pe' />{' '}<b>{this.state.hora}</b>\r\n                            </div>\r\n                        </Menu.Item>\r\n                        <Menu.Item style={{ padding: \"4px 16px\" }}>\r\n                            {genero == 0 ? \"Bienvenido\" : \"Bienvenida\"},{' '}<br /><b>{nombre ? nombre : \"usuario\"}</b>\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                            <Button size=\"massive\" style={{ backgroundColor: \"#00000000\", padding: \"13.3px 5px\" }} icon onClick={() => {\r\n                                this.props.cerrarSesionHandler();\r\n                            }}>\r\n                                <Icon size=\"large\" name='power off' />\r\n                            </Button>\r\n                            {/*\r\n                            <Button as='a' onClick={() => {\r\n                                this.props.cerrarSesionHandler();\r\n                            }}>\r\n                                Cerrar sesión\r\n                                </Button>\r\n                                */}\r\n                        </Menu.Item>\r\n                    </Menu.Menu>\r\n                </Menu>\r\n\r\n                {/*\r\n                <Grid>\r\n                    <Grid.Row className=\"Spaced\">\r\n\r\n                        <Grid.Column width={4} verticalAlign=\"middle\" textAlign=\"left\">\r\n                            <Image src ={LogoYllari} size=\"tiny\"></Image>\r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column width={8} textAlign=\"center\"  verticalAlign=\"middle\">\r\n                            <Grid columns=\"equal\">\r\n                                <Grid.Row >\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/inicio\"><h4>Inicio</h4></Link>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/files\"><h4>Files</h4></Link>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/servicios\"><h4>Servicios</h4></Link>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/transportes\"><h4>Transportes</h4></Link>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/clientes\"><h4>Clientes</h4></Link>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                        <Link to=\"/calendario\"><h4>Calendario</h4></Link>\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                            </Grid>\r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column width ={4} textAlign=\"right\"  verticalAlign=\"middle\">\r\n                            <Link floated=\"right\" to=\"/inicio\">Cerrar sesión</Link>\r\n                        </Grid.Column>\r\n\r\n                    </Grid.Row>\r\n                </Grid>\r\n\r\n                */}\r\n\r\n\r\n                {/*\r\n                    <Link to=\"/inicio\">Inicio</Link>\r\n                    <Link to=\"/files\">Files</Link>\r\n                    <Link to=\"/servicios\">Servicios</Link>\r\n                <Link to=\"/transportes\">Transportes</Link>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport { Grid, Header, Image, Form, Button, Segment, Message, Divider, Input } from 'semantic-ui-react';\r\nimport './Auth.css'\r\n\r\nimport LogoYllari from '../../assets/logo_yllari.png'\r\nimport Requester from '../../common/Services/Requester';\r\nimport MensajeTransaccion from '../../components/MensajeTransaccion/MensajeTransaccion';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        usuario: \"\",\r\n        clave: \"\",\r\n\r\n        transaccionEnviada: false,\r\n        responseRecibida: false,\r\n        rptaTransaccion: null,\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Header as='h2' color='black' textAlign='center'>\r\n                            <Image src={LogoYllari} size=\"massive\" />\r\n                            <Divider hidden />\r\n                            Gestor de Recursos Yllari Travel\r\n                        </Header>\r\n                        <Form size='large'>\r\n                            <Segment >\r\n                                <Form.Input value={this.state.usuario}\r\n                                    onChange={(event) => { this.setState({ usuario: event.target.value }) }}\r\n                                    fluid icon='user' iconPosition='left' placeholder='Usuario' />\r\n                                <Form.Input value={this.state.clave}\r\n                                    onChange={(event) => {\r\n                                        this.setState({ clave: event.target.value })\r\n                                    }}\r\n                                    fluid\r\n                                    icon='lock'\r\n                                    iconPosition='left'\r\n                                    placeholder='Contraseña'\r\n                                    type='password'\r\n                                />\r\n                                <Button color='orange' fluid size='large'\r\n                                    onClick={() => {\r\n\r\n                                        this.setState({ transaccionEnviada: true,\r\n                                            responseRecibida: false });\r\n\r\n                                        console.log(\"asd!\", this.state);\r\n                                        Requester.postLogin(\r\n                                            {\r\n                                            username: this.state.usuario,\r\n                                            password: this.state.clave\r\n                                        },\r\n                                            (rpta) => {\r\n\r\n                                                var token = rpta.cont.token;\r\n\r\n                                                localStorage.setItem(\"token\", token);\r\n                                                var pack = { token: token };\r\n\r\n                                                Requester.getInfo((rpta) => {\r\n                                                    //console.log(\"Infooooo:\",rpta.cont)\r\n                                                    pack.usuario = {\r\n                                                        usuario: rpta.cont.usr,\r\n                                                        rol: rpta.cont.rol,\r\n                                                        nombre:rpta.cont.nombrePersona,\r\n                                                        correo: rpta.cont.correoPersona,\r\n                                                        genero:rpta.cont.genero\r\n                                                    }\r\n                                                    pack.mostrarContenido = true;\r\n                                                    this.props.loggedInHandler(pack);\r\n                                                }, (error, errorCompleto) => {\r\n                                                    //error etc\r\n                                                }, null, token)\r\n\r\n\r\n                                            }, (rpta) => {\r\n                                                this.setState({\r\n                                                    responseRecibida: true,\r\n                                                    rptaTransaccion: rpta\r\n                                                });\r\n                                            }\r\n                                        );\r\n\r\n                                        /*\r\n                                        var token = //\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjEiLCJyb2xlIjoiQWRtaW4iLCJuYmYiOjE1NTgzNDkyNDAsImV4cCI6MTU1ODk1NDA0MCwiaWF0IjoxNTU4MzQ5MjQwfQ.H-jsWOpteqIrJo9rkT8Z8_xd3XKHs8aEE6YVwQMoXlw\";\r\n                                        \r\n                                        localStorage.setItem(\"token\",token);\r\n                                        var pack = {token:token};\r\n                                        \r\n                                        Requester.getInfo((rpta)=>{\r\n                                            //console.log(\"Infooooo:\",rpta.cont)\r\n                                            pack.usuario={\r\n                                                    usuario:rpta.cont.usr,\r\n                                                    rol:rpta.cont.rol\r\n                                                }\r\n                                            pack.mostrarContenido=true;\r\n                                            this.props.loggedInHandler(pack);\r\n                                        }, (error,errorCompleto)=>{\r\n                                            //error etc\r\n                                        }, null, token)\r\n                                        */\r\n                                    }\r\n                                    }>\r\n                                    Ingresar\r\n                                </Button>\r\n\r\n\r\n                                <MensajeTransaccion\r\n                                    transaccionEnviada={this.state.transaccionEnviada}\r\n                                    responseRecibida={this.state.responseRecibida}\r\n                                    rptaTransaccion={this.state.rptaTransaccion} />\r\n                                {/*\r\n                                <Button color='orange' fluid size='large' onClick={\r\n                                    ()=>{\r\n                                        localStorage.removeItem(\"token\")\r\n                                    }\r\n                                }>sacar token</Button>\r\n                            */}\r\n                            </Segment>\r\n                        </Form>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Auth;","import React from 'react'\r\nimport { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport ViewFiles from '../ViewFiles/ViewFiles'\r\n\r\nimport './MainContent.css';\r\nimport CrearFile from '../ViewFiles/CrearFile/CrearFile';\r\nimport { Grid, Segment } from 'semantic-ui-react'\r\nimport Inicio from '../Inicio/Inicio';\r\nimport VerServicios from '../VerServicios/VerServicios';\r\nimport CrearServicio from '../VerServicios/CrearServicio/CrearServicio';\r\nimport ListaBiblias from '../VerBiblias/VerBiblias';\r\nimport MostradorProveedores from '../MostradorProovedores/MostradorProveedores';\r\nimport VerClientes from '../VerClientes/VerClientes';\r\nimport VerCalendario from '../Calendario/VerCalendario';\r\nimport Pruebas from '../Test/Pruebas';\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport Auth from '../Auth/Auth';\r\nimport Requester from '../../common/Services/Requester';\r\n\r\nclass MainContent extends Component {\r\n\r\n    state = {\r\n        mostrarContenido: false,\r\n        //logueado: false,\r\n        token: null,\r\n        usuario: null\r\n    }\r\n\r\n    cerrarSesion = () => {\r\n        localStorage.removeItem(\"token\");\r\n\r\n        this.setState({\r\n            token: null,\r\n            mostrarContenido: true,\r\n            usuario: null\r\n        });\r\n    }\r\n\r\n\r\n    loggedInHandler = (obj) => {\r\n        //console.log(\"aaaaaaaa: \"+obj);\r\n        this.setState({\r\n            token: obj.token,\r\n            mostrarContenido: true,\r\n            usuario: obj.usuario\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        //console.log(\"hah!\");\r\n        var token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            console.log(\"HAY TOKEN!!!!!\")\r\n            //si hay token guardado\r\n            Requester.getInfo((rpta) => {\r\n                console.log(\"Info:\", rpta.cont)\r\n                this.setState({\r\n                    usuario:\r\n                    {\r\n                        usuario: rpta.cont.usr,\r\n                        rol: rpta.cont.rol,\r\n                        nombre: rpta.cont.nombrePersona,\r\n                        correo: rpta.cont.correoPersona,\r\n                        genero: rpta.cont.genero\r\n                    },\r\n\r\n                    mostrarContenido: true\r\n                });\r\n            }, (error, errorCompleto) => {\r\n\r\n                this.setState({ mostrarContenido: true, usuario: null });\r\n            }, null, token)\r\n        } else {\r\n            console.log(\"NO HAY TOKEN!!!!!\")\r\n            //si no hay token guardado\r\n            this.setState({ mostrarContenido: true, usuario: null });\r\n        }\r\n\r\n        //localStorage.removeItem(\"token\");\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.mostrarContenido)\r\n            return <div>Cargando!</div>\r\n\r\n        let contenido = (\r\n            <div>\r\n                <Route component={(props) => { return <NavBar usuario={this.state.usuario} history={props.history} cerrarSesionHandler={this.cerrarSesion} /> }} />\r\n                <div className=\"MainContent\">\r\n                    <Grid>\r\n                        <Grid.Row>\r\n                            <Grid.Column width={1}></Grid.Column>\r\n                            <Grid.Column width={13}>\r\n                                {/*<br />*/}\r\n                                <Switch>\r\n                                    <Route path=\"/pruebas\" exact component={Pruebas} />\r\n                                    <Route path=\"/inicio\" exact component={Inicio} />\r\n                                    <Route path=\"/files\" exact component={ViewFiles} />\r\n                                    <Route path=\"/files/crear\" exact component={(a) => { return <CrearFile modo=\"crear\" /> }} />\r\n                                    <Route path=\"/file/ver/:idFile\" exact component={(obj) => {/*console.log(\"@@@@@@@@\",obj);*/return <CrearFile modo=\"ver\" idFile={obj.match.params.idFile} /> }} />\r\n                                    <Route path=\"/file/editar/:idFile\" exact component={(obj) => { return <CrearFile modo=\"editar\" idFile={obj.match.params.idFile} /> }} />\r\n                                    <Route path=\"/servicios\" exact component={VerServicios} />\r\n                                    <Route path=\"/servicios/crear\" exact component={CrearServicio} />\r\n                                    <Route path=\"/biblias\" exact component={ListaBiblias} />\r\n                                    <Route path=\"/proveedores\" exact component={MostradorProveedores} />\r\n                                    <Route path=\"/clientes\" exact component={VerClientes} />\r\n                                    <Route path=\"/calendario\" exact component={VerCalendario} />\r\n                                    <Route path=\"/\" exact component={Inicio} />\r\n                                    <Route component={() => { return <div>404!</div> }} />\r\n                                </Switch>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={1}></Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </div>\r\n            </div>);\r\n\r\n        if (!this.state.usuario) {\r\n            contenido = (\r\n                <div className=\"LoginContent\">\r\n                    <Switch>\r\n                        {/*<Route path=\"/calendario\" exact component={VerCalendario} />*/}\r\n                        <Route component={() => { return <Auth loggedInHandler={this.loggedInHandler} /> }} />\r\n                    </Switch>\r\n                </div>);\r\n        }\r\n\r\n        return (contenido);\r\n    }\r\n\r\n}\r\n\r\nexport default MainContent;","import React, { Component } from 'react';\nimport './App.css';\nimport MainContent from './containers/MainContent/MainContent';\nimport {BrowserRouter, Route} from 'react-router-dom'; \n\nclass App extends Component {\n  render() {\n    \n    var sectionStyle = {\n      //backgroundImage: `url(${Background})`\n    };\n\n    return (\n      <BrowserRouter>\n          <MainContent/>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}